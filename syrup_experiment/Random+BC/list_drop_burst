([1,0,1],0) -> [1,0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0173 false

([1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,3],1) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0411 false

([3,3,0],0) -> [3,3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0319 false

([3,1,2],1) -> [1,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1455 false

([3,2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,3,3],1) -> [3,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1583 false

([2,0],1) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0351 false

([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([0],2) -> [];
([1,1,0],2) -> [0];
 ([], 0) -> [];

=================================
None
([2,0],0) -> [2,0];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1831 false

([2,1],0) -> [2,1];
([2,3,3],1) -> [3,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

1.7772 false

([0],1) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0002 false

([2,3],1) -> [3];
([1,0,1],1) -> [0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.1054 false

([3],1) -> [];
([3,3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1],3) -> [];
([1,0,3],2) -> [3];
 ([], 0) -> [];

=================================
None
([0,1],0) -> [0,1];
([1,3,0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

4.7253 false

([3],1) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,3,3],1) -> [3,3];
([2,3],0) -> [2,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

1.6622 false

([1,1,1],2) -> [1];
([2],0) -> [2];
([0,0,3],3) -> [];
 ([], 0) -> [];

=================================
None
([2,3],3) -> [];
([2,2,3],2) -> [3];
([0,0],0) -> [0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

2.4604 false

([3],0) -> [3];
([3,0,1],1) -> [0,1];
([1,2],3) -> [];
 ([], 0) -> [];

=================================
None
([3,2],0) -> [3,2];
([0,1,2],3) -> [];
([2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4550 false

([2,3,3],2) -> [3];
([2,2,3],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([0],0) -> [0];
([0,0,2],2) -> [2];
([3,3],1) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1

80.6481 false

([3,3,3],3) -> [];
([2,1,1],0) -> [2,1,1];
([0,0,1],0) -> [0,0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

9.0650 false

([3],2) -> [];
([0],1) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0305 false

([2,1,3],0) -> [2,1,3];
([1,1],3) -> [];
([1,1,2],0) -> [1,1,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.4110 false

([0,1,0],2) -> [0];
([2],3) -> [];
([2,1],3) -> [];
 ([], 0) -> [];

=================================
None
([0],0) -> [0];
([3,3],0) -> [3,3];
([1,1],0) -> [1,1];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0243 false

([3,1,3],0) -> [3,1,3];
([0,1,1],3) -> [];
([1],1) -> [];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5677 false

([0,2,2],0) -> [0,2,2];
([1,3,2],0) -> [1,3,2];
([2,1],3) -> [];
([3,2],0) -> [3,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.9248 false

([0,3],3) -> [];
([1],3) -> [];
([3],1) -> [];
([1,0],0) -> [1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.9082 false

([0,0,3],2) -> [3];
([2,1],2) -> [];
([3,0,1],3) -> [];
([1],1) -> [];
 ([], 0) -> [];

=================================
None
([0],3) -> [];
([0,1,3],1) -> [1,3];
([0,1],1) -> [1];
([2,3,0],1) -> [3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.2923 false

([2,2,1],1) -> [2,1];
([3,3,2],1) -> [3,2];
([2,1],2) -> [];
([2,2,3],2) -> [3];
 ([], 0) -> [];

=================================
None
([2],0) -> [2];
([1,2],1) -> [2];
([1,0,1],0) -> [1,0,1];
([1,2,0],1) -> [2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0239 false

([2,0,2],0) -> [2,0,2];
([2],0) -> [2];
([1,3,0],1) -> [3,0];
([3,3,3],2) -> [3];
 ([], 0) -> [];

=================================
None
([1,0,1],2) -> [1];
([0],2) -> [];
([2,2,0],0) -> [2,2,0];
([1,3],0) -> [1,3];
 ([], 0) -> [];

=================================
None
([3,0,2],0) -> [3,0,2];
([1],3) -> [];
([3,2],3) -> [];
([0],0) -> [0];
([3,0,0],0) -> [3,0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4659 false

([0,3],2) -> [];
([2,1,1],3) -> [];
([1,3,3],0) -> [1,3,3];
([2],3) -> [];
([2],0) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5377 false

([0,1],1) -> [1];
([1],3) -> [];
([3,0,1],1) -> [0,1];
([2,1],1) -> [1];
([1,1,2],1) -> [1,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0334 false

([0,3,3],0) -> [0,3,3];
([3],1) -> [];
([0,2,3],2) -> [3];
([0],2) -> [];
([0,0,1],0) -> [0,0,1];
 ([], 0) -> [];

=================================
None
([1,2,1],0) -> [1,2,1];
([3,3,0],0) -> [3,3,0];
([1],1) -> [];
([3,3],3) -> [];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4664 false

([3,2,1],1) -> [2,1];
([3],2) -> [];
([2],2) -> [];
([2,2],0) -> [2,2];
([1,0,1],0) -> [1,0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

1.1232 false

([1,2],3) -> [];
([2,3],0) -> [2,3];
([2,0,0],0) -> [2,0,0];
([2,2,1],3) -> [];
([1,3,0],0) -> [1,3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.9875 false

([1,2,0],2) -> [0];
([1,0,1],2) -> [1];
([3,1],1) -> [1];
([2,2],3) -> [];
([2],3) -> [];
 ([], 0) -> [];

=================================
None
([0,2,1],0) -> [0,2,1];
([1,2],0) -> [1,2];
([0],1) -> [];
([3,0,0],2) -> [0];
([2,2,0],2) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1))

38.6417 false

([2,0,1],0) -> [2,0,1];
([0],0) -> [0];
([3],2) -> [];
([3,3,0],3) -> [];
([1,1],0) -> [1,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

2.0768 false

([3,2],1) -> [2];
([1,3,0],2) -> [0];
([3,0],2) -> [];
([1,2],0) -> [1,2];
([3,1],3) -> [];
([3],0) -> [3];
 ([], 0) -> [];

=================================
None
([0,2,1],2) -> [1];
([1,3],3) -> [];
([0,3],2) -> [];
([0,2],2) -> [];
([0],3) -> [];
([0],2) -> [];
 ([], 0) -> [];

=================================
None
([2,0],1) -> [0];
([0],1) -> [];
([1,3,1],2) -> [1];
([3,2],1) -> [2];
([1],0) -> [1];
([1,2,0],3) -> [];
 ([], 0) -> [];

=================================
None
([0],2) -> [];
([3,3,3],2) -> [3];
([2],2) -> [];
([2,0],3) -> [];
([3],1) -> [];
([0,3,2],3) -> [];
 ([], 0) -> [];

=================================
None
([1,3],1) -> [3];
([1,1],1) -> [1];
([0,3],2) -> [];
([2],1) -> [];
([2,0,0],3) -> [];
([0,2,0],0) -> [0,2,0];
 ([], 0) -> [];

=================================
None
([0,0,1],2) -> [1];
([3],3) -> [];
([2,2,2],2) -> [2];
([3,3,1],3) -> [];
([2,2],2) -> [];
([2,1],0) -> [2,1];
 ([], 0) -> [];

=================================
None
([3,0],3) -> [];
([2],3) -> [];
([3,0],1) -> [0];
([1],3) -> [];
([3,0,3],3) -> [];
([0,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> Un_Cons (x . 0) . 1
                     | S _ -> Nil)

117.3023 false

([2,1,0],1) -> [1,0];
([1,0,2],1) -> [0,2];
([0],3) -> [];
([0,2,2],0) -> [0,2,2];
([0,2,0],2) -> [0];
([3],3) -> [];
 ([], 0) -> [];

=================================
None
([3,1,3],0) -> [3,1,3];
([2,1,3],3) -> [];
([2,3,0],0) -> [2,3,0];
([3],3) -> [];
([2,1,3],1) -> [1,3];
([2],0) -> [2];
 ([], 0) -> [];

=================================
None
([1],2) -> [];
([1,0,0],0) -> [1,0,0];
([3,3,0],0) -> [3,3,0];
([1,3],0) -> [1,3];
([3,0,3],3) -> [];
([2,2,0],0) -> [2,2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

2.2184 false

([2],3) -> [];
([0],0) -> [0];
([1],2) -> [];
([2,3],3) -> [];
([3],1) -> [];
([1,2],0) -> [1,2];
([3,2],1) -> [2];
 ([], 0) -> [];

=================================
None
([1,3],1) -> [3];
([2,3,3],0) -> [2,3,3];
([0,2,1],1) -> [2,1];
([1,3],0) -> [1,3];
([0],0) -> [0];
([1],2) -> [];
([2,2,2],2) -> [2];
 ([], 0) -> [];

=================================
None
([0,2],2) -> [];
([1,0],1) -> [0];
([2,2,1],1) -> [2,1];
([2],3) -> [];
([2],0) -> [2];
([3],1) -> [];
([1],1) -> [];
 ([], 0) -> [];

=================================
None
([0],3) -> [];
([3,1],0) -> [3,1];
([2],0) -> [2];
([0,1,3],1) -> [1,3];
([2,0,1],1) -> [0,1];
([3,0,1],3) -> [];
([3,2],2) -> [];
 ([], 0) -> [];

=================================
None
([1],1) -> [];
([2,2],2) -> [];
([2,2],1) -> [2];
([1],2) -> [];
([2,0],3) -> [];
([1,3],3) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

35.1272 false

([3],2) -> [];
([2,0],1) -> [0];
([3,0,1],3) -> [];
([0,1,3],2) -> [3];
([1,0],0) -> [1,0];
([2,0],3) -> [];
([0],2) -> [];
 ([], 0) -> [];

=================================
None
([2,3],0) -> [2,3];
([3,3,1],3) -> [];
([0],2) -> [];
([2],0) -> [2];
([0],3) -> [];
([0,2,2],1) -> [2,2];
([2,2],1) -> [2];
 ([], 0) -> [];

=================================
None
([1,0],0) -> [1,0];
([1,1,2],3) -> [];
([2,3,2],1) -> [3,2];
([2,2],1) -> [2];
([0,0,1],1) -> [0,1];
([2,0,2],2) -> [2];
([2,2],3) -> [];
 ([], 0) -> [];

=================================
None
([1],2) -> [];
([1],1) -> [];
([3,3],3) -> [];
([2,0],0) -> [2,0];
([3,2],3) -> [];
([0,2,3],1) -> [2,3];
([0],3) -> [];
 ([], 0) -> [];

=================================
None
([0,0],3) -> [];
([3,1],1) -> [1];
([2],0) -> [2];
([2,0],3) -> [];
([0,2],2) -> [];
([1],3) -> [];
([3,0,2],0) -> [3,0,2];
 ([], 0) -> [];

=================================
None
([2],1) -> [];
([3,2],2) -> [];
([3,2],0) -> [3,2];
([1],0) -> [1];
([3],2) -> [];
([2,3],0) -> [2,3];
([3],1) -> [];
([1,1,3],1) -> [1,3];
 ([], 0) -> [];

=================================
None
([3],0) -> [3];
([2,3,3],2) -> [3];
([2,3],3) -> [];
([0],3) -> [];
([0,1,0],3) -> [];
([0,3],0) -> [0,3];
([1,3,3],2) -> [3];
([0,3,0],3) -> [];
 ([], 0) -> [];

=================================
None
([3],1) -> [];
([3],2) -> [];
([0,1],0) -> [0,1];
([3,0,2],1) -> [0,2];
([2,0,3],0) -> [2,0,3];
([2],0) -> [2];
([2,2,3],0) -> [2,2,3];
([1],0) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.0366 false

([0,1],0) -> [0,1];
([2],3) -> [];
([2,2],3) -> [];
([1],1) -> [];
([2,1,0],0) -> [2,1,0];
([2],0) -> [2];
([1],2) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.4827 false

([3,0,3],0) -> [3,0,3];
([2,0,0],3) -> [];
([1],2) -> [];
([0,0],2) -> [];
([0],3) -> [];
([3,1],1) -> [1];
([3,2,0],0) -> [3,2,0];
([1,3,1],2) -> [1];
 ([], 0) -> [];

=================================
None
([2,0,2],3) -> [];
([3,1,1],2) -> [1];
([3],1) -> [];
([1],1) -> [];
([3,2],2) -> [];
([3,0,0],1) -> [0,0];
([3,3,3],1) -> [3,3];
([3,1],0) -> [3,1];
 ([], 0) -> [];

=================================
None
([2,3],3) -> [];
([0,1],3) -> [];
([2,0,3],1) -> [0,3];
([1,0],2) -> [];
([2,1],3) -> [];
([0,1,3],1) -> [1,3];
([2,3,3],2) -> [3];
([1,0],0) -> [1,0];
 ([], 0) -> [];

=================================
None
([2,2,0],3) -> [];
([0,3,3],1) -> [3,3];
([2,0,2],3) -> [];
([0],2) -> [];
([2,0],2) -> [];
([1],2) -> [];
([0],0) -> [0];
([0],3) -> [];
 ([], 0) -> [];

=================================
None
([3,2,1],0) -> [3,2,1];
([1],0) -> [1];
([1,1,2],1) -> [1,2];
([2,3],2) -> [];
([1],3) -> [];
([1,2,0],3) -> [];
([2,1],0) -> [2,1];
([3,1,2],1) -> [1,2];
 ([], 0) -> [];

=================================
None
([0],1) -> [];
([3],2) -> [];
([3,0],2) -> [];
([2,2],1) -> [2];
([0,0,2],3) -> [];
([0],3) -> [];
([0,2],0) -> [0,2];
([3,0],1) -> [0];
 ([], 0) -> [];

=================================
None
([0,1,2],2) -> [2];
([2,0,1],1) -> [0,1];
([2],1) -> [];
([3],2) -> [];
([1,0,3],2) -> [3];
([2],3) -> [];
([2,0],2) -> [];
([0,3],1) -> [3];
([3,0,3],1) -> [0,3];
 ([], 0) -> [];

=================================
None
([0],2) -> [];
([3,2,0],2) -> [0];
([3],2) -> [];
([2,2],2) -> [];
([3,1],2) -> [];
([0,3],3) -> [];
([2,3],2) -> [];
([2,2,1],0) -> [2,2,1];
([3,2],3) -> [];
 ([], 0) -> [];

=================================
None
([3,1,2],3) -> [];
([2,3],2) -> [];
([3,2],3) -> [];
([2],1) -> [];
([2,0,0],1) -> [0,0];
([2,2],2) -> [];
([0,0],2) -> [];
([3,0],1) -> [0];
([0],2) -> [];
 ([], 0) -> [];

=================================
None
([0,2],3) -> [];
([0],2) -> [];
([2,1,3],0) -> [2,1,3];
([3,0],0) -> [3,0];
([0],1) -> [];
([0,3],0) -> [0,3];
([0,1],0) -> [0,1];
([0,1],3) -> [];
([0,0,3],1) -> [0,3];
 ([], 0) -> [];

=================================
None
([0,0],3) -> [];
([2,3,3],0) -> [2,3,3];
([3,3],2) -> [];
([0,0],2) -> [];
([3,2],0) -> [3,2];
([1,3,3],1) -> [3,3];
([2],1) -> [];
([3],0) -> [3];
([0,3,3],3) -> [];
 ([], 0) -> [];

=================================
None
([2],1) -> [];
([0],3) -> [];
([2,0],2) -> [];
([2,2,1],1) -> [2,1];
([0],2) -> [];
([1,0,2],0) -> [1,0,2];
([2,0,3],3) -> [];
([3,0,2],1) -> [0,2];
([0,2,2],3) -> [];
 ([], 0) -> [];

=================================
None
([0],1) -> [];
([2,1],2) -> [];
([0],0) -> [0];
([2],0) -> [2];
([1,0],3) -> [];
([2],1) -> [];
([1],3) -> [];
([2,2,0],0) -> [2,2,0];
([2,3,1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1477 false

([0],0) -> [0];
([1],0) -> [1];
([3,3,1],3) -> [];
([1,2],2) -> [];
([2],1) -> [];
([0,0,1],0) -> [0,0,1];
([3],2) -> [];
([1,3,3],0) -> [1,3,3];
([3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.5280 false

([0,1],2) -> [];
([0,1],0) -> [0,1];
([0],2) -> [];
([2,3,1],1) -> [3,1];
([1,0,2],2) -> [2];
([2,1,2],3) -> [];
([1],0) -> [1];
([0],1) -> [];
([1,1],0) -> [1,1];
 ([], 0) -> [];

=================================
None
([0],3) -> [];
([2],0) -> [2];
([3,2,2],1) -> [2,2];
([0,1,3],2) -> [3];
([2],1) -> [];
([3,3],2) -> [];
([3,0,0],3) -> [];
([1,3,2],0) -> [1,3,2];
([0,0],1) -> [0];
 ([], 0) -> [];

=================================
None
([2],0) -> [2];
([3],2) -> [];
([2,3],2) -> [];
([1],0) -> [1];
([0,3,3],2) -> [3];
([1],3) -> [];
([2,1],0) -> [2,1];
([3,2],3) -> [];
([0,0],2) -> [];
([2,0,0],2) -> [0];
 ([], 0) -> [];

=================================
None
([1,2,2],2) -> [2];
([1,1],0) -> [1,1];
([2,2],3) -> [];
([2,1],0) -> [2,1];
([0,0],1) -> [0];
([2,3],2) -> [];
([1,1,1],0) -> [1,1,1];
([1,0,0],1) -> [0,0];
([2],0) -> [2];
([0,3,2],0) -> [0,3,2];
 ([], 0) -> [];

=================================
None
([2,1,2],1) -> [1,2];
([1,3],0) -> [1,3];
([2,0,2],3) -> [];
([2,3],3) -> [];
([0],3) -> [];
([1],2) -> [];
([1],3) -> [];
([1],1) -> [];
([0,0],2) -> [];
([2],0) -> [2];
 ([], 0) -> [];

=================================
None
([3],0) -> [3];
([1],0) -> [1];
([3,3],0) -> [3,3];
([2,2,3],3) -> [];
([2],3) -> [];
([2,3,1],3) -> [];
([1,1,0],0) -> [1,1,0];
([2,1,0],3) -> [];
([1,3],1) -> [3];
([3],3) -> [];
 ([], 0) -> [];

=================================
None
([2,2,0],3) -> [];
([3],1) -> [];
([0,2,0],1) -> [2,0];
([1,0],0) -> [1,0];
([0],1) -> [];
([0,2,3],3) -> [];
([2,0,2],2) -> [2];
([1,1,1],1) -> [1,1];
([3,0],1) -> [0];
([2,3],3) -> [];
 ([], 0) -> [];

=================================
None
([2,3],0) -> [2,3];
([0,3,0],3) -> [];
([3,0,0],3) -> [];
([2,0,1],2) -> [1];
([1],2) -> [];
([2],1) -> [];
([0,1,0],3) -> [];
([0],2) -> [];
([2,3,3],1) -> [3,3];
([3,1,2],3) -> [];
 ([], 0) -> [];

=================================
None
([1,1,1],2) -> [1];
([2,2,2],3) -> [];
([1],0) -> [1];
([0,2],0) -> [0,2];
([0],3) -> [];
([2,0,3],0) -> [2,0,3];
([0,0],2) -> [];
([3],1) -> [];
([1,0],3) -> [];
([0,2],3) -> [];
 ([], 0) -> [];

=================================
None
([0],2) -> [];
([3,3],1) -> [3];
([3],2) -> [];
([1],0) -> [1];
([3,0],0) -> [3,0];
([1],2) -> [];
([0,3,1],2) -> [1];
([2],3) -> [];
([1,0],2) -> [];
([0,0],1) -> [0];
 ([], 0) -> [];

=================================
None
([0],2) -> [];
([3,1,3],3) -> [];
([3],0) -> [3];
([1],3) -> [];
([2],3) -> [];
([1,1,3],3) -> [];
([3,2,0],2) -> [0];
([2],0) -> [2];
([3,2],1) -> [2];
([1,2,0],0) -> [1,2,0];
 ([], 0) -> [];

=================================
None
([3,2,2],0) -> [3,2,2];
([1,3],3) -> [];
([0,3],2) -> [];
([2,1],2) -> [];
([1,1,3],0) -> [1,1,3];
([1,3],2) -> [];
([1,2,1],1) -> [2,1];
([2,1,0],0) -> [2,1,0];
([0,0],2) -> [];
([2,3],1) -> [3];
 ([], 0) -> [];

=================================
None
