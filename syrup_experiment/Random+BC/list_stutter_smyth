[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (0, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 0
        , Cons (0, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00570900000002 false false

[0,3] -> [0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00636800000007 true true

[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (#2.1 y1, xs)) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00517799999989 false true

[2,2] -> [2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (#2.1 y1, xs)) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00702999999999 false true

[2,2,1] -> [2,2,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.021422 true true

[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0128110000001 true true

[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00727000000006 true true

[3,3] -> [3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, Cons (#2.1 y1, xs)) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0146 false true

[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00755800000002 false true

[2,0] -> [2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00848900000005 true true

[3] -> [3,3];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00597500000003 true true

[2,0,3] -> [2,2,0,0,3,3];
[3,0,3] -> [3,3,0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00843400000008 true true

[3,2,3] -> [3,3,2,2,3,3];
[2,3,2] -> [2,2,3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00393600000007 true true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00387999999998 true true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00477999999998 true true

[2,2] -> [2,2,2,2];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00589599999989 true true

[0,1] -> [0,0,1,1];
[0,3,0] -> [0,0,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00529699999993 true true

[1] -> [1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00547699999993 false true

[1,2,3] -> [1,1,2,2,3,3];
[2,2] -> [2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00395400000002 true true

[0,2] -> [0,0,2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336599999991 true true

[0,0] -> [0,0,0,0];
[3,1] -> [3,3,1,1];
[1,2,2] -> [1,1,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325300000009 true true

[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[2,3] -> [2,2,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003377 true true

[1,1,3] -> [1,1,1,1,3,3];
[2,2] -> [2,2,2,2];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00395400000002 true true

[2] -> [2,2];
[1,0,1] -> [1,1,0,0,1,1];
[1,2] -> [1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00563800000009 true true

[0,3,0] -> [0,0,3,3,0,0];
[1,0] -> [1,1,0,0];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00473800000009 true true

[2,3,0] -> [2,2,3,3,0,0];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00979699999993 true true

[3,2] -> [3,3,2,2];
[2,3,3] -> [2,2,3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00870800000007 true true

[2,2,3] -> [2,2,2,2,3,3];
[2,3,2] -> [2,2,3,3,2,2];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00517599999989 true true

[3] -> [3,3];
[0,2] -> [0,0,2,2];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00385800000004 true true

[1,2,0] -> [1,1,2,2,0,0];
[2,1,2] -> [2,2,1,1,2,2];
[2,0,2] -> [2,2,0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0035620000001 true true

[2,2,3] -> [2,2,2,2,3,3];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00607300000001 true true

[3,2,0] -> [3,3,2,2,0,0];
[0] -> [0,0];
[3,3] -> [3,3,3,3];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.007251 true true

[0,0] -> [0,0,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[3,1] -> [3,3,1,1];
[2,2] -> [2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00578799999994 true true

[2] -> [2,2];
[3] -> [3,3];
[1,0] -> [1,1,0,0];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00414999999998 true true

[3,3,3] -> [3,3,3,3,3,3];
[2,1,1] -> [2,2,1,1,1,1];
[3,1] -> [3,3,1,1];
[2,3,1] -> [2,2,3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00457400000005 true true

[0] -> [0,0];
[2,3] -> [2,2,3,3];
[1,1] -> [1,1,1,1];
[3,3,3] -> [3,3,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00300300000004 true true

[0,0,2] -> [0,0,0,0,2,2];
[3] -> [3,3];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00595399999997 true true

[0,1,2] -> [0,0,1,1,2,2];
[3] -> [3,3];
[1] -> [1,1];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00471700000003 true true

[2,2] -> [2,2,2,2];
[2,0] -> [2,2,0,0];
[3,1,2] -> [3,3,1,1,2,2];
[0,2] -> [0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00365299999999 true true

[3] -> [3,3];
[1] -> [1,1];
[2] -> [2,2];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00315500000011 true true

[1,2,2] -> [1,1,2,2,2,2];
[1] -> [1,1];
[3] -> [3,3];
[0,2,1] -> [0,0,2,2,1,1];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.008329 true true

[0] -> [0,0];
[2] -> [2,2];
[3] -> [3,3];
[1] -> [1,1];
[3,1] -> [3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00618299999996 true true

[2,0,0] -> [2,2,0,0,0,0];
[0] -> [0,0];
[3,1] -> [3,3,1,1];
[2,1] -> [2,2,1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00643300000002 true true

[0,3,0] -> [0,0,3,3,0,0];
[2,1,2] -> [2,2,1,1,2,2];
[3,0,0] -> [3,3,0,0,0,0];
[3,2] -> [3,3,2,2];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00577799999996 true true

[2,1] -> [2,2,1,1];
[3,3,0] -> [3,3,3,3,0,0];
[1,1] -> [1,1,1,1];
[2,1,1] -> [2,2,1,1,1,1];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00396500000011 true true

[3,1,3] -> [3,3,1,1,3,3];
[0] -> [0,0];
[2,3] -> [2,2,3,3];
[1,3] -> [1,1,3,3];
[3,3,3] -> [3,3,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00570799999991 true true

[2,3,3] -> [2,2,3,3,3,3];
[0,2] -> [0,0,2,2];
[3,3,2] -> [3,3,3,3,2,2];
[0] -> [0,0];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334599999996 true true

[1,0,2] -> [1,1,0,0,2,2];
[1] -> [1,1];
[3,0,3] -> [3,3,0,0,3,3];
[2] -> [2,2];
[0,1,2] -> [0,0,1,1,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00563800000009 true true

[2,1,1] -> [2,2,1,1,1,1];
[2,1] -> [2,2,1,1];
[2,3] -> [2,2,3,3];
[1,1] -> [1,1,1,1];
[3,0,1] -> [3,3,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00421000000006 true true

[0,0,1] -> [0,0,0,0,1,1];
[1] -> [1,1];
[0] -> [0,0];
[0,1,1] -> [0,0,1,1,1,1];
[2,3] -> [2,2,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00561799999991 true true

[3] -> [3,3];
[0,3,0] -> [0,0,3,3,0,0];
[0,2] -> [0,0,2,2];
[2,2] -> [2,2,2,2];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00572899999997 true true

[0] -> [0,0];
[0,3,1] -> [0,0,3,3,1,1];
[3,2,2] -> [3,3,2,2,2,2];
[2,1,1] -> [2,2,1,1,1,1];
[0,1] -> [0,0,1,1];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00348400000007 true true

[0,3] -> [0,0,3,3];
[0,0] -> [0,0,0,0];
[3] -> [3,3];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00558999999998 true true

[0] -> [0,0];
[3,2,0] -> [3,3,2,2,0,0];
[1,2] -> [1,1,2,2];
[1,3] -> [1,1,3,3];
[3,3] -> [3,3,3,3];
[0,0,2] -> [0,0,0,0,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00321499999995 true true

[3] -> [3,3];
[3,1] -> [3,3,1,1];
[1,3] -> [1,1,3,3];
[2,0,3] -> [2,2,0,0,3,3];
[2] -> [2,2];
[2,3,1] -> [2,2,3,3,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00369999999998 true true

[3,1,3] -> [3,3,1,1,3,3];
[3,1] -> [3,3,1,1];
[3,3] -> [3,3,3,3];
[0] -> [0,0];
[1] -> [1,1];
[3,3,3] -> [3,3,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00816200000008 true true

[1,0,3] -> [1,1,0,0,3,3];
[3] -> [3,3];
[2,0,3] -> [2,2,0,0,3,3];
[1] -> [1,1];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00546400000007 true true

[3] -> [3,3];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[2,2,2] -> [2,2,2,2,2,2];
[0] -> [0,0];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00541599999997 true true

[0] -> [0,0];
[3,3] -> [3,3,3,3];
[2,0] -> [2,2,0,0];
[2] -> [2,2];
[2,3,1] -> [2,2,3,3,1,1];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0068510000001 true true

[3] -> [3,3];
[2,1] -> [2,2,1,1];
[1] -> [1,1];
[2] -> [2,2];
[2,1,0] -> [2,2,1,1,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00354100000004 true true

[0] -> [0,0];
[3,3] -> [3,3,3,3];
[1,3] -> [1,1,3,3];
[0,2] -> [0,0,2,2];
[2,2] -> [2,2,2,2];
[1,0] -> [1,1,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334500000008 true true

[1] -> [1,1];
[2] -> [2,2];
[2,3] -> [2,2,3,3];
[0,1] -> [0,0,1,1];
[1,1] -> [1,1,1,1];
[1,0,0] -> [1,1,0,0,0,0];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00829199999998 true true

[1,0,1] -> [1,1,0,0,1,1];
[3,3] -> [3,3,3,3];
[3,1,0] -> [3,3,1,1,0,0];
[0,3] -> [0,0,3,3];
[2,0] -> [2,2,0,0];
[3] -> [3,3];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0056689999999 true true

[3,1,1] -> [3,3,1,1,1,1];
[0] -> [0,0];
[1] -> [1,1];
[1,1,3] -> [1,1,1,1,3,3];
[2,1,0] -> [2,2,1,1,0,0];
[0,1] -> [0,0,1,1];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00476099999992 true true

[0] -> [0,0];
[0,1,0] -> [0,0,1,1,0,0];
[3,0] -> [3,3,0,0];
[1,2,0] -> [1,1,2,2,0,0];
[3] -> [3,3];
[0,3,2] -> [0,0,3,3,2,2];
[2,2,0] -> [2,2,2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00361199999998 true true

[2,1] -> [2,2,1,1];
[0,0,2] -> [0,0,0,0,2,2];
[1,0] -> [1,1,0,0];
[1] -> [1,1];
[1,3] -> [1,1,3,3];
[0,1,3] -> [0,0,1,1,3,3];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0054520000001 true true

[2,1] -> [2,2,1,1];
[3] -> [3,3];
[2,0,3] -> [2,2,0,0,3,3];
[0,2] -> [0,0,2,2];
[1] -> [1,1];
[3,1] -> [3,3,1,1];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0055769999999 true true

[1] -> [1,1];
[1,2] -> [1,1,2,2];
[3,0] -> [3,3,0,0];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[3,2,1] -> [3,3,2,2,1,1];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00711000000001 true true

[2,0,1] -> [2,2,0,0,1,1];
[2,0,3] -> [2,2,0,0,3,3];
[2,2] -> [2,2,2,2];
[3,3,1] -> [3,3,3,3,1,1];
[0,1] -> [0,0,1,1];
[0,1,2] -> [0,0,1,1,2,2];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00354500000003 true true

[2] -> [2,2];
[2,2,3] -> [2,2,2,2,3,3];
[3,0,0] -> [3,3,0,0,0,0];
[3,1] -> [3,3,1,1];
[0,0] -> [0,0,0,0];
[0] -> [0,0];
[1,2,1] -> [1,1,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0063419999999 true true

[1] -> [1,1];
[2,0,0] -> [2,2,0,0,0,0];
[1,0,2] -> [1,1,0,0,2,2];
[0] -> [0,0];
[3,0] -> [3,3,0,0];
[2,2] -> [2,2,2,2];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00478500000008 true true

[0] -> [0,0];
[0,2,1] -> [0,0,2,2,1,1];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[2] -> [2,2];
[1,3,0] -> [1,1,3,3,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00636800000007 true true

[2] -> [2,2];
[3,0,1] -> [3,3,0,0,1,1];
[0] -> [0,0];
[3] -> [3,3];
[2,1,0] -> [2,2,1,1,0,0];
[2,1] -> [2,2,1,1];
[3,1,0] -> [3,3,1,1,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.004592 true true

[3] -> [3,3];
[2,3] -> [2,2,3,3];
[1,0,0] -> [1,1,0,0,0,0];
[1] -> [1,1];
[3,3] -> [3,3,3,3];
[0,2] -> [0,0,2,2];
[1,0,2] -> [1,1,0,0,2,2];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00708200000008 true true

[0] -> [0,0];
[1] -> [1,1];
[2,0,2] -> [2,2,0,0,2,2];
[2,1] -> [2,2,1,1];
[0,2] -> [0,0,2,2];
[3,0,1] -> [3,3,0,0,1,1];
[1,0] -> [1,1,0,0];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334599999996 true true

[3,3] -> [3,3,3,3];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[2,2] -> [2,2,2,2];
[2,3] -> [2,2,3,3];
[0,1] -> [0,0,1,1];
[1,0,0] -> [1,1,0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00628400000005 true true

[2,2] -> [2,2,2,2];
[3] -> [3,3];
[1,2,0] -> [1,1,2,2,0,0];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[1] -> [1,1];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0063419999999 true true

[2] -> [2,2];
[3] -> [3,3];
[0] -> [0,0];
[3,1] -> [3,3,1,1];
[1] -> [1,1];
[0,2,0] -> [0,0,2,2,0,0];
[2,0] -> [2,2,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00620000000004 true true

[1,3,1] -> [1,1,3,3,1,1];
[0,1,1] -> [0,0,1,1,1,1];
[1,1] -> [1,1,1,1];
[0] -> [0,0];
[0,2,0] -> [0,0,2,2,0,0];
[1] -> [1,1];
[2,1,3] -> [2,2,1,1,3,3];
[0,0,3] -> [0,0,0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00343500000008 true true

[2] -> [2,2];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[1,1,1] -> [1,1,1,1,1,1];
[3,0] -> [3,3,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[2,0,3] -> [2,2,0,0,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00574400000005 true true

[0,0] -> [0,0,0,0];
[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[2,3,0] -> [2,2,3,3,0,0];
[1] -> [1,1];
[3,1] -> [3,3,1,1];
[3] -> [3,3];
[3,0] -> [3,3,0,0];
[3,2] -> [3,3,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.004232 true true

[3,2] -> [3,3,2,2];
[0,1,1] -> [0,0,1,1,1,1];
[0] -> [0,0];
[0,2,2] -> [0,0,2,2,2,2];
[0,2] -> [0,0,2,2];
[1,3] -> [1,1,3,3];
[1,0] -> [1,1,0,0];
[2,0,2] -> [2,2,0,0,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0059389999999 true true

[3,2,2] -> [3,3,2,2,2,2];
[3,3,0] -> [3,3,3,3,0,0];
[1,0,3] -> [1,1,0,0,3,3];
[2] -> [2,2];
[3,1,1] -> [3,3,1,1,1,1];
[3,0] -> [3,3,0,0];
[0] -> [0,0];
[3] -> [3,3];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.022641 true true

[1,2,0] -> [1,1,2,2,0,0];
[0,0] -> [0,0,0,0];
[2,0] -> [2,2,0,0];
[1,1,1] -> [1,1,1,1,1,1];
[2,2] -> [2,2,2,2];
[2] -> [2,2];
[0,3] -> [0,0,3,3];
[3,3,1] -> [3,3,3,3,1,1];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00346300000001 true true

[2,0,1] -> [2,2,0,0,1,1];
[0,3] -> [0,0,3,3];
[0,1] -> [0,0,1,1];
[3,3] -> [3,3,3,3];
[1,2,2] -> [1,1,2,2,2,2];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00435100000004 true true

[1,0,0] -> [1,1,0,0,0,0];
[3] -> [3,3];
[1,0] -> [1,1,0,0];
[0] -> [0,0];
[3,0,2] -> [3,3,0,0,2,2];
[0,0] -> [0,0,0,0];
[3,2,1] -> [3,3,2,2,1,1];
[3,0,0] -> [3,3,0,0,0,0];
[2,3,3] -> [2,2,3,3,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00956900000006 true true

[3] -> [3,3];
[3,0] -> [3,3,0,0];
[3,1,3] -> [3,3,1,1,3,3];
[0,2,3] -> [0,0,2,2,3,3];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[1,1] -> [1,1,1,1];
[1] -> [1,1];
[1,1,0] -> [1,1,1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00732599999992 true true

[2,1] -> [2,2,1,1];
[0,3] -> [0,0,3,3];
[0,2,0] -> [0,0,2,2,0,0];
[2,1,1] -> [2,2,1,1,1,1];
[3,0] -> [3,3,0,0];
[2,2] -> [2,2,2,2];
[0,0,3] -> [0,0,0,0,3,3];
[3] -> [3,3];
[3,0,0] -> [3,3,0,0,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00411200000008 true true

[0,2,0] -> [0,0,2,2,0,0];
[0,1] -> [0,0,1,1];
[2,0] -> [2,2,0,0];
[2,0,3] -> [2,2,0,0,3,3];
[3] -> [3,3];
[0,3] -> [0,0,3,3];
[2] -> [2,2];
[3,1] -> [3,3,1,1];
[3,0,1] -> [3,3,0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00526799999989 true true

[2,1,2] -> [2,2,1,1,2,2];
[3,3] -> [3,3,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[2,0] -> [2,2,0,0];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00655499999993 true true

[0,3,2] -> [0,0,3,3,2,2];
[1,3,0] -> [1,1,3,3,0,0];
[1,2,3] -> [1,1,2,2,3,3];
[1] -> [1,1];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[0,1] -> [0,0,1,1];
[0,1,2] -> [0,0,1,1,2,2];
[0,0] -> [0,0,0,0];
[1,2,1] -> [1,1,2,2,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00384800000006 true true

[2,2] -> [2,2,2,2];
[3] -> [3,3];
[3,0] -> [3,3,0,0];
[3,3] -> [3,3,3,3];
[0] -> [0,0];
[1,0,3] -> [1,1,0,0,3,3];
[0,3,1] -> [0,0,3,3,1,1];
[1] -> [1,1];
[3,1] -> [3,3,1,1];
[1,2,2] -> [1,1,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.010622 true true

[0] -> [0,0];
[1,1] -> [1,1,1,1];
[3,0,0] -> [3,3,0,0,0,0];
[3,1] -> [3,3,1,1];
[0,0] -> [0,0,0,0];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[0,0,3] -> [0,0,0,0,3,3];
[1,3,1] -> [1,1,3,3,1,1];
[0,3] -> [0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00636499999996 true true

[0] -> [0,0];
[1,1,0] -> [1,1,1,1,0,0];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[0,1] -> [0,0,1,1];
[0,3] -> [0,0,3,3];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00389599999994 true true

[3] -> [3,3];
[0,3] -> [0,0,3,3];
[2,1,1] -> [2,2,1,1,1,1];
[2] -> [2,2];
[2,3,2] -> [2,2,3,3,2,2];
[0] -> [0,0];
[1,3,0] -> [1,1,3,3,0,0];
[1,0,2] -> [1,1,0,0,2,2];
[0,3,3] -> [0,0,3,3,3,3];
[2,3,0] -> [2,2,3,3,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00359600000002 true true

[3] -> [3,3];
[0] -> [0,0];
[2,0] -> [2,2,0,0];
[0,2,3] -> [0,0,2,2,3,3];
[1,0] -> [1,1,0,0];
[3,0] -> [3,3,0,0];
[1,2,2] -> [1,1,2,2,2,2];
[3,2,0] -> [3,3,2,2,0,0];
[3,2,2] -> [3,3,2,2,2,2];
[0,3] -> [0,0,3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00356000000011 true true

[2,1] -> [2,2,1,1];
[1,2] -> [1,1,2,2];
[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[1,2,3] -> [1,1,2,2,3,3];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[3,0] -> [3,3,0,0];
[0,3,2] -> [0,0,3,3,2,2];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00642199999993 true true

[2,1,3] -> [2,2,1,1,3,3];
[0,2,3] -> [0,0,2,2,3,3];
[1,1,2] -> [1,1,1,1,2,2];
[1] -> [1,1];
[0,1] -> [0,0,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[2,1,1] -> [2,2,1,1,1,1];
[0,0,1] -> [0,0,0,0,1,1];
[0] -> [0,0];
[3,2,2] -> [3,3,2,2,2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00701400000003 true true

[0] -> [0,0];
[0,1] -> [0,0,1,1];
[3,0] -> [3,3,0,0];
[2,2] -> [2,2,2,2];
[2,1,0] -> [2,2,1,1,0,0];
[2] -> [2,2];
[3,1] -> [3,3,1,1];
[3] -> [3,3];
[2,1,1] -> [2,2,1,1,1,1];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00546899999995 true true

[2,3] -> [2,2,3,3];
[1] -> [1,1];
[0,2,0] -> [0,0,2,2,0,0];
[1,0,2] -> [1,1,0,0,2,2];
[2,3,0] -> [2,2,3,3,0,0];
[0,1] -> [0,0,1,1];
[0,0] -> [0,0,0,0];
[1,0] -> [1,1,0,0];
[3,2,3] -> [3,3,2,2,3,3];
[2,0] -> [2,2,0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00578399999995 true true

