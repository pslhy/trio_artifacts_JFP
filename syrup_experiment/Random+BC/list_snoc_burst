([2,0,3],2) -> [2,0,3,2];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), f (Un_Cons (x . 0) . 1, x . 1))

0.1628 false

([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (x . 1, Un_Cons (x . 0) . 1))

3.8966 false

([1],0) -> [1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0268 true

([3,3,1],3) -> [3,3,1,3];
([], 0) -> [0];

=================================
None
([0,3,2],2) -> [0,3,2,2];
([], 0) -> [0];

=================================
None
([0,1,3],1) -> [0,1,3,1];
([], 0) -> [0];

=================================
None
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0930 true

([2,1,3],0) -> [2,1,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

4.0939 true

([3,3,2],2) -> [3,3,2,2];
([], 0) -> [0];

=================================
None
([2,1],0) -> [2,1,0];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1145 true

([0],1) -> [0,1];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

4.9832 true

([1,3],1) -> [1,3,1];
([3],2) -> [3,2];
([], 0) -> [0];

=================================
None
([0,1],3) -> [0,1,3];
([1,2],0) -> [1,2,0];
([], 0) -> [0];

=================================
None
([1,3],3) -> [1,3,3];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
None
([3,2,1],2) -> [3,2,1,2];
([1,0],0) -> [1,0,0];
([], 0) -> [0];

=================================
None
([1,2,2],3) -> [1,2,2,3];
([3,0,3],2) -> [3,0,3,2];
([], 0) -> [0];

=================================
None
([3,2,3],1) -> [3,2,3,1];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
None
([3,0,1],0) -> [3,0,1,0];
([3,3],1) -> [3,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.0225 true

([1,0],1) -> [1,0,1];
([0],0) -> [0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8298 true

([3],1) -> [3,1];
([2,0,2],2) -> [2,0,2,2];
([3,0,3],0) -> [3,0,3,0];
([], 0) -> [0];

=================================
None
([2],1) -> [2,1];
([0,0],1) -> [0,0,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([0,2],1) -> [0,2,1];
([0],0) -> [0,0];
([2,3,2],1) -> [2,3,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.5343 true

([0,3],3) -> [0,3,3];
([2],3) -> [2,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
None
([0,3,2],0) -> [0,3,2,0];
([3,3,2],0) -> [3,3,2,0];
([1],1) -> [1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.6346 true

([2,2,1],3) -> [2,2,1,3];
([2,1,0],2) -> [2,1,0,2];
([1,3,2],0) -> [1,3,2,0];
([], 0) -> [0];

=================================
None
([3],0) -> [3,0];
([1],3) -> [1,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0474 true

([0],1) -> [0,1];
([0,3,3],2) -> [0,3,3,2];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
None
([3,1,1],0) -> [3,1,1,0];
([1,2,1],2) -> [1,2,1,2];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.0727 true

([0,2],3) -> [0,2,3];
([1,1],0) -> [1,1,0];
([1],1) -> [1,1];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([3,1,0],1) -> [3,1,0,1];
([3,1],3) -> [3,1,3];
([1],3) -> [1,3];
([], 0) -> [0];

=================================
None
([0],0) -> [0,0];
([1],1) -> [1,1];
([2,2],0) -> [2,2,0];
([1,2,1],3) -> [1,2,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1445 true

([2,3],0) -> [2,3,0];
([0],2) -> [0,2];
([1,2,2],3) -> [1,2,2,3];
([0,2,3],0) -> [0,2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1954 true

([0,3],1) -> [0,3,1];
([3],3) -> [3,3];
([0],3) -> [0,3];
([1,1],2) -> [1,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

17.2679 true

([3],0) -> [3,0];
([1,3],2) -> [1,3,2];
([2],1) -> [2,1];
([2,3],1) -> [2,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9557 true

([0,1],1) -> [0,1,1];
([3],1) -> [3,1];
([1],1) -> [1,1];
([0,2],3) -> [0,2,3];
([], 0) -> [0];

=================================
None
([1],1) -> [1,1];
([3,0,1],2) -> [3,0,1,2];
([1],0) -> [1,0];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([2],2) -> [2,2];
([3,2,2],0) -> [3,2,2,0];
([0],3) -> [0,3];
([0,2,0],1) -> [0,2,0,1];
([], 0) -> [0];

=================================
None
([1,3,0],1) -> [1,3,0,1];
([0,1],3) -> [0,1,3];
([0,0],1) -> [0,0,1];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
None
([1,1],2) -> [1,1,2];
([0,3,0],1) -> [0,3,0,1];
([0],3) -> [0,3];
([0,1,1],3) -> [0,1,1,3];
([], 0) -> [0];

=================================
None
([0,2],2) -> [0,2,2];
([2,1],0) -> [2,1,0];
([0,0,1],1) -> [0,0,1,1];
([1,1],2) -> [1,1,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([3,0],0) -> [3,0,0];
([2,3],2) -> [2,3,2];
([3,1,1],3) -> [3,1,1,3];
([2],1) -> [2,1];
([1,3],3) -> [1,3,3];
([], 0) -> [0];

=================================
None
([3,1,1],0) -> [3,1,1,0];
([2,2,0],1) -> [2,2,0,1];
([0],2) -> [0,2];
([2,1,1],3) -> [2,1,1,3];
([3,3,2],1) -> [3,3,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.1745 true

([0,1,0],0) -> [0,1,0,0];
([0,2,2],1) -> [0,2,2,1];
([0,3,0],3) -> [0,3,0,3];
([1,2],0) -> [1,2,0];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
None
([1],3) -> [1,3];
([3,3,1],2) -> [3,3,1,2];
([1,2],1) -> [1,2,1];
([3,1],3) -> [3,1,3];
([0,1],1) -> [0,1,1];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([3],2) -> [3,2];
([1],0) -> [1,0];
([0],3) -> [0,3];
([1,0,2],0) -> [1,0,2,0];
([], 0) -> [0];

=================================
None
([0,2,0],1) -> [0,2,0,1];
([3],2) -> [3,2];
([0],2) -> [0,2];
([2,2,2],0) -> [2,2,2,0];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
None
([2,0,0],2) -> [2,0,0,2];
([3,3,1],3) -> [3,3,1,3];
([0],1) -> [0,1];
([3,2,1],0) -> [3,2,1,0];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([2,3,3],2) -> [2,3,3,2];
([2],2) -> [2,2];
([2,0,3],2) -> [2,0,3,2];
([2],1) -> [2,1];
([1,0],0) -> [1,0,0];
([], 0) -> [0];

=================================
None
([1],1) -> [1,1];
([0,1,3],1) -> [0,1,3,1];
([2],2) -> [2,2];
([3,2,1],0) -> [3,2,1,0];
([2,2],2) -> [2,2,2];
([], 0) -> [0];

=================================
None
([2],1) -> [2,1];
([2,0,2],2) -> [2,0,2,2];
([3,2,2],2) -> [3,2,2,2];
([3,1,2],0) -> [3,1,2,0];
([0,3],1) -> [0,3,1];
([0,2],0) -> [0,2,0];
([], 0) -> [0];

=================================
None
([2,3,0],0) -> [2,3,0,0];
([2,3,2],3) -> [2,3,2,3];
([0,2],1) -> [0,2,1];
([0,3],3) -> [0,3,3];
([2],3) -> [2,3];
([0,0,0],0) -> [0,0,0,0];
([], 0) -> [0];

=================================
None
([0],0) -> [0,0];
([2],2) -> [2,2];
([2,1,0],3) -> [2,1,0,3];
([1,3,3],2) -> [1,3,3,2];
([3,3],3) -> [3,3,3];
([3],2) -> [3,2];
([], 0) -> [0];

=================================
None
([3],2) -> [3,2];
([1],0) -> [1,0];
([0,0,3],1) -> [0,0,3,1];
([1,3,2],1) -> [1,3,2,1];
([3,1],0) -> [3,1,0];
([1,2,1],2) -> [1,2,1,2];
([], 0) -> [0];

=================================
None
([2],3) -> [2,3];
([0,2],1) -> [0,2,1];
([2,3],1) -> [2,3,1];
([1,3],3) -> [1,3,3];
([3],3) -> [3,3];
([1,2],1) -> [1,2,1];
([], 0) -> [0];

=================================
None
([1,1],0) -> [1,1,0];
([1],2) -> [1,2];
([1],1) -> [1,1];
([1],3) -> [1,3];
([2,3,3],0) -> [2,3,3,0];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1885 true

([2],0) -> [2,0];
([3,3],1) -> [3,3,1];
([2],2) -> [2,2];
([0],1) -> [0,1];
([1],0) -> [1,0];
([2,1],0) -> [2,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2853 true

([3,2],3) -> [3,2,3];
([2],2) -> [2,2];
([3,1],2) -> [3,1,2];
([1],1) -> [1,1];
([2],3) -> [2,3];
([1],0) -> [1,0];
([], 0) -> [0];

=================================
None
([0,1],3) -> [0,1,3];
([0],3) -> [0,3];
([0],2) -> [0,2];
([3],2) -> [3,2];
([0,1],0) -> [0,1,0];
([0,0],1) -> [0,0,1];
([], 0) -> [0];

=================================
None
([2,0],2) -> [2,0,2];
([0,2,2],2) -> [0,2,2,2];
([0],0) -> [0,0];
([1],3) -> [1,3];
([1,0],1) -> [1,0,1];
([2,2,0],2) -> [2,2,0,2];
([], 0) -> [0];

=================================
None
([0,2],2) -> [0,2,2];
([2,0,2],2) -> [2,0,2,2];
([3],2) -> [3,2];
([0],3) -> [0,3];
([0,0],1) -> [0,0,1];
([2,3],0) -> [2,3,0];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([2,0,2],2) -> [2,0,2,2];
([0,2,1],2) -> [0,2,1,2];
([2],1) -> [2,1];
([1],1) -> [1,1];
([0,0],1) -> [0,0,1];
([0,1],1) -> [0,1,1];
([2,0,1],0) -> [2,0,1,0];
([], 0) -> [0];

=================================
None
([3,3],3) -> [3,3,3];
([1,2],0) -> [1,2,0];
([0,1],1) -> [0,1,1];
([3,1],2) -> [3,1,2];
([0],0) -> [0,0];
([3,1,2],0) -> [3,1,2,0];
([0,0,3],1) -> [0,0,3,1];
([], 0) -> [0];

=================================
None
([2],2) -> [2,2];
([3],3) -> [3,3];
([2],1) -> [2,1];
([1],1) -> [1,1];
([2,3],0) -> [2,3,0];
([3,0,3],3) -> [3,0,3,3];
([0,0],3) -> [0,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

11.8627 true

([1],1) -> [1,1];
([0],0) -> [0,0];
([3,3,2],1) -> [3,3,2,1];
([2],2) -> [2,2];
([0],3) -> [0,3];
([1,3],3) -> [1,3,3];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
None
([2],3) -> [2,3];
([2],1) -> [2,1];
([0,3],2) -> [0,3,2];
([2,2,0],1) -> [2,2,0,1];
([2,0,0],1) -> [2,0,0,1];
([0,0,1],0) -> [0,0,1,0];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
None
([0],3) -> [0,3];
([0,2],0) -> [0,2,0];
([0,1,2],0) -> [0,1,2,0];
([0,0,1],2) -> [0,0,1,2];
([0,0],1) -> [0,0,1];
([2,2,1],2) -> [2,2,1,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

33.3177 true

([3,0,0],2) -> [3,0,0,2];
([1,2,2],2) -> [1,2,2,2];
([2,1],1) -> [2,1,1];
([1,1],3) -> [1,1,3];
([2,0,0],2) -> [2,0,0,2];
([1],1) -> [1,1];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
None
([3,3],2) -> [3,3,2];
([1,3],3) -> [1,3,3];
([1,0],0) -> [1,0,0];
([2,0,2],0) -> [2,0,2,0];
([1,0],1) -> [1,0,1];
([3],0) -> [3,0];
([2,2,2],2) -> [2,2,2,2];
([], 0) -> [0];

=================================
None
([0,0,3],0) -> [0,0,3,0];
([2,2,0],3) -> [2,2,0,3];
([3,0],2) -> [3,0,2];
([3,3],2) -> [3,3,2];
([0,3],1) -> [0,3,1];
([3,0],1) -> [3,0,1];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.3194 true

([3],2) -> [3,2];
([0,1,0],2) -> [0,1,0,2];
([2,0,1],3) -> [2,0,1,3];
([2,0],2) -> [2,0,2];
([1,1],0) -> [1,1,0];
([1,0],1) -> [1,0,1];
([2,1],0) -> [2,1,0];
([2,3,0],2) -> [2,3,0,2];
([], 0) -> [0];

=================================
None
([0,0,3],1) -> [0,0,3,1];
([1,3,1],0) -> [1,3,1,0];
([3,1,0],2) -> [3,1,0,2];
([1],3) -> [1,3];
([1,0,1],2) -> [1,0,1,2];
([0,1,3],2) -> [0,1,3,2];
([1],0) -> [1,0];
([2,1,0],2) -> [2,1,0,2];
([], 0) -> [0];

=================================
None
([3],1) -> [3,1];
([1],2) -> [1,2];
([0],3) -> [0,3];
([2,1],2) -> [2,1,2];
([3,3],2) -> [3,3,2];
([2],0) -> [2,0];
([0],1) -> [0,1];
([3,1],1) -> [3,1,1];
([], 0) -> [0];

=================================
None
([1],1) -> [1,1];
([0,2,0],3) -> [0,2,0,3];
([3,1,1],3) -> [3,1,1,3];
([2],3) -> [2,3];
([1,3,2],1) -> [1,3,2,1];
([0,1],3) -> [0,1,3];
([0,2],2) -> [0,2,2];
([0,0,1],2) -> [0,0,1,2];
([], 0) -> [0];

=================================
None
([0,0],2) -> [0,0,2];
([2],2) -> [2,2];
([1],3) -> [1,3];
([0,1],0) -> [0,1,0];
([3],2) -> [3,2];
([3,3],1) -> [3,3,1];
([2,2],1) -> [2,2,1];
([1],0) -> [1,0];
([], 0) -> [0];

=================================
None
([3],2) -> [3,2];
([1],1) -> [1,1];
([0],1) -> [0,1];
([2],0) -> [2,0];
([0,0,0],1) -> [0,0,0,1];
([1,2],0) -> [1,2,0];
([2,3],3) -> [2,3,3];
([2,3,2],0) -> [2,3,2,0];
([], 0) -> [0];

=================================
None
([2],1) -> [2,1];
([0,2],3) -> [0,2,3];
([0,0],1) -> [0,0,1];
([3,0,0],0) -> [3,0,0,0];
([0,3],2) -> [0,3,2];
([1,3],3) -> [1,3,3];
([0],0) -> [0,0];
([1,1,2],3) -> [1,1,2,3];
([], 0) -> [0];

=================================
None
([2,1,1],2) -> [2,1,1,2];
([3,1,2],1) -> [3,1,2,1];
([3,0],0) -> [3,0,0];
([0,2],3) -> [0,2,3];
([1,0,0],3) -> [1,0,0,3];
([2,1],2) -> [2,1,2];
([2],0) -> [2,0];
([3,2,0],3) -> [3,2,0,3];
([], 0) -> [0];

=================================
None
([1,1,3],0) -> [1,1,3,0];
([0,1,3],2) -> [0,1,3,2];
([3,0,1],1) -> [3,0,1,1];
([3,3,0],1) -> [3,3,0,1];
([0,0],2) -> [0,0,2];
([3],0) -> [3,0];
([2,3,0],2) -> [2,3,0,2];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.7910 true

([0,2,0],1) -> [0,2,0,1];
([2,3],0) -> [2,3,0];
([3,2],2) -> [3,2,2];
([3],1) -> [3,1];
([2,3],1) -> [2,3,1];
([0,0],1) -> [0,0,1];
([0,1,0],3) -> [0,1,0,3];
([0,2,0],0) -> [0,2,0,0];
([], 0) -> [0];

=================================
None
([3],1) -> [3,1];
([1],0) -> [1,0];
([1,0,3],1) -> [1,0,3,1];
([1,2,1],0) -> [1,2,1,0];
([1,3],3) -> [1,3,3];
([0,2],1) -> [0,2,1];
([3,0],1) -> [3,0,1];
([2],2) -> [2,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([1,2],3) -> [1,2,3];
([0],3) -> [0,3];
([0,1],0) -> [0,1,0];
([0,1],2) -> [0,1,2];
([1],0) -> [1,0];
([2,1],1) -> [2,1,1];
([1,3],1) -> [1,3,1];
([3],2) -> [3,2];
([0,2],0) -> [0,2,0];
([], 0) -> [0];

=================================
None
([1,2,2],3) -> [1,2,2,3];
([2],0) -> [2,0];
([1],1) -> [1,1];
([1,3,3],3) -> [1,3,3,3];
([0],3) -> [0,3];
([3],0) -> [3,0];
([2,3,0],1) -> [2,3,0,1];
([3],1) -> [3,1];
([3,0],3) -> [3,0,3];
([], 0) -> [0];

=================================
None
([1,2],3) -> [1,2,3];
([3,2],0) -> [3,2,0];
([1,2,0],0) -> [1,2,0,0];
([3],0) -> [3,0];
([2],0) -> [2,0];
([3,0],0) -> [3,0,0];
([1,1],3) -> [1,1,3];
([2,2,2],3) -> [2,2,2,3];
([0,2,3],3) -> [0,2,3,3];
([], 0) -> [0];

=================================
None
([0],2) -> [0,2];
([0],3) -> [0,3];
([0,2],3) -> [0,2,3];
([1,0],0) -> [1,0,0];
([0,0],3) -> [0,0,3];
([1,2],0) -> [1,2,0];
([1,0],2) -> [1,0,2];
([1,0,1],0) -> [1,0,1,0];
([0,0,1],2) -> [0,0,1,2];
([], 0) -> [0];

=================================
None
([0,3,0],3) -> [0,3,0,3];
([2,0],2) -> [2,0,2];
([3],1) -> [3,1];
([0,3,1],1) -> [0,3,1,1];
([0],0) -> [0,0];
([0,3,0],1) -> [0,3,0,1];
([0,1],3) -> [0,1,3];
([3],2) -> [3,2];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
None
([2,3],1) -> [2,3,1];
([1,2],0) -> [1,2,0];
([0,1],1) -> [0,1,1];
([1,3],2) -> [1,3,2];
([1,0,3],3) -> [1,0,3,3];
([0,0],2) -> [0,0,2];
([1],2) -> [1,2];
([3],1) -> [3,1];
([3,0,1],2) -> [3,0,1,2];
([], 0) -> [0];

=================================
None
([2,1,0],2) -> [2,1,0,2];
([3],1) -> [3,1];
([2,3,0],1) -> [2,3,0,1];
([3,3],0) -> [3,3,0];
([3,3,3],2) -> [3,3,3,2];
([1,1],2) -> [1,1,2];
([3,0,3],0) -> [3,0,3,0];
([2,1],2) -> [2,1,2];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([2],0) -> [2,0];
([1],2) -> [1,2];
([2],2) -> [2,2];
([3],2) -> [3,2];
([3,3,3],3) -> [3,3,3,3];
([3,2,2],2) -> [3,2,2,2];
([1,0,0],1) -> [1,0,0,1];
([3,2],1) -> [3,2,1];
([1,0,2],2) -> [1,0,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.5357 true

([2,0,1],2) -> [2,0,1,2];
([0,3],0) -> [0,3,0];
([3],1) -> [3,1];
([0],3) -> [0,3];
([1],2) -> [1,2];
([3,3,1],0) -> [3,3,1,0];
([2],3) -> [2,3];
([3,3],1) -> [3,3,1];
([1,0],0) -> [1,0,0];
([], 0) -> [0];

=================================
None
([1,0],2) -> [1,0,2];
([3,2],0) -> [3,2,0];
([0],1) -> [0,1];
([0,1],3) -> [0,1,3];
([3,2,2],2) -> [3,2,2,2];
([3,3],1) -> [3,3,1];
([2,0],1) -> [2,0,1];
([3],0) -> [3,0];
([2],1) -> [2,1];
([3,3,2],3) -> [3,3,2,3];
([], 0) -> [0];

=================================
None
([3,1,1],3) -> [3,1,1,3];
([3],1) -> [3,1];
([2,1],3) -> [2,1,3];
([0,2,0],3) -> [0,2,0,3];
([2,0,2],0) -> [2,0,2,0];
([1],1) -> [1,1];
([0,0,0],1) -> [0,0,0,1];
([2,3,2],0) -> [2,3,2,0];
([1,3,0],2) -> [1,3,0,2];
([1,3,3],3) -> [1,3,3,3];
([], 0) -> [0];

=================================
None
([2,2,2],1) -> [2,2,2,1];
([0,2],1) -> [0,2,1];
([1,1,0],3) -> [1,1,0,3];
([1],1) -> [1,1];
([2,2],3) -> [2,2,3];
([0],2) -> [0,2];
([1,0,1],3) -> [1,0,1,3];
([1,2],0) -> [1,2,0];
([1,2],3) -> [1,2,3];
([0,2,1],0) -> [0,2,1,0];
([], 0) -> [0];

=================================
None
([1,0,1],0) -> [1,0,1,0];
([0],1) -> [0,1];
([1,1],0) -> [1,1,0];
([1,2],0) -> [1,2,0];
([0],0) -> [0,0];
([3,1,0],2) -> [3,1,0,2];
([3,3,1],2) -> [3,3,1,2];
([2,3,1],1) -> [2,3,1,1];
([1],3) -> [1,3];
([1,0,3],1) -> [1,0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1782 true

([0],2) -> [0,2];
([3,0],0) -> [3,0,0];
([0,3],1) -> [0,3,1];
([0,3,1],3) -> [0,3,1,3];
([0],1) -> [0,1];
([2,1,3],1) -> [2,1,3,1];
([2,2,1],3) -> [2,2,1,3];
([1,3],2) -> [1,3,2];
([1,1],0) -> [1,1,0];
([0,1,3],0) -> [0,1,3,0];
([], 0) -> [0];

=================================
None
([2,0],1) -> [2,0,1];
([1,2],0) -> [1,2,0];
([0,2],1) -> [0,2,1];
([2,2],0) -> [2,2,0];
([1],1) -> [1,1];
([1],3) -> [1,3];
([3,3,2],1) -> [3,3,2,1];
([1],0) -> [1,0];
([0],0) -> [0,0];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.5628 true

([1,3],2) -> [1,3,2];
([3,1],2) -> [3,1,2];
([1,0,1],0) -> [1,0,1,0];
([1,0],2) -> [1,0,2];
([3,3,0],1) -> [3,3,0,1];
([0,1],3) -> [0,1,3];
([2,0],1) -> [2,0,1];
([1],1) -> [1,1];
([2,0,3],3) -> [2,0,3,3];
([0,3],2) -> [0,3,2];
([], 0) -> [0];

=================================
None
([3,3],2) -> [3,3,2];
([1],0) -> [1,0];
([0],1) -> [0,1];
([3,0,1],3) -> [3,0,1,3];
([3,1,2],2) -> [3,1,2,2];
([3,3],3) -> [3,3,3];
([2,3,1],0) -> [2,3,1,0];
([1,2,0],1) -> [1,2,0,1];
([3],2) -> [3,2];
([3,1],0) -> [3,1,0];
([], 0) -> [0];

=================================
None
([2,1,0],0) -> [2,1,0,0];
([3,2],0) -> [3,2,0];
([2,3,0],1) -> [2,3,0,1];
([0],1) -> [0,1];
([2,3],2) -> [2,3,2];
([1,2],1) -> [1,2,1];
([0,2],3) -> [0,2,3];
([2],2) -> [2,2];
([3,3],0) -> [3,3,0];
([0],0) -> [0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

13.1330 true

([3],3) -> [3,3];
([3,0,1],1) -> [3,0,1,1];
([1,0,0],1) -> [1,0,0,1];
([0,1,3],0) -> [0,1,3,0];
([2,0],3) -> [2,0,3];
([0],2) -> [0,2];
([3,3],0) -> [3,3,0];
([0],1) -> [0,1];
([2],2) -> [2,2];
([1,3],2) -> [1,3,2];
([], 0) -> [0];

=================================
None
