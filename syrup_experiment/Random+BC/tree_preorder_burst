Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 2))
                    (f (Un_Node x . 2))

3.2696 false

Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [0,3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.4549 true

Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0992 false

Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

1.1483 false

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.3108 true

Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.5885 true

Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0658 false

Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0557 false

Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [3,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2837 false

Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [2,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.5533 false

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,1,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,0,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.5051 true

Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [0,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.3124 false

Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

1.2724 false

Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

21.4677 true

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.2025 true

Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [2,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

9.5286 false

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0851 false

Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,0,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.4245 false

Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0463 false

Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,1,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,0,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,2,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

9.0663 true

Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.6270 true

Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0617 false

Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.4477 true

Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

26.4043 true

Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [3,2,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [0,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0596 false

Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [0,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

2.7746 true

Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.4020 false

Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [2,0,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,1,0];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [1,2,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

3.5677 false

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

1.3013 false

Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.5579 true

Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,2,1];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,3];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [2,3,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,2,0];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [3,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

2.8603 false

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,3,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.9729 false

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

1.2671 false

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

53.2295 true

Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.1518 false

Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [2,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [2,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

3.6002 true

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,1,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [3,1,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,2,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

50.7477 true

Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,1,3];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

33.3564 false

Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.5470 true

Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,3,0];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [3,1,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

22.7070 true

Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [1,3,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,1,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.9315 true

Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,0,2];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,1,3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,3,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

2.9305 true

Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [2,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

4.8875 false

Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [1,0,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [2,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.5223 false

Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,1,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [0,1,2];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [1,2,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,1,3];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,3,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,2,2];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [1,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

0.5600 false

Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

46.0878 false

Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [3,2,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [3,0,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

8.9038 true

Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,3,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,3,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.0999 true

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [0,2,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [1,3,0];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,1,2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,3];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,0];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,2];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,1];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

22.0093 true

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,3,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [3,0,1];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [2,3,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,1,2];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.3785 true

Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,2,1];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [0,2,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,2,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

35.8068 false

Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,2,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [0,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,1,2];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [0,0,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,1];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [0,1,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [1,3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.4049 true

Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,2];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

1.4178 true

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,0,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,2,0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

36.4057 true

Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,3,2];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,3,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [2,3,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [0,0,2];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [3,2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,3,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [1,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.6639 true

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,2,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [1,2,0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,0,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,3,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,3,1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,3,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,1,1];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,1,2];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [0,0,2];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,0];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [2,3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

10.7312 true

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [3,3,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [3,2,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,2,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,3,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [1,2,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [3,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

9.1116 false

Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,2,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [1,3,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,3,1];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [1,3,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,1,2];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.4861 true

Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,0,2];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,2,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [3,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.1597 true

Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,3,1];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,0,3];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,0];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,2];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [0,1,2];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,2,0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,3,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [2,3,1];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [2,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,3,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

0.1166 true

Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,3,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,1,0];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

10.1259 false

Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,1];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [2,0,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [3,2,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [3,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 2)) (f (Un_Node x . 0)))

1.6724 false

Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,3,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,1,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,3,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

2.9187 true

Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [2,0,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,3];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [0,2,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [2,2,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,0];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [3,0,2];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,3,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))

19.8487 true

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,2,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [1,2,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,2,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [2,2,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Leaf () -> [];

=================================
None
