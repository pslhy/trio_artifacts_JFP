([], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0036 false

([0], 0) -> [0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0035 false

([0], 1) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), f (Un_Cons (x . 0) . 1, x . 1))

0.1574 false

([1, 0], 0) -> [1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1284 true

([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.7812 true

([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.0670 true

([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 1) -> [0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1616 true

([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.0546 true

([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.2093 true

([0], 1) -> [0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 0) -> [0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.7125 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0795 true

([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 0) -> [0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1005 true

([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3447 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1317 true

([], 1) -> [1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.0529 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2876 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5145 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0961 true

([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3826 true

([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.6386 true

([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1946 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0294 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1864 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0326 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0669 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0301 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0240 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4134 true

([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3734 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0277 true

([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
None
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2161 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1225 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0328 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1387 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1033 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0341 true

([], 1) -> [1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0307 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0251 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0228 true

([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1352 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2921 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0366 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0359 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0359 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0330 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0884 true

([], 1) -> [1];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1292 true

([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1506 true

([], 1) -> [1];
([0], 0) -> [0, 0];
([0], 1) -> [0, 1];
([1, 0], 0) -> [1, 0, 0];
([1, 0], 1) -> [1, 0, 1];
([2, 1, 0], 0) -> [2, 1, 0, 0];
([2, 1, 0], 1) -> [2, 1, 0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0328 true

