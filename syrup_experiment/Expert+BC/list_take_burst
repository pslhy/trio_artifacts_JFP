(0, [1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [0, 1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), f Un_Cons (x . 1))

43.9629 false

(1, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0102 false

(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (Un_S (x . 0), Nil)

0.7863 false

(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> f Un_Cons (x . 1)

4.4589 false

(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0000 false

(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0217 false

(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.1045 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [1, 0, 1]) -> [];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(0, [1]) -> [];
(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0534 false

(0, [1]) -> [];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), Nil)

0.1801 false

(0, [1]) -> [];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1

4.9069 false

(0, [1, 0, 1]) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

25.1381 false

(0, [0, 1]) -> [];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(1, []) -> [];
(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0100 false

(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0258 false

(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.2656 false

(0, [0, 1]) -> [];
(1, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.1617 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [0, 1]) -> [0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), Nil)

0.1574 false

(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1

3.1722 false

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(1, []) -> [];
(1, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0062 false

(0, [1]) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> x . 1)

0.2771 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.1256 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.9047 false

(0, [1]) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0626 false

(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

2.0515 false

(1, []) -> [];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.9212 false

(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0168 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_S (x . 0), f Un_Cons (x . 1)))

3.7097 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0,
                      f (Un_S (x . 0), Un_Cons (x . 1) . 1))

87.5417 false

(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.9610 false

(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_S (x . 0), Nil))

0.7459 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil))

18.4567 false

(0, [0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.6979 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (Un_Cons (x . 1) . 1) . 1)

3.0453 false

(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0183 false

(0, [0, 1]) -> [];
(1, []) -> [];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.3036 false

(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, f Un_Cons (x . 1)))

1.9552 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0,
                      f (Un_S (x . 0), Un_Cons (x . 1) . 1))

7.5075 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0,
                      f (Un_S (x . 0), Un_Cons (x . 1) . 1))

97.7328 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_Cons (x . 1) . 0,
                      f (Un_S (x . 0), Un_Cons (x . 1) . 1))

3.0249 false

(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

1.7622 false

(0, [1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

1.5194 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
STACKOVERFLOW

(0, [1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

57.2538 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.2556 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

9.8558 false

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

8.7292 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

23.1632 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4425 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

6.1099 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

11.8472 false

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
None
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.5102 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.8909 true

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

9.1465 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

5.5114 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.3118 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

3.1793 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                  | S _ -> x . 1)

9.4876 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0, f Un_Cons (x . 1)))

0.1912 false

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1144 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

8.1286 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0993 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.3745 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1010 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1922 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0935 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.9568 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4183 true

(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.4839 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0965 true

(0, [1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.5442 true

(0, [1]) -> [];
(0, [0, 1]) -> [];
(0, [1, 0, 1]) -> [];
(1, []) -> [];
(1, [1]) -> [1];
(1, [0, 1]) -> [0];
(1, [1, 0, 1]) -> [1];
(2, []) -> [];
(2, [1]) -> [1];
(2, [0, 1]) -> [0, 1];
(2, [1, 0, 1]) -> [1, 0];
(0, []) -> [];
=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.1005 true

