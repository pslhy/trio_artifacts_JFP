([], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0052 false

([], 2) -> [2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0230 false

([0], 0) -> [0];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, Nil)

0.0113 false

([0], 1) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), f (Un_Cons (x . 0) . 1, x . 1))

0.3144 false

([1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0075 false

([1], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, Nil)

0.0440 false

([1], 2) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

4.4491 false

([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0300 false

([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0217 false

([0], 0) -> [0];
([1], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, Nil)

0.0106 false

([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0055 false

([1], 0) -> [0, 1];
([1], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> x . 0

0.0157 false

([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0099 false

([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Un_Cons (x . 0) . 1))

0.9828 false

([], 2) -> [2];
([1], 2) -> [1, 2];
([], 0) -> [0];
=================================
None
([0], 1) -> [0, 1];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (S (Un_Cons (x . 0) . 0), Nil))

2.7881 false

([], 2) -> [2];
([1], 1) -> [1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, Nil)

0.0438 false

([1], 1) -> [1];
([1], 2) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> x . 0
                     | S _ -> Cons (Un_S (x . 1),
                                     f (Un_Cons (x . 0) . 1, x . 1)))

11.6472 false

([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
None
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> x
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.5752 false

([], 1) -> [1];
([], 2) -> [2];
([1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0050 false

([], 1) -> [1];
([1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
None
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (x . 1, x . 0)
                     | Cons _ -> x . 0)

0.0329 false

([1], 1) -> [1];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0048 false

([], 2) -> [2];
([0], 0) -> [0];
([1], 2) -> [1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.0951 false

([], 2) -> [2];
([0], 0) -> [0];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([2], 0) -> [0, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.8986 false

([], 1) -> [1];
([0], 1) -> [0, 1];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([0], 0) -> [0];
([1], 1) -> [1];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.1215 false

([], 1) -> [1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> x
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.2147 false

([0], 0) -> [0];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

81.3675 false

([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.6376 false

([], 1) -> [1];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 0) -> [0, 1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

23.0184 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> x . 0
                     | S _ -> Cons (x . 1, x . 0))

0.0702 false

([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> x)

0.5004 false

([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (S (Un_Cons (x . 0) . 0), Nil))
                     | S _ -> Cons (x . 1, x . 0))

39.7313 false

([0], 0) -> [0];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

81.4582 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.9017 false

([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

46.8017 true

([], 1) -> [1];
([], 2) -> [2];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

63.9815 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1002 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.0923 false

([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

71.0927 true

([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

10.6362 true

([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

6.1370 true

([], 1) -> [1];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

16.2617 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.2257 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

9.5762 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

3.9975 true

([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

0.9720 true

([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

4.7170 true

([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.9699 true

([], 1) -> [1];
([], 2) -> [2];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.2652 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.7475 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.8879 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.6035 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_S (x . 1),
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.0946 false

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.5092 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.6366 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.5463 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0))

1.4974 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

1.9456 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
None
([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

2.3554 true

([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.9879 true

([], 1) -> [1];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.7617 true

([], 1) -> [1];
([], 2) -> [2];
([0], 0) -> [0];
([0], 1) -> [0, 1];
([1], 0) -> [0, 1];
([1], 1) -> [1];
([1], 2) -> [1, 2];
([2], 0) -> [0, 2];
([2], 1) -> [1, 2];
([0, 1], 0) -> [0, 1];
([0, 1], 2) -> [0, 1, 2];
([], 0) -> [0];
=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | LT _ -> Cons (x . 1, x . 0)
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.6032 true

