[0] -> [0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> x

0.0045 false

[1] -> [1];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> x

0.0056 false

[0, 1] -> [1, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0266 true

[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2195 true

[0] -> [0];
[1] -> [1];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> x

0.0043 false

[0] -> [0];
[0, 1] -> [1, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0361 true

[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2451 true

[1] -> [1];
[0, 1] -> [1, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0231 true

[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1360 true

[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0298 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0244 true

[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1246 true

[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0392 true

[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0225 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
[] -> [];
=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0232 true

