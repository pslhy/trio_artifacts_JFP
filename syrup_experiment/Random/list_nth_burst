([1,2],1) -> 2;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> S (x . 1)

0.0204 false

([2,0,1],0) -> 2;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0194 false

([],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,3,2],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) -> Un_Cons (Un_Cons (x . 0) . 1) . 0

0.0865 false

([],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([1,0,2],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0000 false

([1,1],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0,2],2) -> 0;
([2,0,0],0) -> 2;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0158 false

([],2) -> 0;
([0,1,2],1) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Un_S (Un_S (x . 1))
      | Cons _ -> x . 1

0.3718 false

([1,1],0) -> 1;
([0,0,1],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0076 false

([2,2],0) -> 2;
([2,1],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (Un_S (x . 1))

0.7047 false

([],1) -> 0;
([3,0],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Un_S (x . 1)
      | Cons _ -> Un_Cons (x . 0) . 0

0.0147 false

([],2) -> 0;
([2,3],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,2],1) -> 2;
([3,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) -> Un_Cons (Un_Cons (x . 0) . 1) . 0

0.2760 false

([],1) -> 0;
([1,2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],1) -> 0;
([2,1,2],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0],0) -> 0;
([2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0],2) -> 0;
([0,3,2],1) -> 3;
([3],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_S (x . 1) with
      | O _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0
      | S _ -> Un_S (Un_S (x . 1))

2.9118 false

([],3) -> 0;
([3,3,3],1) -> 3;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> Un_Cons (x . 0) . 0

0.7207 false

([1],2) -> 0;
([0,2],2) -> 0;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,0,2],0) -> 2;
([],2) -> 0;
([1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (Un_S (x . 1))

0.0312 false

([1,1,3],2) -> 3;
([],0) -> 0;
([2,1,1],1) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (Un_Cons (Un_Cons (x . 0) . 1) . 1) . 0

2.2656 false

([0],3) -> 0;
([2,1],2) -> 0;
([1,2],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,3],0) -> 3;
([0,2,3],3) -> 0;
([0,3,3],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> Un_Cons (x . 0) . 0

0.0125 false

([],1) -> 0;
([2],0) -> 2;
([3,3],1) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Un_S (x . 1)
      | Cons _ -> Un_Cons (x . 0) . 0

0.0422 false

([],1) -> 0;
([2,1],3) -> 0;
([1],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,3,3],3) -> 0;
([1],2) -> 0;
([0,2],0) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0,3,2],2) -> 2;
([],1) -> 0;
([1],1) -> 0;
([0,2,1],3) -> 0;

=================================
None
([3,0,1],1) -> 0;
([2,2,1],3) -> 0;
([],0) -> 0;
([3,1],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

1.7321 false

([1],2) -> 0;
([2],2) -> 0;
([3,2,1],1) -> 2;
([],0) -> 0;

=================================
None
([2],1) -> 0;
([1],3) -> 0;
([],1) -> 0;
([3],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0915 false

([3],0) -> 3;
([],0) -> 0;
([0,1,0],3) -> 0;
([],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> Un_Cons (x . 0) . 0

0.0119 false

([2,3,1],2) -> 1;
([],1) -> 0;
([1],3) -> 0;
([3],0) -> 3;

=================================
None
([2,3],1) -> 3;
([3,1,3],0) -> 3;
([0,1],1) -> 1;
([2,1,1],2) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0

17.5142 false

([],3) -> 0;
([0],2) -> 0;
([2],0) -> 2;
([0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0119 false

([3],1) -> 0;
([2,3],0) -> 2;
([],1) -> 0;
([3,0],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (x . 1)

0.2356 false

([1,3],0) -> 1;
([2,1],2) -> 0;
([1],3) -> 0;
([3,1,0],1) -> 1;

=================================
None
([],2) -> 0;
([2],3) -> 0;
([],1) -> 0;
([1,1],0) -> 1;
([1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0529 false

([0,2,1],1) -> 2;
([3,3],1) -> 3;
([1],0) -> 1;
([0],3) -> 0;
([0,2,2],3) -> 0;

=================================
None
([],3) -> 0;
([1],0) -> 1;
([2,1,3],1) -> 1;
([2],3) -> 0;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, 0))

34.5752 false

([1,0,2],0) -> 1;
([2,3],1) -> 3;
([2,2],1) -> 2;
([],1) -> 0;
([0],3) -> 0;

=================================
None
([],1) -> 0;
([0,0,3],3) -> 0;
([2,1],0) -> 2;
([2,3],1) -> 3;
([2,1,2],3) -> 0;

=================================
None
([0],0) -> 0;
([1,1],2) -> 0;
([3,3,2],2) -> 2;
([0],2) -> 0;
([3,2],2) -> 0;

=================================
None
([2],2) -> 0;
([0,1,2],1) -> 1;
([3,2,2],0) -> 3;
([],1) -> 0;
([1,2,0],1) -> 2;

=================================
None
([3],1) -> 0;
([2,1],2) -> 0;
([],1) -> 0;
([],0) -> 0;
([0],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([3,1],2) -> 0;
([2,3],2) -> 0;
([1,1],0) -> 1;
([3,1,1],0) -> 3;
([0,3],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> Un_S (Un_S (x . 1))

0.5066 false

([2,1],0) -> 2;
([3],3) -> 0;
([],3) -> 0;
([0,1,0],2) -> 0;
([0,0],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.6758 false

([],0) -> 0;
([3,2],0) -> 3;
([0],3) -> 0;
([2],1) -> 0;
([],1) -> 0;
([1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.1927 false

([2,1,2],2) -> 2;
([3,3,0],1) -> 3;
([],1) -> 0;
([1,2,0],3) -> 0;
([0],1) -> 0;
([3,2,1],3) -> 0;

=================================
None
([3],2) -> 0;
([0,2,1],0) -> 0;
([0,0],2) -> 0;
([1,2],1) -> 2;
([3,3],2) -> 0;
([],2) -> 0;

=================================
None
([2,2],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([0,0],0) -> 0;
([3,3,3],3) -> 0;
([2,1,0],2) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([0],2) -> 0;
([],2) -> 0;
([2,3],2) -> 0;
([2,1],3) -> 0;
([0,1],0) -> 0;
([1,1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0937 false

([3],0) -> 3;
([],3) -> 0;
([],1) -> 0;
([3,3,2],0) -> 3;
([2,0],1) -> 0;
([0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0113 false

([3],0) -> 3;
([0,1],2) -> 0;
([0,0],0) -> 0;
([0,1,2],0) -> 0;
([],2) -> 0;
([2,1,1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.2546 false

([1,0],0) -> 1;
([1,1,2],0) -> 1;
([3,3,2],0) -> 3;
([],0) -> 0;
([0,0,3],0) -> 0;
([2,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.7759 false

([1,0],0) -> 1;
([1,0,1],1) -> 0;
([0,2],0) -> 0;
([0],2) -> 0;
([3],2) -> 0;
([3,2],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

2.0827 false

([],1) -> 0;
([1,3,2],0) -> 1;
([2,1],3) -> 0;
([],2) -> 0;
([0],3) -> 0;
([1],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.1813 false

([3,1,1],2) -> 1;
([2,0],1) -> 0;
([0,0,2],0) -> 0;
([2],1) -> 0;
([2],3) -> 0;
([3,1,2],1) -> 1;
([0,0,2],1) -> 0;

=================================
None
([0,2,3],2) -> 3;
([2,2],3) -> 0;
([0,3,2],1) -> 3;
([0,3],1) -> 3;
([0],1) -> 0;
([],3) -> 0;
([0],3) -> 0;

=================================
None
([2,2,0],0) -> 2;
([],3) -> 0;
([1,3,1],0) -> 1;
([],1) -> 0;
([3],3) -> 0;
([0,2,1],2) -> 1;
([1],2) -> 0;

=================================
None
([],3) -> 0;
([1,2,3],0) -> 1;
([],0) -> 0;
([3,3],1) -> 3;
([0,2,1],3) -> 0;
([0,3],2) -> 0;
([1],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_S (Un_S (x . 1))
                     | Cons _ -> Un_Cons (x . 0) . 0)

3.5840 false

([],3) -> 0;
([0,1,1],1) -> 1;
([1],2) -> 0;
([1,1],2) -> 0;
([1,3,0],3) -> 0;
([1],3) -> 0;
([1,2],1) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_S (x . 1) with
      | O _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0
      | S _ -> 0

7.0289 false

([],1) -> 0;
([3,0,2],3) -> 0;
([0],2) -> 0;
([2,3,1],0) -> 2;
([0,2,1],1) -> 2;
([0,3],2) -> 0;
([0,1],3) -> 0;

=================================
None
([],3) -> 0;
([0],1) -> 0;
([3,0,1],0) -> 3;
([2],1) -> 0;
([0,3],1) -> 3;
([2,3,1],1) -> 3;
([1],0) -> 1;

=================================
None
([0],1) -> 0;
([3,3],3) -> 0;
([0],0) -> 0;
([2,0],0) -> 2;
([1,1],0) -> 1;
([2,2,0],1) -> 2;
([3,2],0) -> 3;

=================================
None
([],3) -> 0;
([2],3) -> 0;
([1],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([0],3) -> 0;
([1],1) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([2,2,0],0) -> 2;
([3,1,3],0) -> 3;
([2],0) -> 2;
([],3) -> 0;
([0,1,0],3) -> 0;
([3],2) -> 0;
([0,2],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.0366 false

([3],0) -> 3;
([],0) -> 0;
([0,1,2],2) -> 2;
([1],1) -> 0;
([1,0],1) -> 0;
([3,1,0],1) -> 1;
([2,1,1],3) -> 0;
([2],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

15.7490 true

([0],1) -> 0;
([1,2,1],1) -> 2;
([],2) -> 0;
([2,1,3],1) -> 1;
([1,0,1],0) -> 1;
([],3) -> 0;
([1],2) -> 0;
([2,3],2) -> 0;

=================================
None
([0,1,3],0) -> 0;
([0,3],2) -> 0;
([3,0,2],2) -> 2;
([0],3) -> 0;
([3,0,2],0) -> 3;
([1,3,0],3) -> 0;
([2,2],2) -> 0;
([2,2],0) -> 2;

=================================
None
([2,0],3) -> 0;
([0,0],0) -> 0;
([1,0,3],1) -> 0;
([],3) -> 0;
([],0) -> 0;
([3,2,0],3) -> 0;
([2,3,0],0) -> 2;
([0,1,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

9.4075 false

([0,3],0) -> 0;
([2,1,2],1) -> 1;
([],3) -> 0;
([0,0,0],0) -> 0;
([],2) -> 0;
([0,1,0],0) -> 0;
([3,0],1) -> 0;
([1],3) -> 0;

=================================
None
([2],0) -> 2;
([2,1],2) -> 0;
([1],3) -> 0;
([3,3,0],3) -> 0;
([0,1,3],3) -> 0;
([1,2,0],3) -> 0;
([],3) -> 0;
([2,1],1) -> 1;

=================================
None
([1,3,3],0) -> 1;
([3,3,2],2) -> 2;
([],2) -> 0;
([],3) -> 0;
([],0) -> 0;
([1,3,2],0) -> 1;
([0,3],3) -> 0;
([2,0],2) -> 0;

=================================
None
([0,2,1],3) -> 0;
([1,0],2) -> 0;
([3],1) -> 0;
([],0) -> 0;
([3],0) -> 3;
([0],0) -> 0;
([1,3],3) -> 0;
([1,3,2],1) -> 3;

=================================
None
([1,2],3) -> 0;
([3,0,0],3) -> 0;
([],3) -> 0;
([2,1,3],3) -> 0;
([2,0,3],0) -> 2;
([],0) -> 0;
([],2) -> 0;
([2],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

5.2044 false

([3,0],0) -> 3;
([0,0],1) -> 0;
([0],2) -> 0;
([],3) -> 0;
([0,3,2],1) -> 3;
([],1) -> 0;
([0,1],0) -> 0;
([1],1) -> 0;

=================================
None
([3],1) -> 0;
([3],3) -> 0;
([1,0,3],2) -> 3;
([3,0],2) -> 0;
([0],0) -> 0;
([1],0) -> 1;
([],1) -> 0;
([2],2) -> 0;
([1,3,3],0) -> 1;

=================================
None
([2,3,1],3) -> 0;
([1,3,3],2) -> 3;
([3,0],3) -> 0;
([3,0,2],2) -> 2;
([],0) -> 0;
([1],3) -> 0;
([2],2) -> 0;
([2],1) -> 0;
([],3) -> 0;

=================================
None
([0],2) -> 0;
([],3) -> 0;
([2,1,3],0) -> 2;
([0,1,1],1) -> 1;
([0,1,0],1) -> 1;
([2,3,2],1) -> 3;
([],1) -> 0;
([1,1,3],2) -> 3;
([],2) -> 0;

=================================
None
([2,2,0],0) -> 2;
([2],3) -> 0;
([3],3) -> 0;
([1,3,1],0) -> 1;
([1,3],2) -> 0;
([0,2,3],0) -> 0;
([3,1,0],1) -> 1;
([2,2],2) -> 0;
([0,0,2],0) -> 0;

=================================
None
([1,2],2) -> 0;
([0],2) -> 0;
([1],3) -> 0;
([2,0,3],0) -> 2;
([2],3) -> 0;
([1,2,3],0) -> 1;
([1,1,0],0) -> 1;
([2,1,3],3) -> 0;
([],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

3.5464 false

([0,1,3],0) -> 0;
([3],3) -> 0;
([0],2) -> 0;
([1],2) -> 0;
([1],3) -> 0;
([],2) -> 0;
([3,3,2],2) -> 2;
([2],3) -> 0;
([2,2,3],1) -> 2;

=================================
None
([0],1) -> 0;
([],2) -> 0;
([1,1,1],0) -> 1;
([2,0],3) -> 0;
([3,0],1) -> 0;
([],3) -> 0;
([3,3,2],0) -> 3;
([0,3,1],3) -> 0;
([0,2,3],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.3517 false

([3,2,0],2) -> 0;
([],2) -> 0;
([3,0,1],1) -> 0;
([1,1,3],0) -> 1;
([1],2) -> 0;
([3,2],1) -> 2;
([3],0) -> 3;
([2],0) -> 2;
([3,2],3) -> 0;

=================================
None
([2,2],3) -> 0;
([2,3],2) -> 0;
([0],2) -> 0;
([0],0) -> 0;
([3,0,0],3) -> 0;
([1,1,0],0) -> 1;
([],3) -> 0;
([0],3) -> 0;
([3,2],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

1.9719 false

([],1) -> 0;
([],2) -> 0;
([],0) -> 0;
([2,0,0],3) -> 0;
([0,3,2],1) -> 3;
([0],1) -> 0;
([0],3) -> 0;
([],3) -> 0;
([1,0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> 0
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0)

2.6789 false

([],0) -> 0;
([],1) -> 0;
([0,0],1) -> 0;
([1],1) -> 0;
([1,1],2) -> 0;
([],2) -> 0;
([0,1,3],0) -> 0;
([0,3],2) -> 0;
([2,0,2],0) -> 2;
([1],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

0.2704 false

([2,3],2) -> 0;
([3,0],3) -> 0;
([0,2,1],3) -> 0;
([],1) -> 0;
([3],3) -> 0;
([1,3],0) -> 1;
([1,3,3],0) -> 1;
([],0) -> 0;
([],3) -> 0;
([2,2],0) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

4.9837 false

([2,3,2],3) -> 0;
([1,1],2) -> 0;
([0,2],3) -> 0;
([],3) -> 0;
([0,2,2],1) -> 2;
([],2) -> 0;
([3],2) -> 0;
([3,0],2) -> 0;
([1,1,1],2) -> 1;
([],0) -> 0;

=================================
None
([2,2,1],1) -> 2;
([0],0) -> 0;
([1,2,0],2) -> 0;
([],1) -> 0;
([1,2,3],0) -> 1;
([],3) -> 0;
([1],3) -> 0;
([1,2,3],1) -> 2;
([0,3,2],2) -> 2;
([1],0) -> 1;

=================================
None
([],2) -> 0;
([0,2],1) -> 2;
([],0) -> 0;
([2],3) -> 0;
([1,0,0],1) -> 0;
([2],0) -> 2;
([],1) -> 0;
([0],1) -> 0;
([0,1],0) -> 0;
([0,3,0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

18.5829 true

([2,0],3) -> 0;
([2],2) -> 0;
([0],2) -> 0;
([3],2) -> 0;
([2,2,2],3) -> 0;
([1,3],1) -> 3;
([0],3) -> 0;
([2,1],1) -> 1;
([2,2],3) -> 0;
([1,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match Un_S (x . 1) with
      | O _ -> Un_Cons (Un_Cons (x . 0) . 1) . 0
      | S _ -> 0

3.0515 false

([0],1) -> 0;
([0,2,2],0) -> 0;
([2,1,3],3) -> 0;
([2,0],0) -> 2;
([3],3) -> 0;
([0],2) -> 0;
([1,2],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([2,1],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

15.0528 false

([],2) -> 0;
([3],1) -> 0;
([2],3) -> 0;
([1,0,1],1) -> 0;
([1],1) -> 0;
([],1) -> 0;
([0],1) -> 0;
([1,0],1) -> 0;
([3],3) -> 0;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) = fun (x:list * nat) -> 0

0.0001 false

([],2) -> 0;
([1,1],2) -> 0;
([1],3) -> 0;
([],3) -> 0;
([2,1],3) -> 0;
([0],0) -> 0;
([],1) -> 0;
([1],0) -> 1;
([2],2) -> 0;
([],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.0422 false

([1,3,1],0) -> 1;
([3],1) -> 0;
([],3) -> 0;
([0],2) -> 0;
([3,3],1) -> 3;
([1,1,3],1) -> 1;
([2,0],1) -> 0;
([],0) -> 0;
([3,1],0) -> 3;
([1,3],3) -> 0;

=================================
None
([2,0,1],3) -> 0;
([],1) -> 0;
([0,2],3) -> 0;
([],3) -> 0;
([],2) -> 0;
([3,3,3],1) -> 3;
([2,1,2],2) -> 2;
([0],1) -> 0;
([2,2],1) -> 2;
([3,1,3],2) -> 3;
([2,0,3],1) -> 0;

=================================
None
([0],1) -> 0;
([],2) -> 0;
([1],2) -> 0;
([],1) -> 0;
([3,0],2) -> 0;
([2],3) -> 0;
([1,1,2],2) -> 2;
([2,1,1],2) -> 1;
([0,3,2],0) -> 0;
([0,0],0) -> 0;
([3,1,0],0) -> 3;

=================================
None
([0,3],3) -> 0;
([2,0],0) -> 2;
([0],3) -> 0;
([3,0,3],3) -> 0;
([1],1) -> 0;
([],2) -> 0;
([0],0) -> 0;
([2,0],3) -> 0;
([],1) -> 0;
([],3) -> 0;
([2,3,0],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

2.3166 false

([3,3],2) -> 0;
([],1) -> 0;
([3,1],1) -> 1;
([],2) -> 0;
([1],1) -> 0;
([0,0],2) -> 0;
([2,2],1) -> 2;
([],3) -> 0;
([3],2) -> 0;
([1,1],1) -> 1;
([1,2],0) -> 1;

=================================
None
([],2) -> 0;
([2,2,3],1) -> 2;
([3,2,1],3) -> 0;
([],0) -> 0;
([2,1,1],2) -> 1;
([2,0,0],3) -> 0;
([2,0,3],2) -> 3;
([0,1],3) -> 0;
([],3) -> 0;
([3,1],3) -> 0;
([0,3,0],2) -> 0;

=================================
None
([3],3) -> 0;
([],0) -> 0;
([1,2,0],1) -> 2;
([0],2) -> 0;
([1,1],0) -> 1;
([0,2,2],3) -> 0;
([3],0) -> 3;
([2,0],0) -> 2;
([0,0],0) -> 0;
([2],3) -> 0;
([2,0,0],0) -> 2;

=================================
None
([2,2,0],3) -> 0;
([],3) -> 0;
([],0) -> 0;
([0,3],0) -> 0;
([0],3) -> 0;
([3],2) -> 0;
([0,3],2) -> 0;
([0,3],3) -> 0;
([3,2,2],0) -> 3;
([1,1,0],3) -> 0;
([],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

7.7163 false

([3],2) -> 0;
([],1) -> 0;
([2,1],1) -> 1;
([3],0) -> 3;
([2,2,0],2) -> 0;
([2,0,2],2) -> 2;
([1,3,1],1) -> 3;
([],2) -> 0;
([3,2],3) -> 0;
([3,2,2],0) -> 3;
([0,2],0) -> 0;

=================================
None
([2],0) -> 2;
([],3) -> 0;
([3,0,1],3) -> 0;
([1,2,2],0) -> 1;
([1],0) -> 1;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.2008 false

([1,3,2],3) -> 0;
([3,1],2) -> 0;
([3,1,3],2) -> 3;
([2,1],1) -> 1;
([1,1],3) -> 0;
([0,3,0],2) -> 0;
([1,0],2) -> 0;
([0,3],2) -> 0;
([1,1,2],1) -> 1;
([3,0,2],0) -> 3;
([],2) -> 0;

=================================
None
([2,1],3) -> 0;
([3,0],2) -> 0;
([3],2) -> 0;
([1,2,1],1) -> 2;
([],0) -> 0;
([2,2],1) -> 2;
([],2) -> 0;
([0,3,2],1) -> 3;
([0,0],1) -> 0;
([1],0) -> 1;
([1,1,1],3) -> 0;
([0],1) -> 0;

=================================
None
([1,0],2) -> 0;
([2,2],2) -> 0;
([2,0],0) -> 2;
([1],3) -> 0;
([2,2,1],3) -> 0;
([0],1) -> 0;
([],1) -> 0;
([],2) -> 0;
([1,3],3) -> 0;
([2],3) -> 0;
([3,3,3],0) -> 3;
([0],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

0.3305 false

([3,1,3],0) -> 3;
([1,3],2) -> 0;
([1,0],0) -> 1;
([2,1,1],0) -> 2;
([3,3],3) -> 0;
([3],0) -> 3;
([],1) -> 0;
([2,0,3],3) -> 0;
([0,2,3],0) -> 0;
([3,2],2) -> 0;
([2,2],3) -> 0;
([2,3,3],0) -> 2;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

1.6033 false

([0],1) -> 0;
([1,0,1],0) -> 1;
([3,2],3) -> 0;
([3],3) -> 0;
([],1) -> 0;
([1],1) -> 0;
([1],0) -> 1;
([0,3,2],0) -> 0;
([2,1,3],0) -> 2;
([2,3],2) -> 0;
([0,0],3) -> 0;
([],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Un_Cons (x . 0) . 0
      | S _ -> 0

6.0045 false

([1,3],3) -> 0;
([0,1,0],1) -> 1;
([],1) -> 0;
([],2) -> 0;
([0,0],2) -> 0;
([0,1],3) -> 0;
([1,3],2) -> 0;
([3,1,1],0) -> 3;
([3,2,1],1) -> 2;
([0],0) -> 0;
([3],1) -> 0;
([],0) -> 0;

=================================
None
([],0) -> 0;
([1,3],1) -> 3;
([2,0],0) -> 2;
([2,0],2) -> 0;
([0,3,3],0) -> 0;
([1,3],3) -> 0;
([2],1) -> 0;
([3,3],2) -> 0;
([1,3],0) -> 1;
([0,2,0],1) -> 2;
([1],2) -> 0;
([1,0],0) -> 1;

=================================
None
([],0) -> 0;
([1,1,3],3) -> 0;
([],1) -> 0;
([3,1,2],2) -> 2;
([3,0,3],2) -> 3;
([0],0) -> 0;
([],2) -> 0;
([2,2,2],0) -> 2;
([1,2,2],0) -> 1;
([],3) -> 0;
([3,1,0],3) -> 0;
([1],0) -> 1;

=================================
None
([3,0,2],0) -> 3;
([3],1) -> 0;
([],0) -> 0;
([0,2,0],1) -> 2;
([0],0) -> 0;
([],3) -> 0;
([3,1,3],2) -> 3;
([3],3) -> 0;
([0,0],2) -> 0;
([1,1],1) -> 1;
([2,3],3) -> 0;
([],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

3.1988 true

([0,1],0) -> 0;
([3],0) -> 3;
([1,3],0) -> 1;
([1],1) -> 0;
([0,1,0],1) -> 1;
([],2) -> 0;
([],1) -> 0;
([0,3,1],1) -> 3;
([0,1,2],0) -> 0;
([2],1) -> 0;
([0,0],1) -> 0;
([1],3) -> 0;

=================================
None
([1],2) -> 0;
([],2) -> 0;
([2],0) -> 2;
([2],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([3,1,2],1) -> 1;
([3,2,1],2) -> 1;
([0],0) -> 0;
([],3) -> 0;
([3],3) -> 0;
([3,3],0) -> 3;

=================================
None
([3],3) -> 0;
([],2) -> 0;
([2,1,1],1) -> 1;
([0],0) -> 0;
([2,2,2],2) -> 2;
([3,2],3) -> 0;
([1],0) -> 1;
([],3) -> 0;
([3,0,3],2) -> 3;
([1,3],1) -> 3;
([0],2) -> 0;
([0,0],1) -> 0;
([0],3) -> 0;

=================================
None
([0,3],2) -> 0;
([0,3],3) -> 0;
([2,0],3) -> 0;
([1,2,3],2) -> 3;
([],2) -> 0;
([3],0) -> 3;
([],1) -> 0;
([1],1) -> 0;
([2],2) -> 0;
([1],0) -> 1;
([2,3],0) -> 2;
([2,3],2) -> 0;
([2,2],2) -> 0;

=================================
None
([],3) -> 0;
([1],0) -> 1;
([0,3],0) -> 0;
([3,1,1],0) -> 3;
([2,2],1) -> 2;
([3,2],3) -> 0;
([1],1) -> 0;
([0],0) -> 0;
([2],2) -> 0;
([],1) -> 0;
([],2) -> 0;
([3,0,3],1) -> 0;
([1,1],0) -> 1;

=================================
None
([0],3) -> 0;
([1,2,2],0) -> 1;
([0,1],3) -> 0;
([3],3) -> 0;
([],0) -> 0;
([1,2],0) -> 1;
([2],2) -> 0;
([1,0],1) -> 0;
([],1) -> 0;
([2,2],2) -> 0;
([2,3],3) -> 0;
([2,3,3],2) -> 3;
([3],1) -> 0;

=================================
None
([],0) -> 0;
([0],0) -> 0;
([3],0) -> 3;
([1,3],1) -> 3;
([1,2,3],3) -> 0;
([],1) -> 0;
([3,1,0],3) -> 0;
([],2) -> 0;
([1],2) -> 0;
([1],1) -> 0;
([2],0) -> 2;
([3,3,1],0) -> 3;
([1,0],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

17.4655 true

([2,1,0],1) -> 1;
([3,3,1],2) -> 1;
([1,3],2) -> 0;
([0,3],2) -> 0;
([1,0],3) -> 0;
([],1) -> 0;
([0,2,2],1) -> 2;
([3],1) -> 0;
([0,2],0) -> 0;
([2,1,3],1) -> 1;
([1],1) -> 0;
([2,1],0) -> 2;
([2],0) -> 2;

=================================
None
([2,2],0) -> 2;
([1,2,2],0) -> 1;
([0,3,2],0) -> 0;
([1],2) -> 0;
([2],0) -> 2;
([1,0],0) -> 1;
([],1) -> 0;
([1],1) -> 0;
([1,1,0],1) -> 1;
([0],3) -> 0;
([2],3) -> 0;
([2,1],3) -> 0;
([0,0,0],1) -> 0;

=================================
None
([0,2],3) -> 0;
([3,0],2) -> 0;
([],1) -> 0;
([1,0],3) -> 0;
([1],0) -> 1;
([1,1],1) -> 1;
([1,1],3) -> 0;
([3,1,3],0) -> 3;
([],0) -> 0;
([1,0,3],0) -> 1;
([1,0,1],2) -> 1;
([2,3,1],0) -> 2;
([2,2,3],3) -> 0;

=================================
None
([3,1,0],3) -> 0;
([3,0,3],3) -> 0;
([0,1,3],0) -> 0;
([1],0) -> 1;
([1,1,1],3) -> 0;
([],1) -> 0;
([],3) -> 0;
([],2) -> 0;
([0],0) -> 0;
([1,1],0) -> 1;
([3,0],2) -> 0;
([0,0,1],2) -> 1;
([],0) -> 0;

=================================
None
([0,3],0) -> 0;
([2,3,3],3) -> 0;
([2],2) -> 0;
([3],1) -> 0;
([],1) -> 0;
([2],1) -> 0;
([3,0,2],1) -> 0;
([2,3,1],0) -> 2;
([],3) -> 0;
([1,3],2) -> 0;
([2,3],3) -> 0;
([],0) -> 0;
([0],0) -> 0;

=================================
None
([2,1],2) -> 0;
([3,0,2],1) -> 0;
([3,3],0) -> 3;
([0],1) -> 0;
([0,2],2) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([1],2) -> 0;
([3],3) -> 0;
([1,3,1],1) -> 3;
([3,0],0) -> 3;
([3,3],1) -> 3;
([0,2,0],2) -> 0;
([0,1,3],3) -> 0;

=================================
None
([2,2,1],0) -> 2;
([1,3],1) -> 3;
([],3) -> 0;
([0,2],2) -> 0;
([0,3,0],3) -> 0;
([0],2) -> 0;
([3,3],2) -> 0;
([0,0,1],3) -> 0;
([],1) -> 0;
([0,2,1],1) -> 2;
([3,3,2],3) -> 0;
([0,1,3],0) -> 0;
([],2) -> 0;
([2],0) -> 2;

=================================
None
([2,3],0) -> 2;
([2],1) -> 0;
([0],2) -> 0;
([1],0) -> 1;
([2,3],1) -> 3;
([1,3,2],3) -> 0;
([2,0],1) -> 0;
([3],0) -> 3;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([0],0) -> 0;
([2,0],3) -> 0;
([3],1) -> 0;

=================================
None
([0,2],3) -> 0;
([2,1],1) -> 1;
([],2) -> 0;
([3,3,2],0) -> 3;
([3,1,0],1) -> 1;
([2,0],0) -> 2;
([3],1) -> 0;
([2],0) -> 2;
([2],1) -> 0;
([0,1],1) -> 1;
([3],3) -> 0;
([],3) -> 0;
([0,1,2],0) -> 0;
([0],1) -> 0;

=================================
None
([0,1,2],1) -> 1;
([0],2) -> 0;
([2,3],3) -> 0;
([0,0],3) -> 0;
([3,0],3) -> 0;
([3],1) -> 0;
([0,1,1],0) -> 0;
([2],0) -> 2;
([],2) -> 0;
([1,2,0],0) -> 1;
([3,1,1],2) -> 1;
([],3) -> 0;
([1,0],0) -> 1;
([1],2) -> 0;

=================================
None
([0],0) -> 0;
([3,3],2) -> 0;
([],3) -> 0;
([0,0],1) -> 0;
([3],2) -> 0;
([3,1,2],3) -> 0;
([1,3],3) -> 0;
([1,0,2],1) -> 0;
([],0) -> 0;
([],2) -> 0;
([1],2) -> 0;
([2,0,0],0) -> 2;
([2,3,1],3) -> 0;
([0,2],0) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> (match x . 0 with
                  | Nil _ -> x . 1
                  | Cons _ -> Un_Cons (x . 0) . 0)
      | S _ -> 0

0.8317 false

([],3) -> 0;
([0,2],3) -> 0;
([1],1) -> 0;
([3,3],0) -> 3;
([3,1,3],1) -> 1;
([0],3) -> 0;
([],1) -> 0;
([1,1],1) -> 1;
([0],2) -> 0;
([0],0) -> 0;
([1,3],3) -> 0;
([2,2],3) -> 0;
([0,2,2],0) -> 0;
([3],1) -> 0;

=================================
None
([3,1,0],0) -> 3;
([2,1],1) -> 1;
([1,1],0) -> 1;
([0,1,0],2) -> 0;
([],2) -> 0;
([2,3],1) -> 3;
([2,1,1],0) -> 2;
([0,3],3) -> 0;
([3,3,1],2) -> 1;
([3],1) -> 0;
([0],2) -> 0;
([1,3,3],2) -> 3;
([1,2,0],3) -> 0;
([],0) -> 0;

=================================
None
([2,3],1) -> 3;
([0,1,1],0) -> 0;
([2,1,3],0) -> 2;
([],3) -> 0;
([],2) -> 0;
([3],1) -> 0;
([3],2) -> 0;
([0],3) -> 0;
([0,2,2],3) -> 0;
([0,3,3],1) -> 3;
([2],0) -> 2;
([1,1],0) -> 1;
([1],0) -> 1;
([3,0],0) -> 3;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

25.4649 true

([1,0,2],1) -> 0;
([2,0],2) -> 0;
([1,0,0],1) -> 0;
([1,0,3],0) -> 1;
([0],0) -> 0;
([2,1,0],1) -> 1;
([],3) -> 0;
([0,2,1],0) -> 0;
([0,1,0],2) -> 0;
([0],3) -> 0;
([2,3,2],2) -> 2;
([],0) -> 0;
([2,1,1],1) -> 1;
([3,0,0],2) -> 0;

=================================
None
([],0) -> 0;
([1,2,2],2) -> 2;
([0],0) -> 0;
([2,2],2) -> 0;
([2],2) -> 0;
([2],0) -> 2;
([1,0,1],0) -> 1;
([3],2) -> 0;
([2,0],1) -> 0;
([3,1,3],2) -> 3;
([3,1,1],3) -> 0;
([1,1],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,2,1],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

73.8165 true

([3,1],2) -> 0;
([2],2) -> 0;
([3,0,0],2) -> 0;
([],2) -> 0;
([1,0],3) -> 0;
([3,3],1) -> 3;
([],1) -> 0;
([3,3],3) -> 0;
([0],0) -> 0;
([3],3) -> 0;
([],0) -> 0;
([2,3,1],1) -> 3;
([],3) -> 0;
([3,0],0) -> 3;
([1],3) -> 0;

=================================
None
([3,2,3],2) -> 3;
([3],1) -> 0;
([0],3) -> 0;
([2],2) -> 0;
([0],0) -> 0;
([],0) -> 0;
([],3) -> 0;
([0,1,2],2) -> 2;
([3,1],2) -> 0;
([],2) -> 0;
([2,2,0],1) -> 2;
([2,1,0],0) -> 2;
([1,2],0) -> 1;
([],1) -> 0;
([0,2],3) -> 0;

=================================
None
([1],0) -> 1;
([0],0) -> 0;
([2,3,2],1) -> 3;
([3,0],1) -> 0;
([],3) -> 0;
([1,0,1],3) -> 0;
([3,1,0],2) -> 0;
([2,0],0) -> 2;
([1,1,1],3) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([3,0],3) -> 0;
([0,0,3],2) -> 3;
([3,3],0) -> 3;
([2],3) -> 0;

=================================
None
([0,3],2) -> 0;
([0],2) -> 0;
([3,0],1) -> 0;
([0,2],0) -> 0;
([],2) -> 0;
([1,1],3) -> 0;
([],3) -> 0;
([0,3,2],3) -> 0;
([2,3,2],2) -> 2;
([2],1) -> 0;
([],1) -> 0;
([1,2,2],0) -> 1;
([3],0) -> 3;
([],0) -> 0;
([3,2],2) -> 0;

=================================
None
([2],0) -> 2;
([0,1,2],1) -> 1;
([1,3,3],0) -> 1;
([2,0,0],3) -> 0;
([1,0],0) -> 1;
([2,0,1],2) -> 1;
([1,2],1) -> 2;
([3,2],0) -> 3;
([0],3) -> 0;
([2,2],0) -> 2;
([3],2) -> 0;
([2,2,3],3) -> 0;
([],3) -> 0;
([1,0,2],0) -> 1;
([],1) -> 0;

=================================
None
([3,3],3) -> 0;
([],3) -> 0;
([0,1],0) -> 0;
([2,3,2],3) -> 0;
([3],1) -> 0;
([3,2,0],1) -> 2;
([1],2) -> 0;
([2,3],2) -> 0;
([],0) -> 0;
([3,0],3) -> 0;
([2],3) -> 0;
([0,3],3) -> 0;
([3,3,0],0) -> 3;
([1,2],3) -> 0;
([2],2) -> 0;

=================================
None
([3,0],2) -> 0;
([2,0],2) -> 0;
([1,2],1) -> 2;
([3,2],3) -> 0;
([2,0],1) -> 0;
([1,1],1) -> 1;
([0,0],3) -> 0;
([2,2,2],2) -> 2;
([2,1],2) -> 0;
([1],1) -> 0;
([2],0) -> 2;
([2,2],3) -> 0;
([2],3) -> 0;
([3,3,0],2) -> 0;
([],1) -> 0;

=================================
None
([3,2,3],0) -> 3;
([2],1) -> 0;
([0,0],1) -> 0;
([3,3,1],2) -> 1;
([2,2],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([3,3,0],1) -> 3;
([1],1) -> 0;
([0,1],0) -> 0;
([],3) -> 0;
([2],3) -> 0;
([0],2) -> 0;
([1],0) -> 1;
([3,1],0) -> 3;

=================================
None
([0,0,1],3) -> 0;
([1,0,2],1) -> 0;
([],0) -> 0;
([1],3) -> 0;
([2,0],3) -> 0;
([1,0],3) -> 0;
([3,0,1],0) -> 3;
([1],1) -> 0;
([3],0) -> 3;
([2,2],1) -> 2;
([3],1) -> 0;
([1,0],0) -> 1;
([0,0,1],2) -> 1;
([],1) -> 0;
([1,2,2],3) -> 0;

=================================
None
([3,0],2) -> 0;
([],2) -> 0;
([],3) -> 0;
([3],0) -> 3;
([],0) -> 0;
([],1) -> 0;
([0,3,3],0) -> 0;
([1],0) -> 1;
([1,0],3) -> 0;
([3,2],2) -> 0;
([1],2) -> 0;
([0,0],0) -> 0;
([2,1,3],2) -> 3;
([0,0],3) -> 0;
([3],1) -> 0;
([1,3],2) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

7.8662 true

([2,2],2) -> 0;
([0,0],3) -> 0;
([],3) -> 0;
([0,1],1) -> 1;
([],0) -> 0;
([3,2],3) -> 0;
([2],1) -> 0;
([],1) -> 0;
([],2) -> 0;
([1,0],1) -> 0;
([0,0,0],1) -> 0;
([0,0],2) -> 0;
([0,2],0) -> 0;
([3,3,3],2) -> 3;
([2,3,2],2) -> 2;
([0,0],0) -> 0;

=================================
None
([],2) -> 0;
([],1) -> 0;
([3,1,1],2) -> 1;
([0,2,3],3) -> 0;
([1,2,0],0) -> 1;
([0],1) -> 0;
([2,0],2) -> 0;
([],0) -> 0;
([2,3,3],0) -> 2;
([3,2,1],0) -> 3;
([3,2],2) -> 0;
([1],1) -> 0;
([1],3) -> 0;
([1,1,3],0) -> 1;
([0,0],3) -> 0;
([3,0],3) -> 0;

=================================
None
([],3) -> 0;
([3,1],0) -> 3;
([1],1) -> 0;
([],2) -> 0;
([1,2],0) -> 1;
([2],2) -> 0;
([2],0) -> 2;
([0],0) -> 0;
([3],2) -> 0;
([],0) -> 0;
([2,0],3) -> 0;
([0,0,0],0) -> 0;
([2,3],3) -> 0;
([1,1,2],2) -> 2;
([3,1],2) -> 0;
([3,1,2],3) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

13.9919 true

([3,2,1],3) -> 0;
([1,2],2) -> 0;
([0,3,1],3) -> 0;
([2,1],2) -> 0;
([0,2,0],0) -> 0;
([],0) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([3,3],2) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([0,3,3],2) -> 3;
([],3) -> 0;
([3,2],2) -> 0;
([1,2,0],1) -> 2;
([2,2],3) -> 0;

=================================
None
([],3) -> 0;
([2,1,0],0) -> 2;
([],0) -> 0;
([2,1,1],2) -> 1;
([1,0],3) -> 0;
([2],0) -> 2;
([2,0,3],2) -> 3;
([0,3],3) -> 0;
([3,3],0) -> 3;
([0],1) -> 0;
([3],1) -> 0;
([],1) -> 0;
([2,3,3],2) -> 3;
([0,1],3) -> 0;
([],2) -> 0;
([3,0,3],2) -> 3;

=================================
None
([3],0) -> 3;
([2,2,1],1) -> 2;
([3],1) -> 0;
([],0) -> 0;
([1,2,1],2) -> 1;
([0],1) -> 0;
([1,0],1) -> 0;
([0,3,3],0) -> 0;
([0,3],0) -> 0;
([0,0,3],1) -> 0;
([2,2],2) -> 0;
([1],3) -> 0;
([2,1,1],2) -> 1;
([3,0],3) -> 0;
([2,2],0) -> 2;
([3,3],1) -> 3;

=================================
None
([0,2],3) -> 0;
([],1) -> 0;
([3,2],3) -> 0;
([2,2],3) -> 0;
([3],0) -> 3;
([2,2,1],3) -> 0;
([1],1) -> 0;
([2,1],0) -> 2;
([0,0,3],1) -> 0;
([],3) -> 0;
([2,0,3],2) -> 3;
([0],1) -> 0;
([],2) -> 0;
([2,2,3],2) -> 3;
([0,2],0) -> 0;
([1,2],1) -> 2;

=================================
None
([3,2,0],3) -> 0;
([],0) -> 0;
([3],0) -> 3;
([3],1) -> 0;
([0],2) -> 0;
([1,2],3) -> 0;
([1],2) -> 0;
([2,3],0) -> 2;
([3,2],1) -> 2;
([0],0) -> 0;
([2,0,1],3) -> 0;
([2],2) -> 0;
([1,0],2) -> 0;
([2,0,3],3) -> 0;
([],2) -> 0;
([0],3) -> 0;

=================================
None
([3,2],3) -> 0;
([1,3,2],2) -> 2;
([],1) -> 0;
([3,0,2],0) -> 3;
([0],1) -> 0;
([3,0],2) -> 0;
([3],0) -> 3;
([3,1],2) -> 0;
([2],0) -> 2;
([2],1) -> 0;
([],0) -> 0;
([1,2],1) -> 2;
([2,1],3) -> 0;
([3,3],0) -> 3;
([0,1],2) -> 0;
([],3) -> 0;

=================================
None
([2],0) -> 2;
([2,1],2) -> 0;
([],1) -> 0;
([0,0],1) -> 0;
([1,1],0) -> 1;
([],3) -> 0;
([3],3) -> 0;
([2,2,3],1) -> 2;
([3,1],2) -> 0;
([3,0,1],3) -> 0;
([2,2,1],1) -> 2;
([2],1) -> 0;
([1,0,0],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([2,1,2],0) -> 2;
([0,2],0) -> 0;

=================================
None
([3],3) -> 0;
([],2) -> 0;
([2,3],0) -> 2;
([1,3],1) -> 3;
([0,0],3) -> 0;
([2,3,2],0) -> 2;
([1],1) -> 0;
([],1) -> 0;
([3,3],1) -> 3;
([],0) -> 0;
([0,1],1) -> 1;
([1,1],1) -> 1;
([2],0) -> 2;
([0,3,2],1) -> 3;
([2,1,0],2) -> 0;
([2],1) -> 0;
([0],1) -> 0;

=================================
None
([0],0) -> 0;
([0],1) -> 0;
([],1) -> 0;
([0,1,0],3) -> 0;
([0,3],0) -> 0;
([],0) -> 0;
([],2) -> 0;
([2,3],1) -> 3;
([],3) -> 0;
([0,3],3) -> 0;
([2,1,1],3) -> 0;
([1,3,0],1) -> 3;
([2,2],3) -> 0;
([0],2) -> 0;
([2,2],1) -> 2;
([0,3,0],1) -> 3;
([0,2,1],1) -> 2;

=================================
None
([],2) -> 0;
([],0) -> 0;
([0,0],0) -> 0;
([1,1],3) -> 0;
([3,1,2],1) -> 1;
([],3) -> 0;
([1,1],0) -> 1;
([],1) -> 0;
([0,0],2) -> 0;
([3,2,1],3) -> 0;
([1],2) -> 0;
([2,3],2) -> 0;
([2,2],2) -> 0;
([3,0],0) -> 3;
([2,3,0],0) -> 2;
([3],1) -> 0;
([1,3],2) -> 0;

=================================
None
([1,0],0) -> 1;
([1,2],3) -> 0;
([],2) -> 0;
([0],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,1],2) -> 0;
([1],1) -> 0;
([2],2) -> 0;
([0],1) -> 0;
([1,0,2],2) -> 2;
([2],3) -> 0;
([],0) -> 0;
([1,2,1],3) -> 0;
([0],0) -> 0;
([3,2],2) -> 0;
([0,1,2],3) -> 0;

=================================
None
([3],2) -> 0;
([3,0,0],1) -> 0;
([2,1],1) -> 1;
([1,2],1) -> 2;
([1,2,2],3) -> 0;
([3,2],0) -> 3;
([2],3) -> 0;
([0,0],1) -> 0;
([2],0) -> 2;
([1],0) -> 1;
([],3) -> 0;
([3,1],1) -> 1;
([1],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([0,3],0) -> 0;

=================================
None
([],3) -> 0;
([3,1,1],3) -> 0;
([2],2) -> 0;
([2,2,0],3) -> 0;
([1,0,0],0) -> 1;
([3,0,3],0) -> 3;
([],0) -> 0;
([0],3) -> 0;
([],2) -> 0;
([3],0) -> 3;
([1,2],2) -> 0;
([0],2) -> 0;
([0,0,2],1) -> 0;
([3,2],3) -> 0;
([2,2,2],0) -> 2;
([],1) -> 0;
([1,0],0) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> 0)

13.5190 false

([],0) -> 0;
([1,3,3],2) -> 3;
([],3) -> 0;
([1,2,3],3) -> 0;
([3,3],0) -> 3;
([2],2) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([1,3],3) -> 0;
([1,2,0],3) -> 0;
([3,3],3) -> 0;
([2,3,0],3) -> 0;
([2,2],3) -> 0;
([3,3,3],2) -> 3;
([3,2],0) -> 3;
([0,1],1) -> 1;
([3,2],1) -> 2;

=================================
None
([],3) -> 0;
([0,2,0],0) -> 0;
([1,0],2) -> 0;
([0,2,3],3) -> 0;
([2],3) -> 0;
([2,2],1) -> 2;
([1,1,2],2) -> 2;
([0],2) -> 0;
([1],1) -> 0;
([],1) -> 0;
([0,0,2],1) -> 0;
([0,1],1) -> 1;
([3],0) -> 3;
([0,0],3) -> 0;
([3],1) -> 0;
([1,1],1) -> 1;
([0],1) -> 0;

=================================
None
([2,2],1) -> 2;
([],2) -> 0;
([1],0) -> 1;
([],3) -> 0;
([2,0,2],3) -> 0;
([2,0],0) -> 2;
([3,0,1],1) -> 0;
([3],2) -> 0;
([],0) -> 0;
([0],1) -> 0;
([0,0,3],2) -> 3;
([1,2,0],0) -> 1;
([0,3],3) -> 0;
([2,1],3) -> 0;
([0,1],3) -> 0;
([1,3],1) -> 3;
([1,1,0],3) -> 0;

=================================
None
([],3) -> 0;
([2,2],1) -> 2;
([1],2) -> 0;
([],0) -> 0;
([0,1,3],2) -> 3;
([1,1],1) -> 1;
([3,2,1],1) -> 2;
([0,0],2) -> 0;
([2],0) -> 2;
([3,0,1],2) -> 1;
([3],1) -> 0;
([1,3],3) -> 0;
([1,0,2],1) -> 0;
([3],0) -> 3;
([1],0) -> 1;
([3,2],0) -> 3;
([0,1],1) -> 1;
([0],1) -> 0;

=================================
None
([],1) -> 0;
([],0) -> 0;
([],3) -> 0;
([1,3,1],3) -> 0;
([3,1,1],0) -> 3;
([0,0,2],0) -> 0;
([3,3],0) -> 3;
([3],0) -> 3;
([0,0],0) -> 0;
([3],2) -> 0;
([3],3) -> 0;
([],2) -> 0;
([2,2,0],0) -> 2;
([0,3],2) -> 0;
([0,1,2],2) -> 2;
([1],0) -> 1;
([2],0) -> 2;
([2,1],0) -> 2;

=================================
None
([1,0,1],1) -> 0;
([1,0],2) -> 0;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([2,2,2],2) -> 2;
([3],0) -> 3;
([],3) -> 0;
([2,1],2) -> 0;
([2,1],1) -> 1;
([1],1) -> 0;
([3,0],3) -> 0;
([1],3) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3,1,2],1) -> 1;
([3,1,0],2) -> 0;
([2,3],3) -> 0;

=================================
None
([0,3],2) -> 0;
([],1) -> 0;
([2,3],3) -> 0;
([2,3],2) -> 0;
([0],0) -> 0;
([1],3) -> 0;
([0],3) -> 0;
([],3) -> 0;
([],0) -> 0;
([0,3],1) -> 3;
([2,0],0) -> 2;
([0],1) -> 0;
([0,0],1) -> 0;
([2,2,1],2) -> 1;
([],2) -> 0;
([1,1],0) -> 1;
([0,3,0],0) -> 0;
([1,1],1) -> 1;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

3.4716 true

([2,1],1) -> 1;
([2,3,1],0) -> 2;
([],2) -> 0;
([0,2,3],2) -> 3;
([1,2],1) -> 2;
([1,1,2],1) -> 1;
([1],2) -> 0;
([],0) -> 0;
([0,2,3],0) -> 0;
([],1) -> 0;
([1],0) -> 1;
([2,2],3) -> 0;
([2,0,0],0) -> 2;
([0,3,1],2) -> 1;
([0,3],2) -> 0;
([3,3,0],3) -> 0;
([1,0],3) -> 0;
([0],3) -> 0;

=================================
None
([0,3],3) -> 0;
([1,0,1],1) -> 0;
([1,3],1) -> 3;
([1,3],2) -> 0;
([3,1],3) -> 0;
([2,1],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([3,0,0],0) -> 3;
([1],0) -> 1;
([],2) -> 0;
([3,1,3],0) -> 3;
([1,2],3) -> 0;
([2],2) -> 0;
([1,2,0],0) -> 1;
([1],3) -> 0;
([],3) -> 0;
([1],1) -> 0;

=================================
None
([3,2,3],0) -> 3;
([0,1],2) -> 0;
([0,2,1],3) -> 0;
([],0) -> 0;
([0],3) -> 0;
([2,2,1],0) -> 2;
([1,2,0],1) -> 2;
([0,3,3],0) -> 0;
([1],1) -> 0;
([2,3],3) -> 0;
([2],0) -> 2;
([0,0],0) -> 0;
([1,3,1],1) -> 3;
([],1) -> 0;
([2],2) -> 0;
([],3) -> 0;
([],2) -> 0;
([0,0,0],3) -> 0;

=================================
None
([3,1],3) -> 0;
([3],1) -> 0;
([1],1) -> 0;
([0,2,1],1) -> 2;
([],1) -> 0;
([2],0) -> 2;
([3,3],1) -> 3;
([2,3],0) -> 2;
([3],2) -> 0;
([1],0) -> 1;
([1,3,0],3) -> 0;
([],2) -> 0;
([3,0,0],1) -> 0;
([0,2],3) -> 0;
([2,1,1],0) -> 2;
([0],3) -> 0;
([],3) -> 0;
([2],3) -> 0;

=================================
None
([2],1) -> 0;
([3],1) -> 0;
([2,2],0) -> 2;
([3],3) -> 0;
([],3) -> 0;
([2],3) -> 0;
([1],0) -> 1;
([2,1,0],1) -> 1;
([1,0,2],2) -> 2;
([],1) -> 0;
([2,2],1) -> 2;
([0,2],3) -> 0;
([0,2],0) -> 0;
([],0) -> 0;
([2,2,2],3) -> 0;
([1],2) -> 0;
([0,2,1],0) -> 0;
([0,0],3) -> 0;

=================================
None
([0,2,3],1) -> 2;
([1,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([3,2,2],0) -> 3;
([1,0,0],0) -> 1;
([3,1],2) -> 0;
([],0) -> 0;
([0],1) -> 0;
([3,0],2) -> 0;
([0,2,1],0) -> 0;
([3],3) -> 0;
([0,0],1) -> 0;
([1,1],1) -> 1;
([],2) -> 0;
([3,1],1) -> 1;
([1,2,0],3) -> 0;
([3,1,2],2) -> 2;

=================================
None
([0,0,0],3) -> 0;
([1,1],1) -> 1;
([0,1,3],2) -> 3;
([2],0) -> 2;
([1],0) -> 1;
([3,0,1],1) -> 0;
([],1) -> 0;
([1,2],0) -> 1;
([3,0,1],3) -> 0;
([1,0,2],2) -> 2;
([],2) -> 0;
([1],3) -> 0;
([0],3) -> 0;
([3],3) -> 0;
([2,2],2) -> 0;
([0,1],1) -> 1;
([0,2,0],3) -> 0;
([],0) -> 0;
([0,1,0],3) -> 0;

=================================
None
([0],1) -> 0;
([2,2,0],1) -> 2;
([],3) -> 0;
([0],2) -> 0;
([1,3,3],2) -> 3;
([2],3) -> 0;
([2,2,2],2) -> 2;
([1,0],2) -> 0;
([2,2],3) -> 0;
([3,3],3) -> 0;
([3,3],0) -> 3;
([1,2,0],1) -> 2;
([1,0,3],0) -> 1;
([1,3,0],0) -> 1;
([],2) -> 0;
([0,2],0) -> 0;
([3,3,1],2) -> 1;
([0,2,0],0) -> 0;
([1],3) -> 0;

=================================
None
([1,3,2],1) -> 3;
([0,2],0) -> 0;
([],0) -> 0;
([0],1) -> 0;
([2],0) -> 2;
([3],2) -> 0;
([],3) -> 0;
([1,2,1],1) -> 2;
([0,2,2],1) -> 2;
([1,0],2) -> 0;
([1],1) -> 0;
([0,3],1) -> 3;
([],2) -> 0;
([3,3],1) -> 3;
([3,3],3) -> 0;
([3,0,2],0) -> 3;
([2],3) -> 0;
([3,0,2],2) -> 2;
([2,1,3],2) -> 3;

=================================
None
([],0) -> 0;
([0],2) -> 0;
([0,2,1],2) -> 1;
([2,2],3) -> 0;
([],3) -> 0;
([0,1,0],2) -> 0;
([1,1,0],1) -> 1;
([1,1],0) -> 1;
([3],0) -> 3;
([3,0,2],1) -> 0;
([],2) -> 0;
([0],0) -> 0;
([2],0) -> 2;
([0,3,1],2) -> 1;
([2],3) -> 0;
([1],3) -> 0;
([],1) -> 0;
([0,0,3],3) -> 0;
([1,0],2) -> 0;

=================================
None
([2],3) -> 0;
([],2) -> 0;
([0],1) -> 0;
([0,1],0) -> 0;
([],0) -> 0;
([0,1,3],2) -> 3;
([1],2) -> 0;
([],1) -> 0;
([2,3],1) -> 3;
([],3) -> 0;
([2,2],1) -> 2;
([1,3],0) -> 1;
([1],0) -> 1;
([0,3,3],1) -> 3;
([0,3,3],0) -> 0;
([1],1) -> 0;
([1,1,3],0) -> 1;
([0,0],2) -> 0;
([1,2],3) -> 0;

=================================
None
([0],1) -> 0;
([],2) -> 0;
([2,3],3) -> 0;
([],1) -> 0;
([1,3],2) -> 0;
([3,2,0],1) -> 2;
([0],2) -> 0;
([0,3],3) -> 0;
([2,0,3],3) -> 0;
([2,3,3],0) -> 2;
([0],3) -> 0;
([0,0],3) -> 0;
([2,2,1],1) -> 2;
([],3) -> 0;
([1,3,1],0) -> 1;
([],0) -> 0;
([3],0) -> 3;
([2],3) -> 0;
([0,2,0],3) -> 0;

=================================
None
([],1) -> 0;
([1],0) -> 1;
([1],1) -> 0;
([0,3],0) -> 0;
([2],2) -> 0;
([3],1) -> 0;
([0,0,2],1) -> 0;
([1,0,1],3) -> 0;
([0],1) -> 0;
([1,1,1],1) -> 1;
([3,3],3) -> 0;
([1],2) -> 0;
([0],2) -> 0;
([0,1,1],1) -> 1;
([0],0) -> 0;
([3],3) -> 0;
([],0) -> 0;
([2,0],1) -> 0;
([2],1) -> 0;

=================================
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

3.5626 true

([2],3) -> 0;
([1,2,3],1) -> 2;
([3],2) -> 0;
([],1) -> 0;
([2,2],1) -> 2;
([],3) -> 0;
([0],1) -> 0;
([2,0],3) -> 0;
([2,2,0],0) -> 2;
([3],3) -> 0;
([],2) -> 0;
([2],1) -> 0;
([3,0,3],2) -> 3;
([0,1,1],2) -> 1;
([2,0],1) -> 0;
([0,0,1],0) -> 0;
([1],0) -> 1;
([1,2,1],3) -> 0;
([1,1,1],0) -> 1;

=================================
None
([1],3) -> 0;
([],3) -> 0;
([3],2) -> 0;
([2],2) -> 0;
([1,2,3],1) -> 2;
([2,2,0],2) -> 0;
([2,0,0],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([2,1],1) -> 1;
([0,1,3],0) -> 0;
([2],3) -> 0;
([1,2,0],0) -> 1;
([3],1) -> 0;
([0,2],1) -> 2;
([3],0) -> 3;
([3,0],1) -> 0;
([3,3],1) -> 3;

=================================
None
([3,1,1],1) -> 1;
([1,0,1],2) -> 1;
([2,3],0) -> 2;
([2,2],2) -> 0;
([3],1) -> 0;
([],0) -> 0;
([0,3,1],3) -> 0;
([],2) -> 0;
([1,2,0],2) -> 0;
([1,0],2) -> 0;
([3,2,0],3) -> 0;
([2],1) -> 0;
([0,1],2) -> 0;
([0,2,3],3) -> 0;
([1,2],1) -> 2;
([2,1,2],0) -> 2;
([0,3],0) -> 0;
([1,1],3) -> 0;
([2,3,0],2) -> 0;

=================================
None
([3],3) -> 0;
([],3) -> 0;
([],2) -> 0;
([0,2],2) -> 0;
([2],1) -> 0;
([0,0,3],2) -> 3;
([2],3) -> 0;
([3,0],0) -> 3;
([],1) -> 0;
([0,3],0) -> 0;
([2,2],1) -> 2;
([0,2],1) -> 2;
([],0) -> 0;
([3,2,1],0) -> 3;
([0],1) -> 0;
([2],0) -> 2;
([1,1,0],1) -> 1;
([3],2) -> 0;
([0],2) -> 0;
([2,0,3],2) -> 3;

=================================
None
([1],3) -> 0;
([2,0],3) -> 0;
([1,1,2],3) -> 0;
([2,3],0) -> 2;
([],0) -> 0;
([3],0) -> 3;
([2,2],0) -> 2;
([0,3],0) -> 0;
([3,1,0],1) -> 1;
([3,1],0) -> 3;
([1,0,1],2) -> 1;
([3,3,1],1) -> 3;
([0,0,2],3) -> 0;
([0],1) -> 0;
([3,2],2) -> 0;
([0,2,2],3) -> 0;
([3,0,3],2) -> 3;
([2,2],3) -> 0;
([0,2,2],1) -> 2;
([0,0],1) -> 0;

=================================
None
([],0) -> 0;
([],1) -> 0;
([1],2) -> 0;
([1],0) -> 1;
([2],3) -> 0;
([0,3],3) -> 0;
([0],1) -> 0;
([3,1],3) -> 0;
([2],2) -> 0;
([0,1,1],3) -> 0;
([],3) -> 0;
([0],2) -> 0;
([2,0,0],1) -> 0;
([3],0) -> 3;
([3,2],2) -> 0;
([2,2],0) -> 2;
([2,1],1) -> 1;
([3,3,1],2) -> 1;
([1,0],1) -> 0;
([3,2,0],2) -> 0;

=================================
None
([],3) -> 0;
([0],3) -> 0;
([2,3,1],1) -> 3;
([0],2) -> 0;
([1,3,3],2) -> 3;
([0,0,1],3) -> 0;
([3,0],2) -> 0;
([0,1,2],1) -> 1;
([2,3],0) -> 2;
([0,0],2) -> 0;
([2],2) -> 0;
([0,2],3) -> 0;
([2,0],0) -> 2;
([1,0],1) -> 0;
([],0) -> 0;
([1,0],3) -> 0;
([0,2,1],0) -> 0;
([2],0) -> 2;
([],2) -> 0;
([1],2) -> 0;

=================================
None
([0,0,1],2) -> 1;
([],0) -> 0;
([0,3,2],3) -> 0;
([3],0) -> 3;
([2,2,3],1) -> 2;
([1,2,0],3) -> 0;
([2,3],2) -> 0;
([0],1) -> 0;
([3,3,0],1) -> 3;
([1],3) -> 0;
([2,2,1],0) -> 2;
([2],1) -> 0;
([1],0) -> 1;
([],3) -> 0;
([1,0,0],3) -> 0;
([1,1],0) -> 1;
([0,1,3],2) -> 3;
([0,1,1],2) -> 1;
([0,3],1) -> 3;
([1,3],3) -> 0;

=================================
None
([0,2,1],2) -> 1;
([0,2,0],0) -> 0;
([],0) -> 0;
([0],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([0,0],3) -> 0;
([1,3,3],2) -> 3;
([2,3],2) -> 0;
([1,0,1],0) -> 1;
([3,3],2) -> 0;
([0],2) -> 0;
([2,2,3],0) -> 2;
([2],3) -> 0;
([2,2],1) -> 2;
([2,3],1) -> 3;
([2,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([0,1,3],3) -> 0;

=================================
None
([],1) -> 0;
([2,1],2) -> 0;
([],0) -> 0;
([1,2],2) -> 0;
([],3) -> 0;
([3,0,1],1) -> 0;
([0,1],3) -> 0;
([1,2,0],0) -> 1;
([1,3],2) -> 0;
([0,3],1) -> 3;
([0,0],3) -> 0;
([0,2],3) -> 0;
([3],2) -> 0;
([2,1],1) -> 1;
([0,2,1],2) -> 1;
([1],0) -> 1;
([3],3) -> 0;
([1,2],3) -> 0;
([1,2],0) -> 1;
([3,0],2) -> 0;

=================================
None
([],3) -> 0;
([0,0,2],1) -> 0;
([],2) -> 0;
([2,1,3],2) -> 3;
([3],0) -> 3;
([1,1,2],0) -> 1;
([],0) -> 0;
([2,3],0) -> 2;
([1],1) -> 0;
([2,1,2],3) -> 0;
([2,0],3) -> 0;
([0],1) -> 0;
([3,0],3) -> 0;
([0],2) -> 0;
([2,3,0],1) -> 3;
([3],2) -> 0;
([3,0,2],1) -> 0;
([3,3,0],3) -> 0;
([3,0],0) -> 3;
([3],3) -> 0;

=================================
None
([3,1],1) -> 1;
([0,2],1) -> 2;
([1,0,3],1) -> 0;
([2],0) -> 2;
([2],2) -> 0;
([0,1,3],3) -> 0;
([2,1],0) -> 2;
([2,3],1) -> 3;
([3,3],3) -> 0;
([0],3) -> 0;
([],2) -> 0;
([2],3) -> 0;
([0,1],2) -> 0;
([],3) -> 0;
([1,3,1],1) -> 3;
([1,1,2],0) -> 1;
([0],0) -> 0;
([0],1) -> 0;
([],0) -> 0;
([1,1],0) -> 1;

=================================
None
([],1) -> 0;
([0,3,3],3) -> 0;
([],0) -> 0;
([2],0) -> 2;
([1,0],2) -> 0;
([0,2],3) -> 0;
([2],3) -> 0;
([0,1,3],0) -> 0;
([2,2],1) -> 2;
([1,3,0],1) -> 3;
([2],2) -> 0;
([1],2) -> 0;
([],2) -> 0;
([0,1,1],0) -> 0;
([],3) -> 0;
([3,0,2],0) -> 3;
([1],1) -> 0;
([3,1,3],1) -> 1;
([0,2,0],2) -> 0;
([0,1],2) -> 0;

=================================
None
