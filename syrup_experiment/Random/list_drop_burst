([2],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,0,0],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,2,0],2) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> Un_Cons (Un_Cons (x . 0) . 1) . 1

0.0887 false

([],0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([],0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0000 false

([2,3,2],0) -> [2,3,2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0411 false

([1],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,0],0) -> [1,0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0066 false

([0],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([],1) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,2],3) -> [];
([0,0,2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,1],1) -> [1];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.1974 false

([3],0) -> [3];
([1,2,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2557 false

([3,3,0],1) -> [3,0];
([2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Un_Cons (x . 0) . 1

0.0769 false

([],3) -> [];
([1],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1],2) -> [];
([],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,0,1],3) -> [];
([3,2],0) -> [3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1739 false

([0,3],1) -> [3];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.1750 false

([],2) -> [];
([2,3],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,3],0) -> [2,3];
([2,3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3000 false

([],2) -> [];
([3,2],2) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,0,3],3) -> [];
([0,0,0],1) -> [0,0];
([],1) -> [];

=================================
None
([2,1,1],0) -> [2,1,1];
([2],2) -> [];
([2,2,3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

2.3063 false

([2,1,0],1) -> [1,0];
([1,1],1) -> [1];
([2,1],3) -> [];

=================================
None
([2],1) -> [];
([1,2,2],0) -> [1,2,2];
([0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.4041 false

([1,1,1],2) -> [1];
([3,2,2],1) -> [2,2];
([1,2],3) -> [];

=================================
None
([],2) -> [];
([],1) -> [];
([2,1,0],2) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

2.2235 false

([0],2) -> [];
([0],1) -> [];
([3,3],2) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,3,1],0) -> [2,3,1];
([],0) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0543 false

([3,3],2) -> [];
([3,0,1],1) -> [0,1];
([],0) -> [];

=================================
None
([],0) -> [];
([1],1) -> [];
([2,0,1],3) -> [];
([2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,0,2],0) -> [3,0,2];
([0,1,1],1) -> [1,1];
([2,3,3],2) -> [3];
([1],0) -> [1];

=================================
None
([],2) -> [];
([3],1) -> [];
([2,3,2],2) -> [2];
([1,0,3],0) -> [1,0,3];

=================================
None
([1],0) -> [1];
([3,0,2],2) -> [2];
([],0) -> [];
([1,1],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Cons (x . 1, Nil)

5.9568 false

([2],1) -> [];
([1,1],1) -> [1];
([2,3],0) -> [2,3];
([0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Un_Cons (x . 0) . 1

0.5546 false

([],0) -> [];
([1],3) -> [];
([1,3,2],2) -> [2];
([1],0) -> [1];

=================================
None
([2],1) -> [];
([],2) -> [];
([1,2,1],3) -> [];
([3,3,2],2) -> [2];

=================================
None
([2,0,1],3) -> [];
([2],2) -> [];
([],0) -> [];
([1],0) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1679 false

([0],3) -> [];
([2,1,0],1) -> [1,0];
([0],2) -> [];
([3,2,2],1) -> [2,2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Un_Cons (x . 0) . 1

0.0501 false

([],1) -> [];
([],0) -> [];
([2,2,0],3) -> [];
([2,0,2],3) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1],3) -> [];
([3,2,1],0) -> [3,2,1];
([0,3,2],3) -> [];
([2],0) -> [2];
([0,0],1) -> [0];

=================================
None
([2,3,0],0) -> [2,3,0];
([],1) -> [];
([2,1],2) -> [];
([3,2,2],2) -> [2];
([2,2,2],2) -> [2];

=================================
None
([3,3,3],1) -> [3,3];
([1,3,0],1) -> [3,0];
([3],1) -> [];
([2,2],2) -> [];
([3,0],3) -> [];

=================================
None
([3,2],0) -> [3,2];
([2,1,3],3) -> [];
([3,0],1) -> [0];
([1,3],2) -> [];
([3,3],1) -> [3];

=================================
None
([0],3) -> [];
([],3) -> [];
([],1) -> [];
([1,3],0) -> [1,3];
([3,0],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2269 false

([0,0],0) -> [0,0];
([],0) -> [];
([0,0],1) -> [0];
([3,2,2],2) -> [2];
([0,2],3) -> [];

=================================
None
([0,3,0],0) -> [0,3,0];
([1,3,3],0) -> [1,3,3];
([2,1,1],3) -> [];
([0,1],3) -> [];
([2,1],1) -> [1];

=================================
None
([],2) -> [];
([1,2],3) -> [];
([],3) -> [];
([1,0],0) -> [1,0];
([0,2,0],0) -> [0,2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.2485 false

([],1) -> [];
([0,0],2) -> [];
([0,1,1],2) -> [1];
([],3) -> [];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1

1.0152 false

([0,3],2) -> [];
([3,2,3],1) -> [2,3];
([0],1) -> [];
([2,3,1],2) -> [1];
([],0) -> [];

=================================
None
([0,1],1) -> [1];
([],0) -> [];
([0,1],3) -> [];
([],1) -> [];
([1],3) -> [];
([2],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_S (x . 1) with
                     | O _ -> Un_Cons (x . 0) . 1
                     | S _ -> Nil)

25.9986 false

([0],2) -> [];
([],2) -> [];
([0,1,2],1) -> [1,2];
([1,0,1],2) -> [1];
([],0) -> [];
([2,0,0],1) -> [0,0];

=================================
None
([0,2,0],0) -> [0,2,0];
([2,3,3],1) -> [3,3];
([3,1,1],1) -> [1,1];
([],1) -> [];
([],2) -> [];
([3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (x . 0) . 1)

4.5814 false

([2],0) -> [2];
([1,3,0],2) -> [0];
([2,3],1) -> [3];
([2],2) -> [];
([0,3],1) -> [3];
([],1) -> [];

=================================
None
([3,0],1) -> [0];
([2,0],3) -> [];
([],3) -> [];
([0,0,3],2) -> [3];
([1,2,2],3) -> [];
([0,3],2) -> [];

=================================
None
([0],1) -> [];
([],0) -> [];
([1,3,2],3) -> [];
([3],0) -> [3];
([2],2) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.3783 false

([3,2,0],1) -> [2,0];
([1],1) -> [];
([],3) -> [];
([0],0) -> [0];
([2],3) -> [];
([3,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

7.4085 false

([3,2],1) -> [2];
([3,1,3],1) -> [1,3];
([3,3],0) -> [3,3];
([1,1,2],1) -> [1,2];
([3,3,1],2) -> [1];
([0,3,0],3) -> [];

=================================
None
([3,0,2],0) -> [3,0,2];
([0,2],2) -> [];
([2,3],2) -> [];
([0,1],0) -> [0,1];
([2],1) -> [];
([0,1,3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.1477 false

([3,2],0) -> [3,2];
([],1) -> [];
([1,2],1) -> [2];
([],0) -> [];
([3,3,1],3) -> [];
([3,2,1],0) -> [3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match f (x . 0, Un_S (x . 1)) with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

98.1452 false

([3,0],3) -> [];
([],2) -> [];
([],3) -> [];
([2,0,3],2) -> [3];
([3],0) -> [3];
([2,2],0) -> [2,2];
([0,2],1) -> [2];

=================================
None
([2],2) -> [];
([],3) -> [];
([2,3,0],0) -> [2,3,0];
([2,3],0) -> [2,3];
([0,0],3) -> [];
([2,2,2],3) -> [];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.6688 false

([],2) -> [];
([2,0,1],1) -> [0,1];
([0,2],1) -> [2];
([2],0) -> [2];
([],1) -> [];
([0,0,3],2) -> [3];
([0],2) -> [];

=================================
None
([3,2,3],2) -> [3];
([3],1) -> [];
([0],0) -> [0];
([],3) -> [];
([0,2,1],3) -> [];
([1,3,1],3) -> [];
([2,2,3],1) -> [2,3];

=================================
None
([],0) -> [];
([],2) -> [];
([],3) -> [];
([1,1,2],0) -> [1,1,2];
([],1) -> [];
([3,0],3) -> [];
([0,1],1) -> [1];

=================================
None
([],1) -> [];
([],3) -> [];
([3],1) -> [];
([3,3],2) -> [];
([0,3],0) -> [0,3];
([0,0,2],0) -> [0,0,2];
([0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2325 false

([0,1,1],2) -> [1];
([1],1) -> [];
([2],1) -> [];
([],1) -> [];
([],0) -> [];
([0,2,2],2) -> [2];
([1],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1)

53.3217 false

([2],1) -> [];
([2],3) -> [];
([3,0],3) -> [];
([1,1],3) -> [];
([0,3,0],2) -> [0];
([1,2,2],3) -> [];
([],1) -> [];

=================================
None
([],3) -> [];
([3,1],0) -> [3,1];
([0,1],2) -> [];
([1,0],3) -> [];
([0,3],2) -> [];
([],2) -> [];
([3,0],1) -> [0];

=================================
None
([0,0],2) -> [];
([2],3) -> [];
([],2) -> [];
([1,1,2],0) -> [1,1,2];
([3,3],0) -> [3,3];
([],1) -> [];
([1,1,0],0) -> [1,1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.2188 false

([3,1],2) -> [];
([3,3,3],2) -> [3];
([2,1],3) -> [];
([],2) -> [];
([],3) -> [];
([3,3],2) -> [];
([1],3) -> [];
([1,3,3],1) -> [3,3];

=================================
None
([2],2) -> [];
([2,3],1) -> [3];
([3],3) -> [];
([0],2) -> [];
([3,0,1],2) -> [1];
([],1) -> [];
([3,1],3) -> [];
([3,2],2) -> [];

=================================
None
([2],2) -> [];
([1],0) -> [1];
([1],2) -> [];
([2,2,3],3) -> [];
([2,1],1) -> [1];
([1,3,3],3) -> [];
([2,0,1],3) -> [];
([3,2,2],0) -> [3,2,2];

=================================
None
([3,1,2],2) -> [2];
([0,3],2) -> [];
([3,3,0],3) -> [];
([3],3) -> [];
([],1) -> [];
([3,1,1],2) -> [1];
([1,1],2) -> [];
([],3) -> [];

=================================
None
([],0) -> [];
([3,1,1],0) -> [3,1,1];
([],1) -> [];
([0],3) -> [];
([2],1) -> [];
([0,3,0],3) -> [];
([2,2],1) -> [2];
([0,2],3) -> [];

=================================
None
([2,2],3) -> [];
([1,2,2],0) -> [1,2,2];
([3,0,3],0) -> [3,0,3];
([3,0],0) -> [3,0];
([3],0) -> [3];
([],2) -> [];
([0],3) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

1.6491 false

([2],1) -> [];
([1,0],0) -> [1,0];
([1,1,2],0) -> [1,1,2];
([3,2],1) -> [2];
([2],2) -> [];
([0],0) -> [0];
([0,3],2) -> [];
([2],3) -> [];

=================================
None
([1,0,2],2) -> [2];
([],2) -> [];
([],0) -> [];
([],3) -> [];
([0,3],2) -> [];
([],1) -> [];
([1],0) -> [1];
([2],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

48.1244 true

([1,0,2],0) -> [1,0,2];
([],3) -> [];
([2],3) -> [];
([0,1],3) -> [];
([2,1,0],1) -> [1,0];
([],1) -> [];
([1],1) -> [];
([2],2) -> [];

=================================
None
([0,1,2],1) -> [1,2];
([],1) -> [];
([3,1,2],0) -> [3,1,2];
([1],1) -> [];
([3,0],0) -> [3,0];
([1,1,2],1) -> [1,2];
([2,1,1],2) -> [1];
([2,2,3],3) -> [];

=================================
None
([],2) -> [];
([0],3) -> [];
([1,3,3],3) -> [];
([0,0],3) -> [];
([1],2) -> [];
([3,0],2) -> [];
([],1) -> [];
([1,2],1) -> [2];
([],3) -> [];

=================================
None
([],2) -> [];
([3],2) -> [];
([2,3,0],3) -> [];
([0,3],2) -> [];
([2,1,3],3) -> [];
([3,0,0],3) -> [];
([],0) -> [];
([3,1],0) -> [3,1];
([3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.2082 false

([1],0) -> [1];
([1],1) -> [];
([1,1],2) -> [];
([1,1,3],2) -> [3];
([1,0],0) -> [1,0];
([0],2) -> [];
([],0) -> [];
([3,3,0],3) -> [];
([2,0,1],2) -> [1];

=================================
None
([0],0) -> [0];
([0,0],3) -> [];
([],1) -> [];
([1,3],3) -> [];
([0,2],1) -> [2];
([3],2) -> [];
([1,0,1],2) -> [1];
([0,1],3) -> [];
([],3) -> [];

=================================
None
([],0) -> [];
([3,1,2],3) -> [];
([0],2) -> [];
([],3) -> [];
([3,3],3) -> [];
([0,2,0],1) -> [2,0];
([3,3,3],1) -> [3,3];
([1,0,2],0) -> [1,0,2];
([3,1,0],1) -> [1,0];

=================================
None
([],1) -> [];
([],2) -> [];
([],0) -> [];
([3],3) -> [];
([1,0,3],3) -> [];
([1],1) -> [];
([1,1],0) -> [1,1];
([3,3],3) -> [];
([1,0],0) -> [1,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.6692 false

([1,0],3) -> [];
([3,0],0) -> [3,0];
([3,1],1) -> [1];
([0,2,0],2) -> [0];
([],3) -> [];
([],1) -> [];
([1],1) -> [];
([1,3,0],2) -> [0];
([1],0) -> [1];

=================================
None
([1,3,2],3) -> [];
([2],0) -> [2];
([1,3,0],2) -> [0];
([0,1],1) -> [1];
([0],2) -> [];
([2],2) -> [];
([],3) -> [];
([1],3) -> [];
([0,2,1],1) -> [2,1];

=================================
None
([0],2) -> [];
([3,2],3) -> [];
([1,2,3],3) -> [];
([3,2,2],1) -> [2,2];
([0,1,3],2) -> [3];
([1,2],2) -> [];
([0,3],3) -> [];
([1,3],2) -> [];
([1,2,1],2) -> [1];

=================================
None
([1],2) -> [];
([],0) -> [];
([2,0,2],2) -> [2];
([3,1,3],3) -> [];
([],3) -> [];
([3,3],1) -> [3];
([1,0,1],2) -> [1];
([0,0,1],0) -> [0,0,1];
([],2) -> [];

=================================
None
([1,3],0) -> [1,3];
([0],0) -> [0];
([0],1) -> [];
([3,1,2],2) -> [2];
([1],0) -> [1];
([1,0,0],0) -> [1,0,0];
([0,2],1) -> [2];
([],0) -> [];
([2,3],1) -> [3];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

26.0177 true

([],2) -> [];
([1],3) -> [];
([3,2],2) -> [];
([2,0,1],0) -> [2,0,1];
([2,0,0],2) -> [0];
([0,0,2],0) -> [0,0,2];
([1,1],1) -> [1];
([1,3],0) -> [1,3];
([3],3) -> [];
([0],3) -> [];

=================================
None
([0],1) -> [];
([3],2) -> [];
([3],0) -> [3];
([1],1) -> [];
([1],2) -> [];
([2],2) -> [];
([0,1,1],2) -> [1];
([3,3],3) -> [];
([2,0,1],0) -> [2,0,1];
([],2) -> [];

=================================
None
([0,1,3],2) -> [3];
([2],0) -> [2];
([],3) -> [];
([],2) -> [];
([3,2,0],1) -> [2,0];
([3,3,0],1) -> [3,0];
([1],1) -> [];
([2],3) -> [];
([],0) -> [];
([2,0,1],1) -> [0,1];

=================================
None
([1,3,2],3) -> [];
([],0) -> [];
([0],2) -> [];
([3],3) -> [];
([3,1,1],0) -> [3,1,1];
([2,0,2],2) -> [2];
([3],2) -> [];
([1,1,1],0) -> [1,1,1];
([],2) -> [];
([1,0,3],3) -> [];

=================================
None
([],2) -> [];
([0],3) -> [];
([1,2],3) -> [];
([],0) -> [];
([2,3],0) -> [2,3];
([0],0) -> [0];
([2,0],3) -> [];
([3],1) -> [];
([0],1) -> [];
([3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.6144 false

([3,1],2) -> [];
([],3) -> [];
([1,3,2],2) -> [2];
([1],0) -> [1];
([0],2) -> [];
([],2) -> [];
([3,1,3],3) -> [];
([3,2,2],1) -> [2,2];
([2],1) -> [];
([0,2,1],2) -> [1];

=================================
None
([3,3],2) -> [];
([1,3],3) -> [];
([0],2) -> [];
([1],2) -> [];
([],0) -> [];
([1],3) -> [];
([2],2) -> [];
([3,0,2],1) -> [0,2];
([1,0],0) -> [1,0];
([3,1],3) -> [];

=================================
None
([3,3],2) -> [];
([0,0,0],2) -> [0];
([1,1],0) -> [1,1];
([0,0],1) -> [0];
([],3) -> [];
([1,1,1],2) -> [1];
([0],2) -> [];
([2,1],1) -> [1];
([],2) -> [];
([0],1) -> [];

=================================
None
([2],1) -> [];
([2,1],1) -> [1];
([3,2],0) -> [3,2];
([2,2],1) -> [2];
([0],1) -> [];
([2,2,0],0) -> [2,2,0];
([],0) -> [];
([],1) -> [];
([3],1) -> [];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (x . 0) . 1)

0.3747 false

([],2) -> [];
([1,0,3],1) -> [0,3];
([3],2) -> [];
([2,2,2],0) -> [2,2,2];
([0,1],3) -> [];
([3],3) -> [];
([3,3,2],3) -> [];
([],1) -> [];
([],3) -> [];
([2],2) -> [];
([1,2],1) -> [2];

=================================
None
([2],0) -> [2];
([1,2,2],2) -> [2];
([1,1,1],2) -> [1];
([],3) -> [];
([],2) -> [];
([1],2) -> [];
([1],3) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([0,3,2],2) -> [2];
([],1) -> [];

=================================
None
([],1) -> [];
([2,3,2],2) -> [2];
([3,2,0],3) -> [];
([0],2) -> [];
([1,0],3) -> [];
([0,3,3],0) -> [0,3,3];
([3],1) -> [];
([1,0,0],0) -> [1,0,0];
([],3) -> [];
([1,1],2) -> [];
([],0) -> [];

=================================
None
([],3) -> [];
([],1) -> [];
([1,2,2],0) -> [1,2,2];
([3,2],1) -> [2];
([2],2) -> [];
([3,3,0],1) -> [3,0];
([],0) -> [];
([0],0) -> [0];
([1],2) -> [];
([],2) -> [];
([3],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (x . 0) . 1)

4.7355 false

([],3) -> [];
([2],1) -> [];
([3],2) -> [];
([1,3,2],0) -> [1,3,2];
([1,1],0) -> [1,1];
([2,3,3],1) -> [3,3];
([2],0) -> [2];
([3,3],2) -> [];
([2,2],1) -> [2];
([0],1) -> [];
([3,0,0],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

57.8856 false

([3,3],2) -> [];
([],1) -> [];
([0,0],2) -> [];
([2,0,3],0) -> [2,0,3];
([0,2],3) -> [];
([1,0,1],1) -> [0,1];
([],2) -> [];
([],0) -> [];
([0,2],0) -> [0,2];
([0],0) -> [0];
([2,2],0) -> [2,2];

=================================
None
([3],0) -> [3];
([0,1],0) -> [0,1];
([3,2,2],2) -> [2];
([1,0,2],1) -> [0,2];
([0,3],2) -> [];
([0,2],2) -> [];
([1],0) -> [1];
([3],3) -> [];
([0],2) -> [];
([3,2,3],0) -> [3,2,3];
([0,1,2],2) -> [2];

=================================
None
([0,3,1],1) -> [3,1];
([],1) -> [];
([2,1,1],2) -> [1];
([],2) -> [];
([1,1,0],2) -> [0];
([1],0) -> [1];
([0,0],0) -> [0,0];
([0],0) -> [0];
([2],2) -> [];
([2,3],1) -> [3];
([0,2,0],2) -> [0];

=================================
None
([],0) -> [];
([1],2) -> [];
([1],0) -> [1];
([0,2],1) -> [2];
([1,2,3],0) -> [1,2,3];
([],2) -> [];
([2,1,3],2) -> [3];
([0,0,0],1) -> [0,0];
([3,0,1],1) -> [0,1];
([2,1],0) -> [2,1];
([2,0],1) -> [0];

=================================
None
([1,3],2) -> [];
([],3) -> [];
([],0) -> [];
([1],1) -> [];
([1,3,2],3) -> [];
([2,0,0],2) -> [0];
([0,1],2) -> [];
([2],3) -> [];
([1,0,1],0) -> [1,0,1];
([0,1,0],3) -> [];
([1,2,1],1) -> [2,1];

=================================
None
([1,1,1],0) -> [1,1,1];
([3],1) -> [];
([0],3) -> [];
([1],3) -> [];
([2],3) -> [];
([0],1) -> [];
([3,3],3) -> [];
([1,0,0],2) -> [0];
([],2) -> [];
([1,0,1],2) -> [1];
([],0) -> [];
([3],2) -> [];

=================================
None
([3],1) -> [];
([1],0) -> [1];
([3,0],1) -> [0];
([0],0) -> [0];
([0,2,3],3) -> [];
([],3) -> [];
([3,2,3],0) -> [3,2,3];
([3],0) -> [3];
([],1) -> [];
([3,0,3],1) -> [0,3];
([3,2],1) -> [2];
([0,3],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

45.3071 false

([],2) -> [];
([],0) -> [];
([3],1) -> [];
([],1) -> [];
([0],3) -> [];
([0,0],1) -> [0];
([2],3) -> [];
([],3) -> [];
([2],0) -> [2];
([1,1],1) -> [1];
([2,1,3],2) -> [3];
([1],0) -> [1];

=================================
None
([],0) -> [];
([2],1) -> [];
([2,3],0) -> [2,3];
([2],2) -> [];
([2,3,3],0) -> [2,3,3];
([3,1,0],1) -> [1,0];
([0],3) -> [];
([2,2,2],0) -> [2,2,2];
([],1) -> [];
([1,1],1) -> [1];
([3,2,3],0) -> [3,2,3];
([],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

1.3588 false

([0,1,2],0) -> [0,1,2];
([],3) -> [];
([],2) -> [];
([0],1) -> [];
([0,0,0],3) -> [];
([0],3) -> [];
([0,0,0],0) -> [0,0,0];
([2,0],3) -> [];
([],0) -> [];
([0,1,3],3) -> [];
([0,2],3) -> [];
([],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.6086 false

([2],0) -> [2];
([],1) -> [];
([3],0) -> [3];
([],2) -> [];
([0],1) -> [];
([3,1],1) -> [1];
([0],2) -> [];
([3,0,0],1) -> [0,0];
([],0) -> [];
([0],3) -> [];
([2,2],1) -> [2];
([0,2,3],0) -> [0,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> Un_Cons (x . 0) . 1)

0.5690 false

([3,2],2) -> [];
([],0) -> [];
([0,3],2) -> [];
([0,1,0],2) -> [0];
([1],1) -> [];
([0,3,0],0) -> [0,3,0];
([3,3,3],1) -> [3,3];
([],3) -> [];
([3],1) -> [];
([3,2],1) -> [2];
([],2) -> [];
([2],0) -> [2];

=================================
None
([],1) -> [];
([1,0,0],0) -> [1,0,0];
([2,1],0) -> [2,1];
([1,0,3],1) -> [0,3];
([0],3) -> [];
([],0) -> [];
([],2) -> [];
([2,0,1],1) -> [0,1];
([3,1],0) -> [3,1];
([0,3,0],3) -> [];
([1,3,3],2) -> [3];
([2,3,1],0) -> [2,3,1];

=================================
None
([2,2,2],1) -> [2,2];
([1],1) -> [];
([3,1],3) -> [];
([],2) -> [];
([],1) -> [];
([1,0],1) -> [0];
([0],3) -> [];
([2,3],1) -> [3];
([3,2],1) -> [2];
([2,1,2],3) -> [];
([],0) -> [];
([3],2) -> [];

=================================
None
([2,0,1],2) -> [1];
([0],3) -> [];
([1,0,0],2) -> [0];
([],1) -> [];
([2,0],1) -> [0];
([3,3],3) -> [];
([0,3,3],0) -> [0,3,3];
([0,0,0],2) -> [0];
([3,0,0],3) -> [];
([3,0],0) -> [3,0];
([1,1],3) -> [];
([0,2,0],2) -> [0];

=================================
None
([0,1],2) -> [];
([],2) -> [];
([3],1) -> [];
([],3) -> [];
([0,1,0],3) -> [];
([3],2) -> [];
([1],0) -> [1];
([2,2,3],3) -> [];
([2,2],1) -> [2];
([1],3) -> [];
([0,3,0],0) -> [0,3,0];
([0,3,2],3) -> [];
([3,3],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

54.5255 false

([3,1],2) -> [];
([3,1,2],2) -> [2];
([0],3) -> [];
([1,3],0) -> [1,3];
([0,2,1],3) -> [];
([3,2],3) -> [];
([3],0) -> [3];
([],1) -> [];
([],3) -> [];
([1],2) -> [];
([0,3],0) -> [0,3];
([0],1) -> [];
([1,0,1],2) -> [1];

=================================
None
([0,2],3) -> [];
([3,3,3],3) -> [];
([1,2,1],2) -> [1];
([1],0) -> [1];
([3,2],2) -> [];
([],2) -> [];
([3],1) -> [];
([1,1],3) -> [];
([3,0],0) -> [3,0];
([0,0],3) -> [];
([],0) -> [];
([2,2],1) -> [2];
([],3) -> [];

=================================
None
([0,0],3) -> [];
([1,2,0],1) -> [2,0];
([],0) -> [];
([],2) -> [];
([3],1) -> [];
([2,0],1) -> [0];
([],3) -> [];
([2],2) -> [];
([1],0) -> [1];
([],1) -> [];
([3,3,0],0) -> [3,3,0];
([2,1],2) -> [];
([0,3,1],0) -> [0,3,1];

=================================
None
([2],1) -> [];
([1],0) -> [1];
([1,3,1],2) -> [1];
([3,2,2],3) -> [];
([1],3) -> [];
([2,3,0],0) -> [2,3,0];
([1,1],2) -> [];
([0],3) -> [];
([1],1) -> [];
([3,2,3],2) -> [3];
([2],3) -> [];
([1],2) -> [];
([],2) -> [];

=================================
None
([0,0,2],3) -> [];
([3,1,0],1) -> [1,0];
([1,0],2) -> [];
([],3) -> [];
([1,2],3) -> [];
([2],0) -> [2];
([2],3) -> [];
([2],2) -> [];
([],1) -> [];
([],2) -> [];
([3],2) -> [];
([1],0) -> [1];
([0,1],2) -> [];

=================================
None
([3,1,3],2) -> [3];
([1,0,3],1) -> [0,3];
([],0) -> [];
([1],1) -> [];
([],1) -> [];
([3,2,0],0) -> [3,2,0];
([],2) -> [];
([1],3) -> [];
([1,2],3) -> [];
([3],0) -> [3];
([3,1],0) -> [3,1];
([],3) -> [];
([0,0],1) -> [0];

=================================
None
([],0) -> [];
([0,3,2],1) -> [3,2];
([0,1],3) -> [];
([2],3) -> [];
([1,0],3) -> [];
([2,3,1],1) -> [3,1];
([],3) -> [];
([0,1],1) -> [1];
([3],3) -> [];
([0,3,3],0) -> [0,3,3];
([2,2],3) -> [];
([3,3],3) -> [];
([3,3],2) -> [];

=================================
None
([3,1],0) -> [3,1];
([3],2) -> [];
([3,1],3) -> [];
([1,0,0],0) -> [1,0,0];
([1],1) -> [];
([2,1],1) -> [1];
([],3) -> [];
([0],0) -> [0];
([3,2,1],1) -> [2,1];
([1,2,2],3) -> [];
([3,3,2],2) -> [2];
([0,2,0],3) -> [];
([1,0],2) -> [];

=================================
None
([],1) -> [];
([2,0,3],0) -> [2,0,3];
([1],3) -> [];
([1],2) -> [];
([0],2) -> [];
([0,0,1],3) -> [];
([2,1],2) -> [];
([2,3],3) -> [];
([3,2,2],1) -> [2,2];
([2,0],1) -> [0];
([],2) -> [];
([0,3],1) -> [3];
([],3) -> [];

=================================
None
([],2) -> [];
([0,3],1) -> [3];
([0],1) -> [];
([2,2,1],1) -> [2,1];
([],1) -> [];
([2,2,2],2) -> [2];
([],0) -> [];
([3,0],0) -> [3,0];
([3,0],1) -> [0];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([1],1) -> [];
([1,2],1) -> [2];
([2,0],2) -> [];

=================================
None
([0],0) -> [0];
([],0) -> [];
([2,2,3],3) -> [];
([],2) -> [];
([3,1],3) -> [];
([],1) -> [];
([0,0,3],2) -> [3];
([0,1,0],2) -> [0];
([1,2,2],1) -> [2,2];
([2,2],0) -> [2,2];
([1,0,1],2) -> [1];
([3,2,3],2) -> [3];
([3],1) -> [];
([0],3) -> [];

=================================
None
([],2) -> [];
([2,1,0],0) -> [2,1,0];
([3,0,0],0) -> [3,0,0];
([1],2) -> [];
([3,0],2) -> [];
([0,0,1],2) -> [1];
([0],0) -> [0];
([2],1) -> [];
([3],0) -> [3];
([3,0,3],1) -> [0,3];
([],0) -> [];
([0,2],3) -> [];
([1,2,2],2) -> [2];
([1],3) -> [];

=================================
None
([2,0],0) -> [2,0];
([2],1) -> [];
([],3) -> [];
([2,2],2) -> [];
([],0) -> [];
([3,3,3],0) -> [3,3,3];
([3],3) -> [];
([1],3) -> [];
([3,2,3],0) -> [3,2,3];
([],2) -> [];
([1,2,2],3) -> [];
([],1) -> [];
([0,3,3],2) -> [3];
([3,3],0) -> [3,3];

=================================
None
([3,1,3],0) -> [3,1,3];
([],0) -> [];
([3,2,0],2) -> [0];
([2,2],0) -> [2,2];
([0,0],0) -> [0,0];
([],2) -> [];
([2,0],2) -> [];
([0],0) -> [0];
([0],1) -> [];
([3,3],2) -> [];
([3,0],3) -> [];
([1],3) -> [];
([2,2],1) -> [2];
([0,3],2) -> [];

=================================
None
([2,2],1) -> [2];
([2,1],1) -> [1];
([],2) -> [];
([],0) -> [];
([1],0) -> [1];
([0,1,3],1) -> [1,3];
([0],2) -> [];
([1,3,0],1) -> [3,0];
([],1) -> [];
([2],0) -> [2];
([2,3,2],0) -> [2,3,2];
([3],1) -> [];
([1,2,3],2) -> [3];
([3,2,2],3) -> [];

=================================
None
([1,1],2) -> [];
([],2) -> [];
([2,3],3) -> [];
([],3) -> [];
([3,0],1) -> [0];
([2,1,1],1) -> [1,1];
([0,3,2],1) -> [3,2];
([0],3) -> [];
([0,1],1) -> [1];
([3,2,1],0) -> [3,2,1];
([0,2],3) -> [];
([0,1,3],3) -> [];
([],0) -> [];
([3,2],2) -> [];

=================================
None
([],1) -> [];
([0],3) -> [];
([1,3],2) -> [];
([],2) -> [];
([1],0) -> [1];
([2],0) -> [2];
([1,3],1) -> [3];
([1,2],0) -> [1,2];
([0,1,1],1) -> [1,1];
([2],1) -> [];
([2],3) -> [];
([1,2,1],2) -> [1];
([2],2) -> [];
([1,3,3],3) -> [];

=================================
None
([],1) -> [];
([0,2,2],2) -> [2];
([],2) -> [];
([3],1) -> [];
([2,0,3],0) -> [2,0,3];
([3],2) -> [];
([],3) -> [];
([],0) -> [];
([2],1) -> [];
([1,0],0) -> [1,0];
([1,3,0],0) -> [1,3,0];
([0,0,3],0) -> [0,0,3];
([3],0) -> [3];
([3,1,2],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match f (x . 0, Un_S (x . 1)) with
                  | Nil _ -> Nil
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

59.3839 true

([],2) -> [];
([0,2,1],3) -> [];
([],3) -> [];
([1,3,2],0) -> [1,3,2];
([0,1],0) -> [0,1];
([3,0],3) -> [];
([1],3) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,3],3) -> [];
([1,0],1) -> [0];
([1],2) -> [];
([],1) -> [];
([1,1,0],2) -> [0];

=================================
None
([1],2) -> [];
([2],0) -> [2];
([0],0) -> [0];
([2,2,3],3) -> [];
([0,0,2],3) -> [];
([3,3,2],1) -> [3,2];
([1,0,1],0) -> [1,0,1];
([],0) -> [];
([3,2],1) -> [2];
([0],3) -> [];
([1],3) -> [];
([3,0,2],0) -> [3,0,2];
([2],1) -> [];
([2,2,0],1) -> [2,0];
([2],2) -> [];

=================================
None
([],0) -> [];
([3,2,1],0) -> [3,2,1];
([0,1,2],3) -> [];
([],2) -> [];
([],1) -> [];
([2,2,2],1) -> [2,2];
([],3) -> [];
([3,0],3) -> [];
([0],1) -> [];
([1,0,1],1) -> [0,1];
([2,0,2],1) -> [0,2];
([3,2,0],1) -> [2,0];
([2],2) -> [];
([2,1],0) -> [2,1];
([2,2],1) -> [2];

=================================
None
([],3) -> [];
([2],1) -> [];
([],1) -> [];
([3,3],2) -> [];
([],0) -> [];
([2,1],3) -> [];
([0,2],3) -> [];
([3,3,2],0) -> [3,3,2];
([3,3,3],3) -> [];
([3,1],3) -> [];
([3],0) -> [3];
([],2) -> [];
([1,2,1],2) -> [1];
([2,0,2],0) -> [2,0,2];
([3,0,0],0) -> [3,0,0];

=================================
None
([2,0,0],2) -> [0];
([0,3],0) -> [0,3];
([0],1) -> [];
([2],0) -> [2];
([],2) -> [];
([0,1,1],3) -> [];
([0,2],1) -> [2];
([1,3,1],3) -> [];
([1],2) -> [];
([1,2,1],3) -> [];
([0,2],0) -> [0,2];
([0,1,1],0) -> [0,1,1];
([0,2,3],3) -> [];
([3,2,2],3) -> [];
([1,0],2) -> [];

=================================
None
([2,0],2) -> [];
([2,2,1],0) -> [2,2,1];
([3],1) -> [];
([],1) -> [];
([3],0) -> [3];
([1,0,0],1) -> [0,0];
([],2) -> [];
([1],3) -> [];
([3],2) -> [];
([],3) -> [];
([1,3,3],1) -> [3,3];
([0,2],0) -> [0,2];
([2],3) -> [];
([3,3,3],2) -> [3];
([0],3) -> [];

=================================
None
([],0) -> [];
([0],1) -> [];
([2,1],3) -> [];
([],2) -> [];
([2],0) -> [2];
([2],3) -> [];
([2,2,1],2) -> [1];
([],1) -> [];
([0,3,2],3) -> [];
([3,0],2) -> [];
([1,2,0],1) -> [2,0];
([0],2) -> [];
([3,1],1) -> [1];
([1],1) -> [];
([0],0) -> [0];

=================================
None
([2,1,1],1) -> [1,1];
([3],3) -> [];
([1,0],1) -> [0];
([],0) -> [];
([3],2) -> [];
([0,3],2) -> [];
([0],3) -> [];
([],1) -> [];
([],3) -> [];
([1],3) -> [];
([3],0) -> [3];
([3,0],0) -> [3,0];
([2,0],2) -> [];
([2],3) -> [];
([1,3],2) -> [];

=================================
None
([3,3],0) -> [3,3];
([],1) -> [];
([2,1,0],3) -> [];
([0,3],3) -> [];
([],2) -> [];
([0,3,3],0) -> [0,3,3];
([2,3],2) -> [];
([],0) -> [];
([2,0],0) -> [2,0];
([2],3) -> [];
([1,2],0) -> [1,2];
([2],0) -> [2];
([1,0,3],3) -> [];
([3],3) -> [];
([0,3],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.4346 false

([2,2],3) -> [];
([2,0,3],3) -> [];
([],3) -> [];
([],2) -> [];
([2],3) -> [];
([],1) -> [];
([1,0,0],1) -> [0,0];
([3],2) -> [];
([3,1,3],0) -> [3,1,3];
([0],3) -> [];
([3,1,3],3) -> [];
([1],3) -> [];
([1,2,3],2) -> [3];
([1],0) -> [1];
([1],2) -> [];

=================================
None
([1],0) -> [1];
([],1) -> [];
([2],0) -> [2];
([2],3) -> [];
([0,2,0],0) -> [0,2,0];
([],0) -> [];
([1,2],2) -> [];
([3],2) -> [];
([3,0,3],2) -> [3];
([],3) -> [];
([],2) -> [];
([1,0],1) -> [0];
([3,1],2) -> [];
([0],2) -> [];
([1,1,0],0) -> [1,1,0];

=================================
None
([3,1,1],2) -> [1];
([0,0,0],1) -> [0,0];
([1],3) -> [];
([1,0],3) -> [];
([1],0) -> [1];
([1,3,3],2) -> [3];
([1,3,3],1) -> [3,3];
([0],3) -> [];
([3],3) -> [];
([1],1) -> [];
([3,2,2],1) -> [2,2];
([2,1],2) -> [];
([3,2,3],0) -> [3,2,3];
([2],0) -> [2];
([],3) -> [];
([3,1],3) -> [];

=================================
None
([1,2],0) -> [1,2];
([3,0],1) -> [0];
([],0) -> [];
([2,1],1) -> [1];
([2,3],0) -> [2,3];
([1,0],0) -> [1,0];
([3],0) -> [3];
([],3) -> [];
([1,2],2) -> [];
([2,3,2],1) -> [3,2];
([],2) -> [];
([],1) -> [];
([3,2],0) -> [3,2];
([1],2) -> [];
([0,1],0) -> [0,1];
([0,3],1) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

108.1216 true

([],3) -> [];
([],0) -> [];
([2,1],2) -> [];
([0,2,0],0) -> [0,2,0];
([3,2],0) -> [3,2];
([0],2) -> [];
([0,3,2],1) -> [3,2];
([1],3) -> [];
([0],3) -> [];
([2,0],3) -> [];
([0,3],0) -> [0,3];
([2,0],1) -> [0];
([1,2,1],2) -> [1];
([3],2) -> [];
([0,0,2],1) -> [0,2];
([0,3],1) -> [3];

=================================
None
([2],0) -> [2];
([],0) -> [];
([1],1) -> [];
([2,3,3],1) -> [3,3];
([3,0],3) -> [];
([1],3) -> [];
([2,1,0],2) -> [0];
([3,2,0],0) -> [3,2,0];
([],3) -> [];
([3,0,0],3) -> [];
([1],2) -> [];
([1,0],0) -> [1,0];
([2],2) -> [];
([],1) -> [];
([1,2],1) -> [2];
([3],0) -> [3];

=================================
None
([1,0,1],3) -> [];
([],1) -> [];
([1,3],1) -> [3];
([],3) -> [];
([3],3) -> [];
([3,1,1],3) -> [];
([1],2) -> [];
([3,0],1) -> [0];
([],0) -> [];
([1],3) -> [];
([3,0],3) -> [];
([1],1) -> [];
([2,1],0) -> [2,1];
([2,1,2],3) -> [];
([],2) -> [];
([1,0],0) -> [1,0];

=================================
None
([1,3],3) -> [];
([],0) -> [];
([1,0,3],1) -> [0,3];
([],2) -> [];
([1,2,2],1) -> [2,2];
([3],0) -> [3];
([1,3],1) -> [3];
([3,3,1],1) -> [3,1];
([3,0,0],0) -> [3,0,0];
([3,3,0],1) -> [3,0];
([2],2) -> [];
([1,0],1) -> [0];
([0],0) -> [0];
([0,2,3],0) -> [0,2,3];
([0,3,1],2) -> [1];
([1,3,3],2) -> [3];

=================================
None
([0,3,1],0) -> [0,3,1];
([],2) -> [];
([0,2,3],3) -> [];
([],0) -> [];
([2,0,2],2) -> [2];
([0,2],0) -> [0,2];
([3,0],3) -> [];
([0,1],2) -> [];
([1,2,2],1) -> [2,2];
([3,2,3],0) -> [3,2,3];
([2,1],0) -> [2,1];
([2,2],0) -> [2,2];
([],1) -> [];
([1,2,2],3) -> [];
([0,0],2) -> [];
([3],0) -> [3];

=================================
None
([],1) -> [];
([3,2],2) -> [];
([3],1) -> [];
([1,3,1],3) -> [];
([3],2) -> [];
([0],0) -> [0];
([0],2) -> [];
([],0) -> [];
([3,1,0],1) -> [1,0];
([3,2],0) -> [3,2];
([1,1],0) -> [1,1];
([2],0) -> [2];
([0,0],2) -> [];
([2,0,3],0) -> [2,0,3];
([2],3) -> [];
([3,2,1],1) -> [2,1];

=================================
None
([3,2,0],2) -> [0];
([2,0,0],1) -> [0,0];
([3,3,0],0) -> [3,3,0];
([0,2],2) -> [];
([3,3,3],0) -> [3,3,3];
([],0) -> [];
([3,3],0) -> [3,3];
([1,1],2) -> [];
([3],1) -> [];
([1],3) -> [];
([1,3,3],3) -> [];
([0,2,3],1) -> [2,3];
([3,2],1) -> [2];
([1],1) -> [];
([0,0,1],3) -> [];
([],1) -> [];

=================================
None
([0],3) -> [];
([1,3],1) -> [3];
([0,3,3],0) -> [0,3,3];
([2,0],1) -> [0];
([1],0) -> [1];
([],1) -> [];
([],3) -> [];
([3,1,3],2) -> [3];
([],0) -> [];
([],2) -> [];
([2],2) -> [];
([3,3,3],1) -> [3,3];
([2],1) -> [];
([0],1) -> [];
([1,1],0) -> [1,1];
([0,3,3],1) -> [3,3];

=================================
None
([1,1],1) -> [1];
([3,0,1],2) -> [1];
([],1) -> [];
([3],2) -> [];
([1],2) -> [];
([3,2],1) -> [2];
([2,3],3) -> [];
([],2) -> [];
([2],1) -> [];
([],0) -> [];
([0],3) -> [];
([1],0) -> [1];
([0,3],2) -> [];
([0,1],1) -> [1];
([0],0) -> [0];
([],3) -> [];
([2,3,3],0) -> [2,3,3];

=================================
None
([0],1) -> [];
([0,2],0) -> [0,2];
([],0) -> [];
([],1) -> [];
([1,1,3],3) -> [];
([3,0,2],2) -> [2];
([3],2) -> [];
([0],2) -> [];
([1],2) -> [];
([3,0],0) -> [3,0];
([1,2],3) -> [];
([3],0) -> [3];
([0,0],0) -> [0,0];
([],2) -> [];
([0,3,3],1) -> [3,3];
([2,2,3],0) -> [2,2,3];
([3,3],3) -> [];

=================================
None
([2],3) -> [];
([3,0],0) -> [3,0];
([1,3,3],2) -> [3];
([1,3],3) -> [];
([2,0,0],2) -> [0];
([1,3,3],0) -> [1,3,3];
([],2) -> [];
([],3) -> [];
([2,3,0],0) -> [2,3,0];
([3,1,3],1) -> [1,3];
([2,3],0) -> [2,3];
([3],2) -> [];
([3,2],3) -> [];
([1,2],2) -> [];
([],1) -> [];
([3,2,0],1) -> [2,0];
([0],0) -> [0];

=================================
None
([],0) -> [];
([0,2],2) -> [];
([2],3) -> [];
([3],0) -> [3];
([1,2,1],0) -> [1,2,1];
([1,0],1) -> [0];
([3],2) -> [];
([],2) -> [];
([2,2],3) -> [];
([1],2) -> [];
([],3) -> [];
([3,0],1) -> [0];
([3,1,1],2) -> [1];
([3,1,0],2) -> [0];
([2],0) -> [2];
([3,0,0],3) -> [];
([0,2,1],0) -> [0,2,1];

=================================
None
([0],2) -> [];
([2,2],3) -> [];
([],2) -> [];
([0,3],3) -> [];
([3,0],1) -> [0];
([1,2],1) -> [2];
([1],2) -> [];
([2],2) -> [];
([1,1],3) -> [];
([0,0],3) -> [];
([],1) -> [];
([2],3) -> [];
([2,0,0],2) -> [0];
([2,2,0],0) -> [2,2,0];
([2,3],0) -> [2,3];
([3,1],0) -> [3,1];
([0],1) -> [];

=================================
None
([],2) -> [];
([2],3) -> [];
([3],3) -> [];
([2],1) -> [];
([3],1) -> [];
([2,2],1) -> [2];
([3,2],2) -> [];
([2,3],0) -> [2,3];
([2,3,1],0) -> [2,3,1];
([0,1],3) -> [];
([1,1,0],3) -> [];
([1],0) -> [1];
([3,1],3) -> [];
([0,2],0) -> [0,2];
([2,2,2],3) -> [];
([0],1) -> [];
([0,0],2) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match Un_S (x . 1) with
                  | O _ -> Un_Cons (x . 0) . 1
                  | S _ -> Nil)

26.3209 false

([0],3) -> [];
([1],2) -> [];
([1],0) -> [1];
([1,0],3) -> [];
([],3) -> [];
([],0) -> [];
([0,3,3],0) -> [0,3,3];
([],1) -> [];
([2],3) -> [];
([1,3,3],1) -> [3,3];
([2,2],1) -> [2];
([1,2,2],2) -> [2];
([0],1) -> [];
([3,2],2) -> [];
([1,3,2],1) -> [3,2];
([0],0) -> [0];
([2],0) -> [2];

=================================
None
([],3) -> [];
([3],2) -> [];
([2,1,2],0) -> [2,1,2];
([0,3],1) -> [3];
([1,3],0) -> [1,3];
([0,2,3],3) -> [];
([3,2],2) -> [];
([],2) -> [];
([1,0],3) -> [];
([1,2],1) -> [2];
([0,0,0],3) -> [];
([1,1],2) -> [];
([2],2) -> [];
([3],1) -> [];
([1,0,2],0) -> [1,0,2];
([2,0],3) -> [];
([0,1,0],0) -> [0,1,0];

=================================
None
([3,0],3) -> [];
([3,2,3],1) -> [2,3];
([1,0],2) -> [];
([2,0,3],1) -> [0,3];
([3],3) -> [];
([0],0) -> [0];
([3,2,0],0) -> [3,2,0];
([2,3,3],3) -> [];
([2,2,0],3) -> [];
([2,0],2) -> [];
([1,2],3) -> [];
([],1) -> [];
([1,2],1) -> [2];
([0,1,1],3) -> [];
([],2) -> [];
([1],3) -> [];
([1,0,2],3) -> [];

=================================
None
([3,0],2) -> [];
([0],3) -> [];
([],3) -> [];
([0,1],0) -> [0,1];
([3,0,1],3) -> [];
([0,3,2],0) -> [0,3,2];
([1,3],0) -> [1,3];
([2,1],0) -> [2,1];
([1,2],1) -> [2];
([2,1],2) -> [];
([3,3,0],0) -> [3,3,0];
([2],2) -> [];
([0,0,2],2) -> [2];
([1,3,2],0) -> [1,3,2];
([2],0) -> [2];
([1,3],1) -> [3];
([0,3],0) -> [0,3];

=================================
None
([0],1) -> [];
([3,2],0) -> [3,2];
([0,0],0) -> [0,0];
([0,3],2) -> [];
([],1) -> [];
([3],3) -> [];
([3,0],2) -> [];
([0,2,3],2) -> [3];
([1,2],3) -> [];
([3,1,0],3) -> [];
([1,2],2) -> [];
([2,1],3) -> [];
([2],0) -> [2];
([1,1],2) -> [];
([0,0],3) -> [];
([],3) -> [];
([0,0,3],0) -> [0,0,3];
([1],1) -> [];

=================================
None
([],1) -> [];
([1],2) -> [];
([0],3) -> [];
([],0) -> [];
([0,3,1],1) -> [3,1];
([],2) -> [];
([0,1,2],2) -> [2];
([2,1],3) -> [];
([3,3,2],1) -> [3,2];
([3,3,2],3) -> [];
([1,0],2) -> [];
([2],0) -> [2];
([2,1],2) -> [];
([0],0) -> [0];
([0,0],0) -> [0,0];
([2,3],0) -> [2,3];
([0],1) -> [];
([],3) -> [];

=================================
None
([],2) -> [];
([3,1],1) -> [1];
([0,2,3],2) -> [3];
([],0) -> [];
([1,3,3],2) -> [3];
([2],2) -> [];
([],3) -> [];
([],1) -> [];
([2,0],1) -> [0];
([3,2],3) -> [];
([2],1) -> [];
([2,1,1],2) -> [1];
([1],3) -> [];
([1,0],0) -> [1,0];
([3],2) -> [];
([1],1) -> [];
([0,1,1],1) -> [1,1];
([2,1],1) -> [1];

=================================
None
([1],2) -> [];
([3],0) -> [3];
([1,2],3) -> [];
([],3) -> [];
([1,2],0) -> [1,2];
([3],1) -> [];
([],0) -> [];
([2,3,2],1) -> [3,2];
([0,1],1) -> [1];
([0,1,0],0) -> [0,1,0];
([0,0],0) -> [0,0];
([0],3) -> [];
([3,1],1) -> [1];
([1,0,1],0) -> [1,0,1];
([3,2,3],2) -> [3];
([2,0],0) -> [2,0];
([2,1],3) -> [];
([3,0,2],0) -> [3,0,2];

=================================
None
([2,1],2) -> [];
([2,3,3],3) -> [];
([1,1,0],1) -> [1,0];
([0,2,1],3) -> [];
([],1) -> [];
([2,3],1) -> [3];
([0,0,1],1) -> [0,1];
([3,3],1) -> [3];
([2,0],0) -> [2,0];
([3],2) -> [];
([3,2],1) -> [2];
([0],1) -> [];
([],3) -> [];
([],0) -> [];
([0,2],1) -> [2];
([0,3],1) -> [3];
([0],2) -> [];
([3,0],2) -> [];

=================================
None
([],3) -> [];
([1,2,2],3) -> [];
([],1) -> [];
([2,1,2],1) -> [1,2];
([3],3) -> [];
([],0) -> [];
([1,0,0],2) -> [0];
([3],0) -> [3];
([1,2,0],0) -> [1,2,0];
([0,2],3) -> [];
([2],0) -> [2];
([2,1,3],3) -> [];
([3,3,3],2) -> [3];
([1,3],3) -> [];
([1,2,1],3) -> [];
([0,1,0],1) -> [1,0];
([1,2],3) -> [];
([0,1,3],2) -> [3];

=================================
None
([3,3],1) -> [3];
([1],3) -> [];
([3,2,1],2) -> [1];
([],1) -> [];
([3],1) -> [];
([0,3,1],1) -> [3,1];
([2],1) -> [];
([0,3,2],1) -> [3,2];
([0,0,2],1) -> [0,2];
([1,3],2) -> [];
([0],3) -> [];
([2,1,2],3) -> [];
([3,3,0],0) -> [3,3,0];
([3,1,2],1) -> [1,2];
([2,1],1) -> [1];
([3,0],1) -> [0];
([2,3],0) -> [2,3];
([],0) -> [];

=================================
None
([0,3],3) -> [];
([1],3) -> [];
([],2) -> [];
([0,2,3],2) -> [3];
([],3) -> [];
([0],2) -> [];
([3,3,2],2) -> [2];
([2,2],1) -> [2];
([0,3,2],0) -> [0,3,2];
([2,2,0],1) -> [2,0];
([2,1,2],2) -> [2];
([1,2,2],0) -> [1,2,2];
([2,2],0) -> [2,2];
([0,1],1) -> [1];
([3,2,3],1) -> [2,3];
([2,2,3],2) -> [3];
([1,0],3) -> [];
([],1) -> [];

=================================
None
([3,1],0) -> [3,1];
([3,0,1],2) -> [1];
([1,1,1],1) -> [1,1];
([3],2) -> [];
([],3) -> [];
([],2) -> [];
([0,3,3],2) -> [3];
([3],1) -> [];
([3,3,0],2) -> [0];
([2],3) -> [];
([0,1,1],2) -> [1];
([3,2],1) -> [2];
([1,2,2],3) -> [];
([],0) -> [];
([3,0,2],2) -> [2];
([1,3],0) -> [1,3];
([3,0,3],0) -> [3,0,3];
([2,3,3],2) -> [3];

=================================
None
([],2) -> [];
([3,0,1],3) -> [];
([],3) -> [];
([],0) -> [];
([3],1) -> [];
([0,0,0],1) -> [0,0];
([0],3) -> [];
([1],0) -> [1];
([1],1) -> [];
([2,3],0) -> [2,3];
([1,1],0) -> [1,1];
([2,2],3) -> [];
([3],3) -> [];
([3,1,2],0) -> [3,1,2];
([0],1) -> [];
([0,2,2],1) -> [2,2];
([3,0],2) -> [];
([1],3) -> [];

=================================
None
([],1) -> [];
([1,2,3],3) -> [];
([],0) -> [];
([2,2,3],0) -> [2,2,3];
([0,2,1],1) -> [2,1];
([0],3) -> [];
([1],0) -> [1];
([2,2,1],3) -> [];
([3],0) -> [3];
([2],0) -> [2];
([1,0],1) -> [0];
([3],1) -> [];
([],2) -> [];
([],3) -> [];
([2],1) -> [];
([2,2],3) -> [];
([0,0],1) -> [0];
([3,1],1) -> [1];
([3,2],1) -> [2];

=================================
None
([0,0,2],0) -> [0,0,2];
([0,0],3) -> [];
([0,3,3],1) -> [3,3];
([],2) -> [];
([2,1,1],0) -> [2,1,1];
([0,2,3],1) -> [2,3];
([0,1],2) -> [];
([0],1) -> [];
([2,0],3) -> [];
([2,2,0],2) -> [0];
([0,1],1) -> [1];
([2,3],2) -> [];
([],0) -> [];
([],3) -> [];
([],1) -> [];
([2],1) -> [];
([2,1],3) -> [];
([3,3,1],2) -> [1];
([0,2],3) -> [];

=================================
None
([0,0,3],3) -> [];
([3,1],1) -> [1];
([0],0) -> [0];
([3],0) -> [3];
([],0) -> [];
([1,2],2) -> [];
([],3) -> [];
([1,3,0],2) -> [0];
([0,2,0],3) -> [];
([],2) -> [];
([0,1,0],2) -> [0];
([0,1,2],1) -> [1,2];
([3],1) -> [];
([],1) -> [];
([1,0],1) -> [0];
([2],2) -> [];
([0],3) -> [];
([3,0],1) -> [0];
([1,0],0) -> [1,0];

=================================
None
([],0) -> [];
([1],0) -> [1];
([],1) -> [];
([3,0],1) -> [0];
([0],3) -> [];
([],2) -> [];
([1],2) -> [];
([0,1],3) -> [];
([3,2,3],1) -> [2,3];
([3],3) -> [];
([1,1,1],3) -> [];
([2,2],2) -> [];
([3],0) -> [3];
([1,2],2) -> [];
([3,3,3],2) -> [3];
([2,1],0) -> [2,1];
([0],1) -> [];
([0],2) -> [];
([],3) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | Nil _ -> x . 0
                  | Cons _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

1.1385 true

([0],1) -> [];
([],0) -> [];
([3,0],3) -> [];
([2],2) -> [];
([3,3,0],1) -> [3,0];
([],2) -> [];
([2,1],1) -> [1];
([],1) -> [];
([2],1) -> [];
([1],1) -> [];
([0,0,1],3) -> [];
([],3) -> [];
([3,1,1],0) -> [3,1,1];
([0],2) -> [];
([2,3],0) -> [2,3];
([2,0,1],1) -> [0,1];
([0,3,0],0) -> [0,3,0];
([1,1],2) -> [];
([3],3) -> [];

=================================
None
([1],3) -> [];
([3],0) -> [3];
([0,3],0) -> [0,3];
([2,1,2],1) -> [1,2];
([],1) -> [];
([2,1],3) -> [];
([2],1) -> [];
([],0) -> [];
([2],0) -> [2];
([],3) -> [];
([3,2,1],1) -> [2,1];
([3,0,0],0) -> [3,0,0];
([0,2,1],2) -> [1];
([1,3],1) -> [3];
([0,0,0],3) -> [];
([3],3) -> [];
([],2) -> [];
([1,1,3],3) -> [];
([2,0],0) -> [2,0];

=================================
None
([3],0) -> [3];
([2,0],2) -> [];
([1,1,0],3) -> [];
([0],1) -> [];
([0,3],1) -> [3];
([1],1) -> [];
([3,0],0) -> [3,0];
([2],1) -> [];
([3,0],1) -> [0];
([],0) -> [];
([],3) -> [];
([],2) -> [];
([2,2],0) -> [2,2];
([1,2,1],1) -> [2,1];
([3,2],1) -> [2];
([0,2,0],1) -> [2,0];
([1,3,2],3) -> [];
([3,1],1) -> [1];
([1,2,3],2) -> [3];

=================================
None
([],2) -> [];
([2,3],2) -> [];
([3,0],2) -> [];
([],3) -> [];
([2,3,2],0) -> [2,3,2];
([0,3,1],1) -> [3,1];
([3,0],1) -> [0];
([],0) -> [];
([1,0,2],3) -> [];
([2,3,0],3) -> [];
([3],2) -> [];
([1,3],3) -> [];
([0],3) -> [];
([1,2],3) -> [];
([3],1) -> [];
([0,3],0) -> [0,3];
([3,3],2) -> [];
([3,0],0) -> [3,0];
([],1) -> [];

=================================
None
([2,3],2) -> [];
([],3) -> [];
([3,1,1],2) -> [1];
([1,1,2],2) -> [2];
([],0) -> [];
([1,0],1) -> [0];
([3,2,0],3) -> [];
([1],1) -> [];
([1,0],2) -> [];
([0,1,0],1) -> [1,0];
([0,2,3],2) -> [3];
([2,2],2) -> [];
([2,3,3],0) -> [2,3,3];
([],2) -> [];
([0,3],1) -> [3];
([0,2,3],3) -> [];
([2],3) -> [];
([3,1],2) -> [];
([1,2],1) -> [2];

=================================
None
([3,2],2) -> [];
([3,2],1) -> [2];
([0,2,0],3) -> [];
([1],1) -> [];
([],1) -> [];
([0],1) -> [];
([1],3) -> [];
([2],1) -> [];
([2,1],2) -> [];
([],3) -> [];
([],0) -> [];
([0,1],1) -> [1];
([1,3],1) -> [3];
([1],0) -> [1];
([0,2,1],1) -> [2,1];
([0,0],1) -> [0];
([0,2,3],0) -> [0,2,3];
([3],2) -> [];
([3,1],0) -> [3,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match f (x . 0, Un_S (x . 1)) with
                  | Nil _ -> Nil
                  | Cons _ -> Un_Cons (f (x . 0, Un_S (x . 1))) . 1)

11.3928 true

([1],0) -> [1];
([3,0],0) -> [3,0];
([],2) -> [];
([2,1],3) -> [];
([2,0],0) -> [2,0];
([2,2,1],2) -> [1];
([0],3) -> [];
([],1) -> [];
([3,3],1) -> [3];
([3,2,0],3) -> [];
([0,0,0],0) -> [0,0,0];
([1,0],3) -> [];
([0],2) -> [];
([1,1,3],2) -> [3];
([3],1) -> [];
([1,0,2],0) -> [1,0,2];
([1,1],2) -> [];
([0,1],0) -> [0,1];
([3],3) -> [];
([],3) -> [];

=================================
None
([0,0],3) -> [];
([2],2) -> [];
([],2) -> [];
([1],2) -> [];
([3,3,0],2) -> [0];
([],1) -> [];
([3,2,2],2) -> [2];
([],0) -> [];
([1,1,0],1) -> [1,0];
([0,1,1],0) -> [0,1,1];
([2,2,0],2) -> [0];
([2],1) -> [];
([1],3) -> [];
([0],0) -> [0];
([3],2) -> [];
([0,2],0) -> [0,2];
([0],2) -> [];
([0,1,1],1) -> [1,1];
([3,2],0) -> [3,2];
([1,3],0) -> [1,3];

=================================
None
([3],1) -> [];
([2,1],1) -> [1];
([],3) -> [];
([1,1],0) -> [1,1];
([3],0) -> [3];
([2,2,3],2) -> [3];
([2],2) -> [];
([],0) -> [];
([1],1) -> [];
([1],3) -> [];
([2,2],2) -> [];
([1,0,2],2) -> [2];
([],2) -> [];
([3,1],1) -> [1];
([2,3,3],0) -> [2,3,3];
([1,3,2],1) -> [3,2];
([2],0) -> [2];
([3,1,2],0) -> [3,1,2];
([3,0],0) -> [3,0];
([0],0) -> [0];

=================================
None
([3,0],0) -> [3,0];
([2,0],1) -> [0];
([2,2],3) -> [];
([2],0) -> [2];
([1,0],1) -> [0];
([],3) -> [];
([1,0],3) -> [];
([0],3) -> [];
([],2) -> [];
([1,3],2) -> [];
([2],1) -> [];
([3,3],2) -> [];
([2,3,2],2) -> [2];
([1,1],3) -> [];
([3],1) -> [];
([3],3) -> [];
([0],0) -> [0];
([2,2],0) -> [2,2];
([0,1,3],0) -> [0,1,3];
([],0) -> [];

=================================
None
([3,0,3],3) -> [];
([1,0,3],3) -> [];
([],3) -> [];
([2],3) -> [];
([3,3,2],0) -> [3,3,2];
([3,1],1) -> [1];
([],1) -> [];
([1],1) -> [];
([2],2) -> [];
([],2) -> [];
([1],3) -> [];
([2,2,0],0) -> [2,2,0];
([3,2],1) -> [2];
([2,3],2) -> [];
([3],2) -> [];
([3,1],0) -> [3,1];
([0],1) -> [];
([1,3],0) -> [1,3];
([1],0) -> [1];
([2],1) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

16.1905 true

([1,2,1],1) -> [2,1];
([],2) -> [];
([0],2) -> [];
([0,3,0],2) -> [0];
([3,1,1],2) -> [1];
([3,3,3],1) -> [3,3];
([3,0,3],2) -> [3];
([3,2,0],3) -> [];
([1,1,0],2) -> [0];
([],0) -> [];
([2,0],1) -> [0];
([2],2) -> [];
([],3) -> [];
([0,3,2],2) -> [2];
([1,2],3) -> [];
([2,2,1],3) -> [];
([0,0,2],0) -> [0,0,2];
([3],3) -> [];
([0,1,0],0) -> [0,1,0];
([],1) -> [];

=================================
None
([],2) -> [];
([3,0],0) -> [3,0];
([],3) -> [];
([0,1],1) -> [1];
([1],3) -> [];
([2],0) -> [2];
([3,2,1],3) -> [];
([0],1) -> [];
([],1) -> [];
([],0) -> [];
([2,3],3) -> [];
([2,2],0) -> [2,2];
([0,0,0],1) -> [0,0];
([0,3,0],2) -> [0];
([0],0) -> [0];
([3,2,3],0) -> [3,2,3];
([0,3,3],0) -> [0,3,3];
([0,3,3],2) -> [3];
([0],3) -> [];
([0,2,0],1) -> [2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

13.6621 true

([0,3,2],1) -> [3,2];
([3,2],0) -> [3,2];
([1],2) -> [];
([2,2],0) -> [2,2];
([3,2,3],0) -> [3,2,3];
([1],3) -> [];
([3,2],1) -> [2];
([3,2],2) -> [];
([3,2,3],1) -> [2,3];
([2,3],3) -> [];
([1,3,3],3) -> [];
([],1) -> [];
([1],0) -> [1];
([2,3,0],2) -> [0];
([1,3,2],1) -> [3,2];
([0,3],3) -> [];
([],3) -> [];
([1,2],3) -> [];
([2,0,2],2) -> [2];
([2,1,3],0) -> [2,1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

42.2641 true

([0],2) -> [];
([],2) -> [];
([],0) -> [];
([1,3,0],1) -> [3,0];
([2,1],3) -> [];
([2,3,1],3) -> [];
([3,0,3],3) -> [];
([2],3) -> [];
([3,3,3],0) -> [3,3,3];
([3,1,1],2) -> [1];
([3,1,3],1) -> [1,3];
([0],3) -> [];
([0,0,2],1) -> [0,2];
([3,2],1) -> [2];
([3],1) -> [];
([1,3,1],1) -> [3,1];
([3,1],2) -> [];
([1],2) -> [];
([1,2,2],3) -> [];
([0,0,2],3) -> [];

=================================
None
([1,2,1],2) -> [1];
([1,0],2) -> [];
([0,0,2],0) -> [0,0,2];
([3,3,0],1) -> [3,0];
([],1) -> [];
([2,0],0) -> [2,0];
([],0) -> [];
([1],0) -> [1];
([1,2],2) -> [];
([2,0,1],2) -> [1];
([3],2) -> [];
([],2) -> [];
([3],0) -> [3];
([1,2,2],3) -> [];
([2],2) -> [];
([2,1,1],3) -> [];
([0,2],3) -> [];
([0],2) -> [];
([2,2],2) -> [];
([2,0],2) -> [];

=================================
None
