[2,0,2] -> [2,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.7867 false

[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0111 false

[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> Nil

0.0001 false

[0,3,2] -> [2,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.6370 true

[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0068 false

[2,3,1] -> [1,3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3672 true

[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0204 false

[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0467 true

[1,0,3] -> [3,0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.8294 true

[2,0,1] -> [1,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3133 true

[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0098 false

[2,1,1] -> [1,1,2];
[1,2] -> [2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4325 true

[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0045 false

[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0619 false

[] -> [];
[2,1,3] -> [3,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3363 true

[3,3] -> [3,3];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5437 true

[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0627 true

[] -> [];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0128 false

[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0770 true

[1] -> [1];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0896 true

[2,2] -> [2,2];
[1,3,0] -> [0,3,1];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.2662 true

[1] -> [1];
[3] -> [3];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0061 false

[0,0] -> [0,0];
[] -> [];
[2,2,3] -> [3,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.0405 true

[] -> [];
[0] -> [0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0063 false

[3,3,0] -> [0,3,3];
[2,2] -> [2,2];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3081 true

[3,1,2] -> [2,1,3];
[] -> [];
[1,3,3] -> [3,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0037 true

[1] -> [1];
[3] -> [3];
[1,1,3] -> [3,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5849 true

[3] -> [3];
[2] -> [2];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0111 false

[] -> [];
[2] -> [2];
[3,2,0] -> [0,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7333 true

[2] -> [2];
[2,0,1] -> [1,0,2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4885 true

[1,1,0] -> [0,1,1];
[1,2,3] -> [3,2,1];
[] -> [];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4237 true

[] -> [];
[0,3,1] -> [1,3,0];
[2,1] -> [1,2];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9400 true

[1,1] -> [1,1];
[1] -> [1];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0383 false

[0,1,0] -> [0,1,0];
[1,2,3] -> [3,2,1];
[2] -> [2];
[2,0,1] -> [1,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

52.8165 true

[] -> [];
[1] -> [1];
[1,2,1] -> [1,2,1];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1217 true

[3,2] -> [2,3];
[2,0] -> [0,2];
[] -> [];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0396 true

[3,1,3] -> [3,1,3];
[0,1,3] -> [3,1,0];
[2,3,3] -> [3,3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

69.5432 true

[2,1] -> [1,2];
[3,0] -> [0,3];
[] -> [];
[3,1,3] -> [3,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0758 true

[] -> [];
[3] -> [3];
[2] -> [2];
[2,3,2] -> [2,3,2];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0108 false

[2,0] -> [0,2];
[1] -> [1];
[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0697 true

[2,1,3] -> [3,1,2];
[] -> [];
[2] -> [2];
[1,2,0] -> [0,2,1];
[0,0,1] -> [1,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.9306 true

[] -> [];
[0] -> [0];
[2,0,2] -> [2,0,2];
[1,2] -> [2,1];
[2,1] -> [1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1212 true

[1,2,2] -> [2,2,1];
[3,1,2] -> [2,1,3];
[1] -> [1];
[2,1,2] -> [2,1,2];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1933 true

[] -> [];
[1,3,2] -> [2,3,1];
[2] -> [2];
[1,0,0] -> [0,0,1];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9841 true

[1,1] -> [1,1];
[2,1] -> [1,2];
[] -> [];
[2] -> [2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2925 true

[1,2] -> [2,1];
[0,1,1] -> [1,1,0];
[1,2,2] -> [2,2,1];
[] -> [];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0739 true

[1,2,1] -> [1,2,1];
[] -> [];
[1,3,2] -> [2,3,1];
[2] -> [2];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

66.4448 true

[1] -> [1];
[0,3,2] -> [2,3,0];
[] -> [];
[0,1,2] -> [2,1,0];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.9215 true

[0,3] -> [3,0];
[0,2,3] -> [3,2,0];
[2] -> [2];
[1,0] -> [0,1];
[0,2,1] -> [1,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1129 true

[2,0,1] -> [1,0,2];
[2] -> [2];
[3] -> [3];
[] -> [];
[3,2,2] -> [2,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6013 true

[3] -> [3];
[2,1,3] -> [3,1,2];
[1] -> [1];
[3,1,1] -> [1,1,3];
[] -> [];
[1,3,1] -> [1,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9588 true

[2,3,3] -> [3,3,2];
[2] -> [2];
[3,0] -> [0,3];
[] -> [];
[1,2,2] -> [2,2,1];
[2,1,0] -> [0,1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.5945 true

[0,3,0] -> [0,3,0];
[] -> [];
[2,3,3] -> [3,3,2];
[0,1] -> [1,0];
[2] -> [2];
[0,0] -> [0,0];

=================================
None
[3,0,1] -> [1,0,3];
[0,2] -> [2,0];
[2,1] -> [1,2];
[3,3,0] -> [0,3,3];
[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3540 true

[2,0,2] -> [2,0,2];
[0] -> [0];
[] -> [];
[1] -> [1];
[2] -> [2];
[2,1] -> [1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7698 true

[3] -> [3];
[2] -> [2];
[1] -> [1];
[3,0,1] -> [1,0,3];
[1,2] -> [2,1];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4792 true

[] -> [];
[3,3,2] -> [2,3,3];
[1,1] -> [1,1];
[1] -> [1];
[2,1] -> [1,2];
[0,3,3] -> [3,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.2821 true

[1,1,2] -> [2,1,1];
[3,3,2] -> [2,3,3];
[1,2] -> [2,1];
[2,3,1] -> [1,3,2];
[0] -> [0];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1428 true

[1,3] -> [3,1];
[2] -> [2];
[] -> [];
[3,3,0] -> [0,3,3];
[0] -> [0];
[3,1,2] -> [2,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0836 true

[2] -> [2];
[] -> [];
[0] -> [0];
[2,0,3] -> [3,0,2];
[1,3] -> [3,1];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4235 true

[0,2] -> [2,0];
[1,1] -> [1,1];
[0,3] -> [3,0];
[2,2] -> [2,2];
[] -> [];
[3,3,2] -> [2,3,3];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0886 true

[1,0,3] -> [3,0,1];
[3] -> [3];
[2,2,1] -> [1,2,2];
[3,1,0] -> [0,1,3];
[1,1,3] -> [3,1,1];
[0,0] -> [0,0];
[0,2,2] -> [2,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3443 true

[] -> [];
[3] -> [3];
[1,3] -> [3,1];
[0,2] -> [2,0];
[0,1,3] -> [3,1,0];
[3,2,2] -> [2,2,3];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0595 true

[] -> [];
[0,3] -> [3,0];
[0] -> [0];
[0,2,3] -> [3,2,0];
[1] -> [1];
[2] -> [2];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0863 true

[1,1] -> [1,1];
[1,2,0] -> [0,2,1];
[1,2] -> [2,1];
[0,3,1] -> [1,3,0];
[] -> [];
[1,0,2] -> [2,0,1];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.0070 true

[3,3] -> [3,3];
[3,0,3] -> [3,0,3];
[2,0] -> [0,2];
[1,3,2] -> [2,3,1];
[2] -> [2];
[1,3,3] -> [3,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3790 true

[0] -> [0];
[3,1] -> [1,3];
[2,2,1] -> [1,2,2];
[1,1,1] -> [1,1,1];
[1] -> [1];
[1,2] -> [2,1];
[3,2,2] -> [2,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0557 true

[3,2] -> [2,3];
[3,1] -> [1,3];
[2,1] -> [1,2];
[] -> [];
[1,0,1] -> [1,0,1];
[1,1] -> [1,1];
[1,2,0] -> [0,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0607 true

[1,1,2] -> [2,1,1];
[] -> [];
[1] -> [1];
[3,3,1] -> [1,3,3];
[3,0,1] -> [1,0,3];
[2,3,2] -> [2,3,2];
[3,1] -> [1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9839 true

[3] -> [3];
[2,2] -> [2,2];
[3,3,0] -> [0,3,3];
[0,0,2] -> [2,0,0];
[2] -> [2];
[0,1,2] -> [2,1,0];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1113 true

[2,0] -> [0,2];
[] -> [];
[3,1] -> [1,3];
[0,2,3] -> [3,2,0];
[1,1] -> [1,1];
[0,3] -> [3,0];
[1,0] -> [0,1];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0732 true

[] -> [];
[0,2] -> [2,0];
[0] -> [0];
[3,2] -> [2,3];
[1,0] -> [0,1];
[0,2,1] -> [1,2,0];
[0,2,0] -> [0,2,0];
[3,3,1] -> [1,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0666 true

[3,3] -> [3,3];
[0] -> [0];
[3,1,1] -> [1,1,3];
[2,1] -> [1,2];
[] -> [];
[2,3,2] -> [2,3,2];
[0,0,0] -> [0,0,0];
[2,0,0] -> [0,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

4.3275 true

[] -> [];
[3,1] -> [1,3];
[2,3] -> [3,2];
[0,0] -> [0,0];
[1] -> [1];
[0,2] -> [2,0];
[1,0] -> [0,1];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0498 true

[2,3,0] -> [0,3,2];
[2] -> [2];
[] -> [];
[1,0] -> [0,1];
[2,3] -> [3,2];
[1] -> [1];
[3] -> [3];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1713 true

[1] -> [1];
[0,1] -> [1,0];
[] -> [];
[1,0,1] -> [1,0,1];
[2,0,3] -> [3,0,2];
[3,0,1] -> [1,0,3];
[0,2,0] -> [0,2,0];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0434 true

[0,0,1] -> [1,0,0];
[0,2,0] -> [0,2,0];
[1,0,2] -> [2,0,1];
[2,3] -> [3,2];
[3,2,3] -> [3,2,3];
[2] -> [2];
[] -> [];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2646 true

[3,1] -> [1,3];
[1,1,1] -> [1,1,1];
[1,2,3] -> [3,2,1];
[] -> [];
[0,1,1] -> [1,1,0];
[2] -> [2];
[2,0] -> [0,2];
[2,1] -> [1,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0765 true

[3] -> [3];
[] -> [];
[1,2,3] -> [3,2,1];
[0,2,1] -> [1,2,0];
[0] -> [0];
[1,1,2] -> [2,1,1];
[1,0,0] -> [0,0,1];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.0453 true

[1,0,1] -> [1,0,1];
[3,3,2] -> [2,3,3];
[] -> [];
[1,1] -> [1,1];
[0,0,1] -> [1,0,0];
[1,0] -> [0,1];
[0,3,3] -> [3,3,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

76.9231 true

[3] -> [3];
[] -> [];
[3,0] -> [0,3];
[3,3] -> [3,3];
[2] -> [2];
[0] -> [0];
[3,2,1] -> [1,2,3];
[2,1,3] -> [3,1,2];
[3,2,3] -> [3,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1121 true

[] -> [];
[1,2] -> [2,1];
[2,3,0] -> [0,3,2];
[3,1,2] -> [2,1,3];
[2,2,2] -> [2,2,2];
[0,3,1] -> [1,3,0];
[1,0] -> [0,1];
[0,0] -> [0,0];
[2,3,1] -> [1,3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0753 true

[3,3] -> [3,3];
[] -> [];
[2,0,3] -> [3,0,2];
[2] -> [2];
[1,2] -> [2,1];
[2,2,3] -> [3,2,2];
[0] -> [0];
[2,0] -> [0,2];
[3,2,1] -> [1,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

5.5015 true

[0,1] -> [1,0];
[3] -> [3];
[] -> [];
[3,2,1] -> [1,2,3];
[1] -> [1];
[3,1] -> [1,3];
[0,0] -> [0,0];
[0] -> [0];
[2,2,0] -> [0,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0320 true

[] -> [];
[0] -> [0];
[1] -> [1];
[3,0] -> [0,3];
[2,3,2] -> [2,3,2];
[0,1,2] -> [2,1,0];
[3,3,0] -> [0,3,3];
[0,0,3] -> [3,0,0];
[2,3] -> [3,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0785 true

[0,3,3] -> [3,3,0];
[1] -> [1];
[3] -> [3];
[0] -> [0];
[] -> [];
[3,0,1] -> [1,0,3];
[2,2,2] -> [2,2,2];
[1,3,1] -> [1,3,1];
[3,1,3] -> [3,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.1573 true

[1,3] -> [3,1];
[2,3,2] -> [2,3,2];
[1,0,2] -> [2,0,1];
[] -> [];
[2] -> [2];
[0,3,3] -> [3,3,0];
[1,1,3] -> [3,1,1];
[2,2,0] -> [0,2,2];
[1,2] -> [2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0837 true

[3,0] -> [0,3];
[2] -> [2];
[0] -> [0];
[] -> [];
[3] -> [3];
[1,2,3] -> [3,2,1];
[1,1,2] -> [2,1,1];
[2,1] -> [1,2];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0761 true

[2,3] -> [3,2];
[] -> [];
[1] -> [1];
[1,2,3] -> [3,2,1];
[0,1,1] -> [1,1,0];
[3] -> [3];
[0] -> [0];
[0,2] -> [2,0];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0334 true

[3,1] -> [1,3];
[] -> [];
[3] -> [3];
[0] -> [0];
[3,0,3] -> [3,0,3];
[1,3,2] -> [2,3,1];
[1,0,2] -> [2,0,1];
[1] -> [1];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0638 true

[3] -> [3];
[0,0] -> [0,0];
[] -> [];
[0] -> [0];
[0,3] -> [3,0];
[0,0,3] -> [3,0,0];
[3,3,1] -> [1,3,3];
[1,2,2] -> [2,2,1];
[3,0] -> [0,3];
[0,2,1] -> [1,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0605 true

[3] -> [3];
[1,2] -> [2,1];
[1,3] -> [3,1];
[2,3] -> [3,2];
[] -> [];
[3,3,1] -> [1,3,3];
[1] -> [1];
[0,3] -> [3,0];
[2] -> [2];
[3,3] -> [3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0607 true

[3] -> [3];
[1] -> [1];
[] -> [];
[2,1,1] -> [1,1,2];
[0] -> [0];
[1,1] -> [1,1];
[0,3,0] -> [0,3,0];
[1,3] -> [3,1];
[1,0,3] -> [3,0,1];
[1,3,0] -> [0,3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0823 true

[3,0,3] -> [3,0,3];
[1,2,0] -> [0,2,1];
[1] -> [1];
[3,1,0] -> [0,1,3];
[0,1,1] -> [1,1,0];
[] -> [];
[2,2] -> [2,2];
[0,3,0] -> [0,3,0];
[0,0,0] -> [0,0,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

23.5929 true

[2,1,1] -> [1,1,2];
[0] -> [0];
[1,3] -> [3,1];
[0,3] -> [3,0];
[2] -> [2];
[] -> [];
[1] -> [1];
[3,3,2] -> [2,3,3];
[3,3,0] -> [0,3,3];
[0,3,0] -> [0,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3870 true

[0] -> [0];
[] -> [];
[2,1] -> [1,2];
[0,1] -> [1,0];
[1,3] -> [3,1];
[0,0,1] -> [1,0,0];
[0,3,2] -> [2,3,0];
[3,2,2] -> [2,2,3];
[1,1] -> [1,1];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0954 true

[1,1] -> [1,1];
[2,1] -> [1,2];
[0,0] -> [0,0];
[] -> [];
[2,3] -> [3,2];
[0,0,3] -> [3,0,0];
[3,0] -> [0,3];
[1] -> [1];
[2,2] -> [2,2];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0741 true

[0,1] -> [1,0];
[] -> [];
[0] -> [0];
[0,2] -> [2,0];
[2,1,3] -> [3,1,2];
[3] -> [3];
[3,0,1] -> [1,0,3];
[2,2,3] -> [3,2,2];
[1,3,3] -> [3,3,1];
[0,2,0] -> [0,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0318 true

[3,2] -> [2,3];
[1,1,2] -> [2,1,1];
[2] -> [2];
[1,0,2] -> [2,0,1];
[0,2] -> [2,0];
[] -> [];
[3] -> [3];
[2,3] -> [3,2];
[2,2,0] -> [0,2,2];
[3,2,1] -> [1,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0524 true

[3,2] -> [2,3];
[3] -> [3];
[2,2] -> [2,2];
[1] -> [1];
[0,2,1] -> [1,2,0];
[] -> [];
[3,1] -> [1,3];
[3,1,2] -> [2,1,3];
[1,0] -> [0,1];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1019 true

[1] -> [1];
[2,1,2] -> [2,1,2];
[] -> [];
[3,1,3] -> [3,1,3];
[1,1,1] -> [1,1,1];
[1,1] -> [1,1];
[2] -> [2];
[0,1] -> [1,0];
[0,3] -> [3,0];
[2,0,3] -> [3,0,2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0384 true

[0,1,0] -> [0,1,0];
[2] -> [2];
[] -> [];
[2,3] -> [3,2];
[2,0,0] -> [0,0,2];
[3] -> [3];
[1,3] -> [3,1];
[0,2,3] -> [3,2,0];
[2,2,0] -> [0,2,2];
[1,3,3] -> [3,3,1];
[1,1,2] -> [2,1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7378 true

[] -> [];
[2] -> [2];
[1,0] -> [0,1];
[1] -> [1];
[3] -> [3];
[2,0] -> [0,2];
[2,0,2] -> [2,0,2];
[1,2] -> [2,1];
[2,1,0] -> [0,1,2];
[2,0,3] -> [3,0,2];
[2,2,1] -> [1,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0402 true

[2,1] -> [1,2];
[2] -> [2];
[3,3,2] -> [2,3,3];
[3,1] -> [1,3];
[0,2,0] -> [0,2,0];
[] -> [];
[1,1] -> [1,1];
[3] -> [3];
[3,2] -> [2,3];
[2,0] -> [0,2];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0494 true

[] -> [];
[2] -> [2];
[1] -> [1];
[0,2] -> [2,0];
[2,2] -> [2,2];
[3] -> [3];
[2,0,2] -> [2,0,2];
[2,3,2] -> [2,3,2];
[2,0,3] -> [3,0,2];
[1,0,3] -> [3,0,1];
[0,3,0] -> [0,3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0705 true

[2,0] -> [0,2];
[0] -> [0];
[2,0,3] -> [3,0,2];
[] -> [];
[3] -> [3];
[0,0,3] -> [3,0,0];
[2,0,0] -> [0,0,2];
[3,1,2] -> [2,1,3];
[1] -> [1];
[2,0,1] -> [1,0,2];
[3,2,0] -> [0,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0704 true

[] -> [];
[1,1] -> [1,1];
[0,3,3] -> [3,3,0];
[1,3] -> [3,1];
[2] -> [2];
[2,3,1] -> [1,3,2];
[2,1] -> [1,2];
[2,3,0] -> [0,3,2];
[0,3] -> [3,0];
[0,3,2] -> [2,3,0];
[1,2] -> [2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

8.9284 true

[3,0,0] -> [0,0,3];
[1] -> [1];
[3] -> [3];
[] -> [];
[3,1,3] -> [3,1,3];
[0] -> [0];
[0,1,2] -> [2,1,0];
[3,0,2] -> [2,0,3];
[1,0] -> [0,1];
[0,2] -> [2,0];
[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2708 true

[1,1,0] -> [0,1,1];
[0] -> [0];
[2] -> [2];
[1] -> [1];
[] -> [];
[0,3] -> [3,0];
[2,0,0] -> [0,0,2];
[0,1,3] -> [3,1,0];
[3,1] -> [1,3];
[0,1] -> [1,0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2664 true

[0,3,3] -> [3,3,0];
[3,3,0] -> [0,3,3];
[1] -> [1];
[0,2] -> [2,0];
[3,0] -> [0,3];
[0] -> [0];
[0,1] -> [1,0];
[] -> [];
[3,2] -> [2,3];
[2,0] -> [0,2];
[1,1] -> [1,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.3392 true

[1] -> [1];
[0,2,3] -> [3,2,0];
[] -> [];
[0] -> [0];
[1,0,2] -> [2,0,1];
[2,2,2] -> [2,2,2];
[1,0] -> [0,1];
[3,0] -> [0,3];
[3,1,0] -> [0,1,3];
[2] -> [2];
[3,1] -> [1,3];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

2.2094 true

[0] -> [0];
[3,2,3] -> [3,2,3];
[] -> [];
[2,1] -> [1,2];
[1,0,0] -> [0,0,1];
[3,2,2] -> [2,2,3];
[0,1] -> [1,0];
[1] -> [1];
[2] -> [2];
[3,0] -> [0,3];
[3,2] -> [2,3];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0400 true

[2,3] -> [3,2];
[2,0,1] -> [1,0,2];
[0,1] -> [1,0];
[1,1,0] -> [0,1,1];
[2,2] -> [2,2];
[0,3] -> [3,0];
[] -> [];
[3] -> [3];
[0,2,0] -> [0,2,0];
[0] -> [0];
[2] -> [2];
[2,0] -> [0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0452 true

[] -> [];
[1,1] -> [1,1];
[1] -> [1];
[3,1] -> [1,3];
[1,0] -> [0,1];
[2,1,2] -> [2,1,2];
[2,2] -> [2,2];
[3,0,1] -> [1,0,3];
[2,1,3] -> [3,1,2];
[2] -> [2];
[2,1,1] -> [1,1,2];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1406 true

[1] -> [1];
[0,3,0] -> [0,3,0];
[1,2] -> [2,1];
[3,0] -> [0,3];
[] -> [];
[3] -> [3];
[0,2] -> [2,0];
[2] -> [2];
[0,1] -> [1,0];
[0] -> [0];
[3,3] -> [3,3];
[3,2,1] -> [1,2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0767 true

[0] -> [0];
[1] -> [1];
[3,0] -> [0,3];
[2] -> [2];
[3,0,2] -> [2,0,3];
[3,1] -> [1,3];
[2,0,1] -> [1,0,2];
[] -> [];
[1,2] -> [2,1];
[3] -> [3];
[1,3,2] -> [2,3,1];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0689 true

[1,0,3] -> [3,0,1];
[3] -> [3];
[1] -> [1];
[] -> [];
[2] -> [2];
[1,1] -> [1,1];
[0,0] -> [0,0];
[0,3,2] -> [2,3,0];
[0] -> [0];
[0,3] -> [3,0];
[1,3,2] -> [2,3,1];
[1,0] -> [0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1219 true

[0,3,2] -> [2,3,0];
[] -> [];
[3,1] -> [1,3];
[1] -> [1];
[0,0] -> [0,0];
[3,3,1] -> [1,3,3];
[1,2,0] -> [0,2,1];
[1,2,3] -> [3,2,1];
[3,2,0] -> [0,2,3];
[2,3,2] -> [2,3,2];
[3,2] -> [2,3];
[2,2,1] -> [1,2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1043 true

[] -> [];
[0,0,2] -> [2,0,0];
[1] -> [1];
[2,0] -> [0,2];
[0,0,3] -> [3,0,0];
[2,3,3] -> [3,3,2];
[1,3] -> [3,1];
[1,0] -> [0,1];
[3] -> [3];
[0,1] -> [1,0];
[1,2,0] -> [0,2,1];
[2] -> [2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1933 true

[3] -> [3];
[2,1,3] -> [3,1,2];
[0] -> [0];
[] -> [];
[1,2] -> [2,1];
[3,1,1] -> [1,1,3];
[3,0,1] -> [1,0,3];
[2,1] -> [1,2];
[3,0] -> [0,3];
[2] -> [2];
[0,2] -> [2,0];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1280 true

[1,0] -> [0,1];
[1,1,0] -> [0,1,1];
[0,0,0] -> [0,0,0];
[3,2] -> [2,3];
[] -> [];
[0,1,1] -> [1,1,0];
[1,3,0] -> [0,3,1];
[1,2] -> [2,1];
[1] -> [1];
[0] -> [0];
[1,3] -> [3,1];
[3,0] -> [0,3];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0240 true

[1,0] -> [0,1];
[] -> [];
[3,1] -> [1,3];
[3,3,0] -> [0,3,3];
[2,1] -> [1,2];
[3,2,1] -> [1,2,3];
[1,3,0] -> [0,3,1];
[0,3] -> [3,0];
[3,0] -> [0,3];
[2,2] -> [2,2];
[0] -> [0];
[3] -> [3];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0436 true

[3,3] -> [3,3];
[1] -> [1];
[2] -> [2];
[2,1,1] -> [1,1,2];
[3] -> [3];
[1,0,1] -> [1,0,1];
[] -> [];
[1,1] -> [1,1];
[0,3,0] -> [0,3,0];
[1,1,1] -> [1,1,1];
[2,2,0] -> [0,2,2];
[3,0,2] -> [2,0,3];
[0] -> [0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1601 true

[0] -> [0];
[] -> [];
[1,2,2] -> [2,2,1];
[2,3] -> [3,2];
[2,2] -> [2,2];
[0,2,2] -> [2,2,0];
[2,0] -> [0,2];
[3,2,1] -> [1,2,3];
[2] -> [2];
[1,0] -> [0,1];
[3] -> [3];
[1] -> [1];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1184 true

[] -> [];
[3] -> [3];
[1,1,2] -> [2,1,1];
[1,2] -> [2,1];
[2,2] -> [2,2];
[3,3,3] -> [3,3,3];
[3,3,0] -> [0,3,3];
[1,0,3] -> [3,0,1];
[2,0] -> [0,2];
[1,2,1] -> [1,2,1];
[3,1] -> [1,3];
[2,3,0] -> [0,3,2];
[3,1,3] -> [3,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1320 true

[1,1] -> [1,1];
[3,3] -> [3,3];
[1,2] -> [2,1];
[3,2] -> [2,3];
[0,0] -> [0,0];
[2,2,2] -> [2,2,2];
[0,2] -> [2,0];
[0] -> [0];
[] -> [];
[3] -> [3];
[1] -> [1];
[2] -> [2];
[2,0,3] -> [3,0,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0833 true

[1] -> [1];
[3,2,3] -> [3,2,3];
[0,3] -> [3,0];
[1,2,3] -> [3,2,1];
[3,1] -> [1,3];
[0,1,1] -> [1,1,0];
[2] -> [2];
[1,3] -> [3,1];
[] -> [];
[2,1] -> [1,2];
[0,0,0] -> [0,0,0];
[3] -> [3];
[3,3,0] -> [0,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0611 true

[2] -> [2];
[0] -> [0];
[3,3,3] -> [3,3,3];
[3] -> [3];
[] -> [];
[0,2] -> [2,0];
[2,3] -> [3,2];
[3,1,2] -> [2,1,3];
[3,0,1] -> [1,0,3];
[3,0] -> [0,3];
[1,0,1] -> [1,0,1];
[2,1,1] -> [1,1,2];
[3,0,2] -> [2,0,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0492 true

[] -> [];
[1,2] -> [2,1];
[1] -> [1];
[1,0,2] -> [2,0,1];
[3] -> [3];
[2,1,0] -> [0,1,2];
[3,0,1] -> [1,0,3];
[2,1] -> [1,2];
[0] -> [0];
[2,3,2] -> [2,3,2];
[1,2,0] -> [0,2,1];
[2,1,3] -> [3,1,2];
[1,0] -> [0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0532 true

[1,3,0] -> [0,3,1];
[] -> [];
[2] -> [2];
[2,2] -> [2,2];
[1,0] -> [0,1];
[1,0,0] -> [0,0,1];
[3,0,3] -> [3,0,3];
[0,0,3] -> [3,0,0];
[1,3] -> [3,1];
[1,1] -> [1,1];
[2,1] -> [1,2];
[0] -> [0];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6928 true

[] -> [];
[0] -> [0];
[3,0,0] -> [0,0,3];
[3,2,2] -> [2,2,3];
[2,3,1] -> [1,3,2];
[2,2,1] -> [1,2,2];
[1,0] -> [0,1];
[3,2,3] -> [3,2,3];
[2] -> [2];
[0,2] -> [2,0];
[2,3] -> [3,2];
[0,2,2] -> [2,2,0];
[2,1] -> [1,2];
[3,3] -> [3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2851 true

[1,1,0] -> [0,1,1];
[] -> [];
[1,1,1] -> [1,1,1];
[1] -> [1];
[0] -> [0];
[0,0] -> [0,0];
[1,0,3] -> [3,0,1];
[2] -> [2];
[0,3,0] -> [0,3,0];
[3,3,1] -> [1,3,3];
[3,2] -> [2,3];
[0,0,0] -> [0,0,0];
[3] -> [3];
[0,3] -> [3,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4068 true

[0,0] -> [0,0];
[1,1] -> [1,1];
[1,3,2] -> [2,3,1];
[1,3,1] -> [1,3,1];
[1,1,2] -> [2,1,1];
[] -> [];
[3,1] -> [1,3];
[1] -> [1];
[0,3,1] -> [1,3,0];
[2] -> [2];
[3,0,3] -> [3,0,3];
[3] -> [3];
[2,1] -> [1,2];
[1,2,2] -> [2,2,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.2740 true

[3,3] -> [3,3];
[3] -> [3];
[1,0,3] -> [3,0,1];
[] -> [];
[2] -> [2];
[2,3] -> [3,2];
[0,0,2] -> [2,0,0];
[0,0,1] -> [1,0,0];
[1,1] -> [1,1];
[3,3,0] -> [0,3,3];
[1,3] -> [3,1];
[2,2] -> [2,2];
[0,1,3] -> [3,1,0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.7863 true

[] -> [];
[2,0] -> [0,2];
[1] -> [1];
[2,3] -> [3,2];
[2,1] -> [1,2];
[3,0,3] -> [3,0,3];
[3,2,1] -> [1,2,3];
[3] -> [3];
[1,2] -> [2,1];
[3,1] -> [1,3];
[1,1,1] -> [1,1,1];
[0] -> [0];
[0,3,2] -> [2,3,0];
[0,0] -> [0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0511 true

[0,2,3] -> [3,2,0];
[0] -> [0];
[0,2] -> [2,0];
[1,2] -> [2,1];
[1,1] -> [1,1];
[] -> [];
[1,1,2] -> [2,1,1];
[3,1] -> [1,3];
[1,3] -> [3,1];
[2] -> [2];
[1,0,0] -> [0,0,1];
[3,3,1] -> [1,3,3];
[2,3] -> [3,2];
[0,2,2] -> [2,2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1283 true

[0,3,0] -> [0,3,0];
[] -> [];
[0] -> [0];
[2,3,1] -> [1,3,2];
[1,2] -> [2,1];
[2] -> [2];
[1] -> [1];
[3,3] -> [3,3];
[1,1,2] -> [2,1,1];
[1,3] -> [3,1];
[3,0,0] -> [0,0,3];
[3] -> [3];
[0,1] -> [1,0];
[3,1,2] -> [2,1,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

74.7624 true

[] -> [];
[2,3] -> [3,2];
[2,1] -> [1,2];
[1,1,0] -> [0,1,1];
[3,1] -> [1,3];
[0,2] -> [2,0];
[0,3,3] -> [3,3,0];
[0] -> [0];
[3,2,3] -> [3,2,3];
[1] -> [1];
[1,0] -> [0,1];
[2] -> [2];
[3] -> [3];
[3,3,2] -> [2,3,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0273 true

[0] -> [0];
[2] -> [2];
[3] -> [3];
[0,1] -> [1,0];
[1,1] -> [1,1];
[] -> [];
[1,2,3] -> [3,2,1];
[3,1,1] -> [1,1,3];
[2,2] -> [2,2];
[2,3] -> [3,2];
[2,0,1] -> [1,0,2];
[3,1,3] -> [3,1,3];
[3,1,0] -> [0,1,3];
[1,3] -> [3,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0366 true

[] -> [];
[0,1,3] -> [3,1,0];
[3,1] -> [1,3];
[2] -> [2];
[2,0] -> [0,2];
[1,3,3] -> [3,3,1];
[0,2,2] -> [2,2,0];
[0] -> [0];
[0,3,1] -> [1,3,0];
[0,0] -> [0,0];
[0,0,0] -> [0,0,0];
[1,2] -> [2,1];
[1] -> [1];
[1,0,3] -> [3,0,1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.3192 true

[0,1] -> [1,0];
[] -> [];
[2] -> [2];
[3,0,2] -> [2,0,3];
[2,1] -> [1,2];
[1,0] -> [0,1];
[1] -> [1];
[2,3] -> [3,2];
[3] -> [3];
[0] -> [0];
[2,3,1] -> [1,3,2];
[3,1,1] -> [1,1,3];
[0,3,2] -> [2,3,0];
[2,1,1] -> [1,1,2];
[2,2] -> [2,2];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0312 true

[] -> [];
[0,2,0] -> [0,2,0];
[3,2,2] -> [2,2,3];
[1] -> [1];
[0] -> [0];
[3,1] -> [1,3];
[1,2] -> [2,1];
[0,2,2] -> [2,2,0];
[3] -> [3];
[3,2,0] -> [0,2,3];
[1,0,2] -> [2,0,1];
[0,1] -> [1,0];
[2,0,3] -> [3,0,2];
[1,2,1] -> [1,2,1];
[0,0,0] -> [0,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

79.8751 true

[3,2] -> [2,3];
[2,3,1] -> [1,3,2];
[0,3,0] -> [0,3,0];
[] -> [];
[1,2,1] -> [1,2,1];
[2] -> [2];
[1,1] -> [1,1];
[0,1,0] -> [0,1,0];
[0,3,3] -> [3,3,0];
[3,0] -> [0,3];
[2,1,0] -> [0,1,2];
[3] -> [3];
[2,2,1] -> [1,2,2];
[0] -> [0];
[1] -> [1];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0293 true

[] -> [];
[2] -> [2];
[1,3] -> [3,1];
[1] -> [1];
[0,1] -> [1,0];
[3,1] -> [1,3];
[3] -> [3];
[1,3,1] -> [1,3,1];
[2,0,3] -> [3,0,2];
[0] -> [0];
[2,1,2] -> [2,1,2];
[2,1,3] -> [3,1,2];
[0,3] -> [3,0];
[2,3,1] -> [1,3,2];
[0,2] -> [2,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0996 true

[1,2,1] -> [1,2,1];
[2,3] -> [3,2];
[] -> [];
[3,2] -> [2,3];
[0,3] -> [3,0];
[2] -> [2];
[2,2,2] -> [2,2,2];
[3] -> [3];
[1,2] -> [2,1];
[0,2] -> [2,0];
[3,2,0] -> [0,2,3];
[1,0] -> [0,1];
[1] -> [1];
[0] -> [0];
[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.9159 true

[0,3] -> [3,0];
[] -> [];
[2] -> [2];
[1,0,2] -> [2,0,1];
[2,0] -> [0,2];
[0,2] -> [2,0];
[3] -> [3];
[0] -> [0];
[1,0] -> [0,1];
[3,3] -> [3,3];
[2,1,2] -> [2,1,2];
[1,1] -> [1,1];
[3,3,0] -> [0,3,3];
[1] -> [1];
[0,0,1] -> [1,0,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0425 true

[1,2] -> [2,1];
[0,3] -> [3,0];
[2,1] -> [1,2];
[2,3,2] -> [2,3,2];
[1,2,1] -> [1,2,1];
[0,1] -> [1,0];
[] -> [];
[3,0,1] -> [1,0,3];
[0,0,2] -> [2,0,0];
[0] -> [0];
[0,3,2] -> [2,3,0];
[2,0,3] -> [3,0,2];
[2,3,0] -> [0,3,2];
[2] -> [2];
[3] -> [3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0270 true

[3,0,1] -> [1,0,3];
[1,0,1] -> [1,0,1];
[3] -> [3];
[0] -> [0];
[2,0] -> [0,2];
[2,3] -> [3,2];
[3,3,2] -> [2,3,3];
[0,0,3] -> [3,0,0];
[2,2] -> [2,2];
[] -> [];
[1,3] -> [3,1];
[2,2,3] -> [3,2,2];
[2,1] -> [1,2];
[1,2,1] -> [1,2,1];
[3,2] -> [2,3];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3764 true

[3,0] -> [0,3];
[] -> [];
[3] -> [3];
[1,0,1] -> [1,0,1];
[3,3,2] -> [2,3,3];
[3,2] -> [2,3];
[0,2,1] -> [1,2,0];
[0,1,1] -> [1,1,0];
[2,2] -> [2,2];
[2] -> [2];
[0] -> [0];
[1,0] -> [0,1];
[1] -> [1];
[1,3,0] -> [0,3,1];
[0,1] -> [1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0413 true

[0,0] -> [0,0];
[2,2,0] -> [0,2,2];
[0,3] -> [3,0];
[1,0] -> [0,1];
[2] -> [2];
[0,3,1] -> [1,3,0];
[3] -> [3];
[] -> [];
[2,1,1] -> [1,1,2];
[2,1] -> [1,2];
[1,0,1] -> [1,0,1];
[3,2] -> [2,3];
[1,1] -> [1,1];
[1,0,0] -> [0,0,1];
[0,1,3] -> [3,1,0];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

1.2842 true

