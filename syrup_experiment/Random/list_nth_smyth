([1,2],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.00372900000002 false false

([2,0,1],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00373399999989 false false

([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00343999999996 false false

([0,0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00341299999991 false false

([2,3,2],1) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S (S n) in list_nth) : NatList -> Nat -> Nat)
0.00370199999998 false false

([],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00348699999995 false false

([1,0,2],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00339899999994 false false

([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00348200000008 false false

([],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00368400000002 false false

([1,1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00345199999992 false false

([0,2],2) -> 0;
([2,0,0],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00496500000008 false false

([],2) -> 0;
([0,1,2],1) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      n in list_nth) : NatList -> Nat -> Nat)
0.0049590000001 false false

([1,1],0) -> 1;
([0,0,1],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00462300000004 false false

([2,2],0) -> 2;
([2,1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00484600000004 false false

([],1) -> 0;
([3,0],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00665000000004 false false

([],2) -> 0;
([2,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00373399999989 false false

([3,2],1) -> 2;
([3,0],3) -> 0;

=================================
NOSOL

([],1) -> 0;
([1,2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.0034169999999 false false

([],1) -> 0;
([2,1,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00369099999989 false false

([0],0) -> 0;
([2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00343500000008 false false

([0],2) -> 0;
([0,3,2],1) -> 3;
([3],2) -> 0;

=================================
NOSOL

([],3) -> 0;
([3,3,3],1) -> 3;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_nth (#2.2 y1) n) in list_nth) : NatList -> Nat -> Nat)
0.00572499999998 false false

([1],2) -> 0;
([0,2],2) -> 0;
([],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.0038669999999 false false

([2,0,2],0) -> 2;
([],2) -> 0;
([1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00597500000003 false false

([1,1,3],2) -> 3;
([],0) -> 0;
([2,1,1],1) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) (#2.1 y1) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) (#2.1 y1) in list_nth) : NatList -> Nat -> Nat)
0.00619899999992 false false

([0],3) -> 0;
([2,1],2) -> 0;
([1,2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00345700000003 false false

([3,3],0) -> 3;
([0,2,3],3) -> 0;
([0,3,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00479199999995 false false

([],1) -> 0;
([2],0) -> 2;
([3,3],1) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00607500000001 false false

([],1) -> 0;
([2,1],3) -> 0;
([1],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00342799999999 false false

([3,3,3],3) -> 0;
([1],2) -> 0;
([0,2],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00371999999993 false false

([0,3,2],2) -> 2;
([],1) -> 0;
([1],1) -> 0;
([0,2,1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          case y2 of
            Z y3 -> 
              0

            S y3 -> 
              2

    Cons y1 -> 
      list_nth (#2.2 y1) (list_nth (#2.2 y1) (#2.1 y1)) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          case y2 of
            Z y3 -> 
              0

            S y3 -> 
              2

    Cons y1 -> 
      list_nth (#2.2 y1) (list_nth (#2.2 y1) (#2.1 y1)) in list_nth) : NatList -> Nat -> Nat)
16.825275 false false

([3,0,1],1) -> 0;
([2,2,1],3) -> 0;
([],0) -> 0;
([3,1],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          S (S (S (list_nth (#2.2 y1) (#2.1 y1))))

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
0.0204940000001 false false

([1],2) -> 0;
([2],2) -> 0;
([3,2,1],1) -> 2;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (list_nth (#2.2 y1) n) in list_nth) : NatList -> Nat -> Nat)
0.0179599999999 false false

([2],1) -> 0;
([1],3) -> 0;
([],1) -> 0;
([3],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00938500000007 false false

([3],0) -> 3;
([],0) -> 0;
([0,1,0],3) -> 0;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00623399999995 false false

([2,3,1],2) -> 1;
([],1) -> 0;
([1],3) -> 0;
([3],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.02611 true true

([2,3],1) -> 3;
([3,1,3],0) -> 3;
([0,1],1) -> 1;
([2,1,1],2) -> 1;

=================================
NOSOL

([],3) -> 0;
([0],2) -> 0;
([2],0) -> 2;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.00582099999997 false false

([3],1) -> 0;
([2,3],0) -> 2;
([],1) -> 0;
([3,0],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          list_nth (#2.2 y1) n

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.0437979999999 false false

([1,3],0) -> 1;
([2,1],2) -> 0;
([1],3) -> 0;
([3,1,0],1) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      case y1 of
        Z y2 -> 
          n

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
0.0074259999999 false false

([],2) -> 0;
([2],3) -> 0;
([],1) -> 0;
([1,1],0) -> 1;
([1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00623300000007 false false

([0,2,1],1) -> 2;
([3,3],1) -> 3;
([1],0) -> 1;
([0],3) -> 0;
([0,2,2],3) -> 0;

=================================
NOSOL

([],3) -> 0;
([1],0) -> 1;
([2,1,3],1) -> 1;
([2],3) -> 0;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0522350000001 true true

([1,0,2],0) -> 1;
([2,3],1) -> 3;
([2,2],1) -> 2;
([],1) -> 0;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.043093 true true

([],1) -> 0;
([0,0,3],3) -> 0;
([2,1],0) -> 2;
([2,3],1) -> 3;
([2,1,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.025899 true true

([0],0) -> 0;
([1,1],2) -> 0;
([3,3,2],2) -> 2;
([0],2) -> 0;
([3,2],2) -> 0;

=================================
NOSOL

([2],2) -> 0;
([0,1,2],1) -> 1;
([3,2,2],0) -> 3;
([],1) -> 0;
([1,2,0],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.049675 true true

([3],1) -> 0;
([2,1],2) -> 0;
([],1) -> 0;
([],0) -> 0;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00390900000002 false false

([3,1],2) -> 0;
([2,3],2) -> 0;
([1,1],0) -> 1;
([3,1,1],0) -> 3;
([0,3],0) -> 0;

=================================
NOSOL

([2,1],0) -> 2;
([3],3) -> 0;
([],3) -> 0;
([0,1,0],2) -> 0;
([0,0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00700600000005 false false

([],0) -> 0;
([3,2],0) -> 3;
([0],3) -> 0;
([2],1) -> 0;
([],1) -> 0;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (#2.1 y2) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (S (S (list_nth (#2.2 y1) n))) in list_nth) : NatList -> Nat -> Nat)
0.0225310000001 false false

([2,1,2],2) -> 2;
([3,3,0],1) -> 3;
([],1) -> 0;
([1,2,0],3) -> 0;
([0],1) -> 0;
([3,2,1],3) -> 0;

=================================
STACKOVERFLOW

([3],2) -> 0;
([0,2,1],0) -> 0;
([0,0],2) -> 0;
([1,2],1) -> 2;
([3,3],2) -> 0;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      0

    S y1 -> 
      case y1 of
        Z y2 -> 
          S n

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.033359 false true

([2,2],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([0,0],0) -> 0;
([3,3,3],3) -> 0;
([2,1,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00350299999991 false false

([0],2) -> 0;
([],2) -> 0;
([2,3],2) -> 0;
([2,1],3) -> 0;
([0,1],0) -> 0;
([1,1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0287089999999 false false

([3],0) -> 3;
([],3) -> 0;
([],1) -> 0;
([3,3,2],0) -> 3;
([2,0],1) -> 0;
([0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00605599999994 false false

([3],0) -> 3;
([0,1],2) -> 0;
([0,0],0) -> 0;
([0,1,2],0) -> 0;
([],2) -> 0;
([2,1,1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          #2.1 y1

        Cons y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0340409999999 false false

([1,0],0) -> 1;
([1,1,2],0) -> 1;
([3,3,2],0) -> 3;
([],0) -> 0;
([0,0,3],0) -> 0;
([2,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0337469999999 false false

([1,0],0) -> 1;
([1,0,1],1) -> 0;
([0,2],0) -> 0;
([0],2) -> 0;
([3],2) -> 0;
([3,2],2) -> 0;

=================================
NOSOL

([],1) -> 0;
([1,3,2],0) -> 1;
([2,1],3) -> 0;
([],2) -> 0;
([0],3) -> 0;
([1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00591099999997 false false

([3,1,1],2) -> 1;
([2,0],1) -> 0;
([0,0,2],0) -> 0;
([2],1) -> 0;
([2],3) -> 0;
([3,1,2],1) -> 1;
([0,0,2],1) -> 0;

=================================
NOSOL

([0,2,3],2) -> 3;
([2,2],3) -> 0;
([0,3,2],1) -> 3;
([0,3],1) -> 3;
([0],1) -> 0;
([],3) -> 0;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              3

            S y3 -> 
              0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              S (S (S (list_nth (#2.2 y1) n)))

            S y3 -> 
              0 in list_nth) : NatList -> Nat -> Nat)
28.669531 false false

([2,2,0],0) -> 2;
([],3) -> 0;
([1,3,1],0) -> 1;
([],1) -> 0;
([3],3) -> 0;
([0,2,1],2) -> 1;
([1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0487700000001 true true

([],3) -> 0;
([1,2,3],0) -> 1;
([],0) -> 0;
([3,3],1) -> 3;
([0,2,1],3) -> 0;
([0,3],2) -> 0;
([1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          list_nth (#2.2 y1) n

        Cons y2 -> 
          #2.1 y1 in list_nth) : NatList -> Nat -> Nat)
0.0479720000001 false false

([],3) -> 0;
([0,1,1],1) -> 1;
([1],2) -> 0;
([1,1],2) -> 0;
([1,3,0],3) -> 0;
([1],3) -> 0;
([1,2],1) -> 2;

=================================
None
([],1) -> 0;
([3,0,2],3) -> 0;
([0],2) -> 0;
([2,3,1],0) -> 2;
([0,2,1],1) -> 2;
([0,3],2) -> 0;
([0,1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0362889999999 true true

([],3) -> 0;
([0],1) -> 0;
([3,0,1],0) -> 3;
([2],1) -> 0;
([0,3],1) -> 3;
([2,3,1],1) -> 3;
([1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.034396 true true

([0],1) -> 0;
([3,3],3) -> 0;
([0],0) -> 0;
([2,0],0) -> 2;
([1,1],0) -> 1;
([2,2,0],1) -> 2;
([3,2],0) -> 3;

=================================
NOSOL

([],3) -> 0;
([2],3) -> 0;
([1],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([0],3) -> 0;
([1],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00395499999991 false false

([2,2,0],0) -> 2;
([3,1,3],0) -> 3;
([2],0) -> 2;
([],3) -> 0;
([0,1,0],3) -> 0;
([3],2) -> 0;
([0,2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.04919 false false

([3],0) -> 3;
([],0) -> 0;
([0,1,2],2) -> 2;
([1],1) -> 0;
([1,0],1) -> 0;
([3,1,0],1) -> 1;
([2,1,1],3) -> 0;
([2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0406800000001 true true

([0],1) -> 0;
([1,2,1],1) -> 2;
([],2) -> 0;
([2,1,3],1) -> 1;
([1,0,1],0) -> 1;
([],3) -> 0;
([1],2) -> 0;
([2,3],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.039957 true true

([0,1,3],0) -> 0;
([0,3],2) -> 0;
([3,0,2],2) -> 2;
([0],3) -> 0;
([3,0,2],0) -> 3;
([1,3,0],3) -> 0;
([2,2],2) -> 0;
([2,2],0) -> 2;

=================================
NOSOL

([2,0],3) -> 0;
([0,0],0) -> 0;
([1,0,3],1) -> 0;
([],3) -> 0;
([],0) -> 0;
([3,2,0],3) -> 0;
([2,3,0],0) -> 2;
([0,1,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.042346 false false

([0,3],0) -> 0;
([2,1,2],1) -> 1;
([],3) -> 0;
([0,0,0],0) -> 0;
([],2) -> 0;
([0,1,0],0) -> 0;
([3,0],1) -> 0;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.037519 true true

([2],0) -> 2;
([2,1],2) -> 0;
([1],3) -> 0;
([3,3,0],3) -> 0;
([0,1,3],3) -> 0;
([1,2,0],3) -> 0;
([],3) -> 0;
([2,1],1) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      case y1 of
        Z y2 -> 
          n

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.036443 false true

([1,3,3],0) -> 1;
([3,3,2],2) -> 2;
([],2) -> 0;
([],3) -> 0;
([],0) -> 0;
([1,3,2],0) -> 1;
([0,3],3) -> 0;
([2,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0544809999999 true true

([0,2,1],3) -> 0;
([1,0],2) -> 0;
([3],1) -> 0;
([],0) -> 0;
([3],0) -> 3;
([0],0) -> 0;
([1,3],3) -> 0;
([1,3,2],1) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0398339999999 true true

([1,2],3) -> 0;
([3,0,0],3) -> 0;
([],3) -> 0;
([2,1,3],3) -> 0;
([2,0,3],0) -> 2;
([],0) -> 0;
([],2) -> 0;
([2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          S (S (list_nth (#2.2 y1) (#2.1 y1)))

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
0.0609529999999 false false

([3,0],0) -> 3;
([0,0],1) -> 0;
([0],2) -> 0;
([],3) -> 0;
([0,3,2],1) -> 3;
([],1) -> 0;
([0,1],0) -> 0;
([1],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0312610000001 true true

([3],1) -> 0;
([3],3) -> 0;
([1,0,3],2) -> 3;
([3,0],2) -> 0;
([0],0) -> 0;
([1],0) -> 1;
([],1) -> 0;
([2],2) -> 0;
([1,3,3],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0383400000001 true true

([2,3,1],3) -> 0;
([1,3,3],2) -> 3;
([3,0],3) -> 0;
([3,0,2],2) -> 2;
([],0) -> 0;
([1],3) -> 0;
([2],2) -> 0;
([2],1) -> 0;
([],3) -> 0;

=================================
None
([0],2) -> 0;
([],3) -> 0;
([2,1,3],0) -> 2;
([0,1,1],1) -> 1;
([0,1,0],1) -> 1;
([2,3,2],1) -> 3;
([],1) -> 0;
([1,1,3],2) -> 3;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0721040000001 true true

([2,2,0],0) -> 2;
([2],3) -> 0;
([3],3) -> 0;
([1,3,1],0) -> 1;
([1,3],2) -> 0;
([0,2,3],0) -> 0;
([3,1,0],1) -> 1;
([2,2],2) -> 0;
([0,0,2],0) -> 0;

=================================
NOSOL

([1,2],2) -> 0;
([0],2) -> 0;
([1],3) -> 0;
([2,0,3],0) -> 2;
([2],3) -> 0;
([1,2,3],0) -> 1;
([1,1,0],0) -> 1;
([2,1,3],3) -> 0;
([],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0571729999999 false false

([0,1,3],0) -> 0;
([3],3) -> 0;
([0],2) -> 0;
([1],2) -> 0;
([1],3) -> 0;
([],2) -> 0;
([3,3,2],2) -> 2;
([2],3) -> 0;
([2,2,3],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.042907 true true

([0],1) -> 0;
([],2) -> 0;
([1,1,1],0) -> 1;
([2,0],3) -> 0;
([3,0],1) -> 0;
([],3) -> 0;
([3,3,2],0) -> 3;
([0,3,1],3) -> 0;
([0,2,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0467570000001 false false

([3,2,0],2) -> 0;
([],2) -> 0;
([3,0,1],1) -> 0;
([1,1,3],0) -> 1;
([1],2) -> 0;
([3,2],1) -> 2;
([3],0) -> 3;
([2],0) -> 2;
([3,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0356899999999 true true

([2,2],3) -> 0;
([2,3],2) -> 0;
([0],2) -> 0;
([0],0) -> 0;
([3,0,0],3) -> 0;
([1,1,0],0) -> 1;
([],3) -> 0;
([0],3) -> 0;
([3,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0415049999999 false false

([],1) -> 0;
([],2) -> 0;
([],0) -> 0;
([2,0,0],3) -> 0;
([0,3,2],1) -> 3;
([0],1) -> 0;
([0],3) -> 0;
([],3) -> 0;
([1,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          #2.1 y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          list_nth (#2.2 y1) n

        Cons y2 -> 
          #2.1 y2 in list_nth) : NatList -> Nat -> Nat)
0.047315 false false

([],0) -> 0;
([],1) -> 0;
([0,0],1) -> 0;
([1],1) -> 0;
([1,1],2) -> 0;
([],2) -> 0;
([0,1,3],0) -> 0;
([0,3],2) -> 0;
([2,0,2],0) -> 2;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0747019999999 false false

([2,3],2) -> 0;
([3,0],3) -> 0;
([0,2,1],3) -> 0;
([],1) -> 0;
([3],3) -> 0;
([1,3],0) -> 1;
([1,3,3],0) -> 1;
([],0) -> 0;
([],3) -> 0;
([2,2],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.08638 false false

([2,3,2],3) -> 0;
([1,1],2) -> 0;
([0,2],3) -> 0;
([],3) -> 0;
([0,2,2],1) -> 2;
([],2) -> 0;
([3],2) -> 0;
([3,0],2) -> 0;
([1,1,1],2) -> 1;
([],0) -> 0;

=================================
None
([2,2,1],1) -> 2;
([0],0) -> 0;
([1,2,0],2) -> 0;
([],1) -> 0;
([1,2,3],0) -> 1;
([],3) -> 0;
([1],3) -> 0;
([1,2,3],1) -> 2;
([0,3,2],2) -> 2;
([1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.039417 true true

([],2) -> 0;
([0,2],1) -> 2;
([],0) -> 0;
([2],3) -> 0;
([1,0,0],1) -> 0;
([2],0) -> 2;
([],1) -> 0;
([0],1) -> 0;
([0,1],0) -> 0;
([0,3,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0850640000001 true true

([2,0],3) -> 0;
([2],2) -> 0;
([0],2) -> 0;
([3],2) -> 0;
([2,2,2],3) -> 0;
([1,3],1) -> 3;
([0],3) -> 0;
([2,1],1) -> 1;
([2,2],3) -> 0;
([1,0],3) -> 0;

=================================
NOSOL

([0],1) -> 0;
([0,2,2],0) -> 0;
([2,1,3],3) -> 0;
([2,0],0) -> 2;
([3],3) -> 0;
([0],2) -> 0;
([1,2],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([2,1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0398789999999 false false

([],2) -> 0;
([3],1) -> 0;
([2],3) -> 0;
([1,0,1],1) -> 0;
([1],1) -> 0;
([],1) -> 0;
([0],1) -> 0;
([1,0],1) -> 0;
([3],3) -> 0;
([],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00381999999991 false false

([],2) -> 0;
([1,1],2) -> 0;
([1],3) -> 0;
([],3) -> 0;
([2,1],3) -> 0;
([0],0) -> 0;
([],1) -> 0;
([1],0) -> 1;
([2],2) -> 0;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0686490000001 false false

([1,3,1],0) -> 1;
([3],1) -> 0;
([],3) -> 0;
([0],2) -> 0;
([3,3],1) -> 3;
([1,1,3],1) -> 1;
([2,0],1) -> 0;
([],0) -> 0;
([3,1],0) -> 3;
([1,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.123431 true true

([2,0,1],3) -> 0;
([],1) -> 0;
([0,2],3) -> 0;
([],3) -> 0;
([],2) -> 0;
([3,3,3],1) -> 3;
([2,1,2],2) -> 2;
([0],1) -> 0;
([2,2],1) -> 2;
([3,1,3],2) -> 3;
([2,0,3],1) -> 0;

=================================
None
([0],1) -> 0;
([],2) -> 0;
([1],2) -> 0;
([],1) -> 0;
([3,0],2) -> 0;
([2],3) -> 0;
([1,1,2],2) -> 2;
([2,1,1],2) -> 1;
([0,3,2],0) -> 0;
([0,0],0) -> 0;
([3,1,0],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0426359999999 true true

([0,3],3) -> 0;
([2,0],0) -> 2;
([0],3) -> 0;
([3,0,3],3) -> 0;
([1],1) -> 0;
([],2) -> 0;
([0],0) -> 0;
([2,0],3) -> 0;
([],1) -> 0;
([],3) -> 0;
([2,3,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.058117 false false

([3,3],2) -> 0;
([],1) -> 0;
([3,1],1) -> 1;
([],2) -> 0;
([1],1) -> 0;
([0,0],2) -> 0;
([2,2],1) -> 2;
([],3) -> 0;
([3],2) -> 0;
([1,1],1) -> 1;
([1,2],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.036672 true true

([],2) -> 0;
([2,2,3],1) -> 2;
([3,2,1],3) -> 0;
([],0) -> 0;
([2,1,1],2) -> 1;
([2,0,0],3) -> 0;
([2,0,3],2) -> 3;
([0,1],3) -> 0;
([],3) -> 0;
([3,1],3) -> 0;
([0,3,0],2) -> 0;

=================================
None
([3],3) -> 0;
([],0) -> 0;
([1,2,0],1) -> 2;
([0],2) -> 0;
([1,1],0) -> 1;
([0,2,2],3) -> 0;
([3],0) -> 3;
([2,0],0) -> 2;
([0,0],0) -> 0;
([2],3) -> 0;
([2,0,0],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0566240000001 true true

([2,2,0],3) -> 0;
([],3) -> 0;
([],0) -> 0;
([0,3],0) -> 0;
([0],3) -> 0;
([3],2) -> 0;
([0,3],2) -> 0;
([0,3],3) -> 0;
([3,2,2],0) -> 3;
([1,1,0],3) -> 0;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0791859999999 false false

([3],2) -> 0;
([],1) -> 0;
([2,1],1) -> 1;
([3],0) -> 3;
([2,2,0],2) -> 0;
([2,0,2],2) -> 2;
([1,3,1],1) -> 3;
([],2) -> 0;
([3,2],3) -> 0;
([3,2,2],0) -> 3;
([0,2],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0532370000001 true true

([2],0) -> 2;
([],3) -> 0;
([3,0,1],3) -> 0;
([1,2,2],0) -> 1;
([1],0) -> 1;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.107173 false false

([1,3,2],3) -> 0;
([3,1],2) -> 0;
([3,1,3],2) -> 3;
([2,1],1) -> 1;
([1,1],3) -> 0;
([0,3,0],2) -> 0;
([1,0],2) -> 0;
([0,3],2) -> 0;
([1,1,2],1) -> 1;
([3,0,2],0) -> 3;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0355039999999 true true

([2,1],3) -> 0;
([3,0],2) -> 0;
([3],2) -> 0;
([1,2,1],1) -> 2;
([],0) -> 0;
([2,2],1) -> 2;
([],2) -> 0;
([0,3,2],1) -> 3;
([0,0],1) -> 0;
([1],0) -> 1;
([1,1,1],3) -> 0;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.10335 true true

([1,0],2) -> 0;
([2,2],2) -> 0;
([2,0],0) -> 2;
([1],3) -> 0;
([2,2,1],3) -> 0;
([0],1) -> 0;
([],1) -> 0;
([],2) -> 0;
([1,3],3) -> 0;
([2],3) -> 0;
([3,3,3],0) -> 3;
([0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0423129999999 false false

([3,1,3],0) -> 3;
([1,3],2) -> 0;
([1,0],0) -> 1;
([2,1,1],0) -> 2;
([3,3],3) -> 0;
([3],0) -> 3;
([],1) -> 0;
([2,0,3],3) -> 0;
([0,2,3],0) -> 0;
([3,2],2) -> 0;
([2,2],3) -> 0;
([2,3,3],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0688990000001 false false

([0],1) -> 0;
([1,0,1],0) -> 1;
([3,2],3) -> 0;
([3],3) -> 0;
([],1) -> 0;
([1],1) -> 0;
([1],0) -> 1;
([0,3,2],0) -> 0;
([2,1,3],0) -> 2;
([2,3],2) -> 0;
([0,0],3) -> 0;
([],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.046456 false false

([1,3],3) -> 0;
([0,1,0],1) -> 1;
([],1) -> 0;
([],2) -> 0;
([0,0],2) -> 0;
([0,1],3) -> 0;
([1,3],2) -> 0;
([3,1,1],0) -> 3;
([3,2,1],1) -> 2;
([0],0) -> 0;
([3],1) -> 0;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.110848 true true

([],0) -> 0;
([1,3],1) -> 3;
([2,0],0) -> 2;
([2,0],2) -> 0;
([0,3,3],0) -> 0;
([1,3],3) -> 0;
([2],1) -> 0;
([3,3],2) -> 0;
([1,3],0) -> 1;
([0,2,0],1) -> 2;
([1],2) -> 0;
([1,0],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0479499999999 true true

([],0) -> 0;
([1,1,3],3) -> 0;
([],1) -> 0;
([3,1,2],2) -> 2;
([3,0,3],2) -> 3;
([0],0) -> 0;
([],2) -> 0;
([2,2,2],0) -> 2;
([1,2,2],0) -> 1;
([],3) -> 0;
([3,1,0],3) -> 0;
([1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.116666 true true

([3,0,2],0) -> 3;
([3],1) -> 0;
([],0) -> 0;
([0,2,0],1) -> 2;
([0],0) -> 0;
([],3) -> 0;
([3,1,3],2) -> 3;
([3],3) -> 0;
([0,0],2) -> 0;
([1,1],1) -> 1;
([2,3],3) -> 0;
([],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.108746 true true

([0,1],0) -> 0;
([3],0) -> 3;
([1,3],0) -> 1;
([1],1) -> 0;
([0,1,0],1) -> 1;
([],2) -> 0;
([],1) -> 0;
([0,3,1],1) -> 3;
([0,1,2],0) -> 0;
([2],1) -> 0;
([0,0],1) -> 0;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0402349999999 true true

([1],2) -> 0;
([],2) -> 0;
([2],0) -> 2;
([2],3) -> 0;
([],1) -> 0;
([],0) -> 0;
([3,1,2],1) -> 1;
([3,2,1],2) -> 1;
([0],0) -> 0;
([],3) -> 0;
([3],3) -> 0;
([3,3],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.102576 true true

([3],3) -> 0;
([],2) -> 0;
([2,1,1],1) -> 1;
([0],0) -> 0;
([2,2,2],2) -> 2;
([3,2],3) -> 0;
([1],0) -> 1;
([],3) -> 0;
([3,0,3],2) -> 3;
([1,3],1) -> 3;
([0],2) -> 0;
([0,0],1) -> 0;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.038689 true true

([0,3],2) -> 0;
([0,3],3) -> 0;
([2,0],3) -> 0;
([1,2,3],2) -> 3;
([],2) -> 0;
([3],0) -> 3;
([],1) -> 0;
([1],1) -> 0;
([2],2) -> 0;
([1],0) -> 1;
([2,3],0) -> 2;
([2,3],2) -> 0;
([2,2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0385120000001 true true

([],3) -> 0;
([1],0) -> 1;
([0,3],0) -> 0;
([3,1,1],0) -> 3;
([2,2],1) -> 2;
([3,2],3) -> 0;
([1],1) -> 0;
([0],0) -> 0;
([2],2) -> 0;
([],1) -> 0;
([],2) -> 0;
([3,0,3],1) -> 0;
([1,1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0374959999999 true true

([0],3) -> 0;
([1,2,2],0) -> 1;
([0,1],3) -> 0;
([3],3) -> 0;
([],0) -> 0;
([1,2],0) -> 1;
([2],2) -> 0;
([1,0],1) -> 0;
([],1) -> 0;
([2,2],2) -> 0;
([2,3],3) -> 0;
([2,3,3],2) -> 3;
([3],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.111457 true true

([],0) -> 0;
([0],0) -> 0;
([3],0) -> 3;
([1,3],1) -> 3;
([1,2,3],3) -> 0;
([],1) -> 0;
([3,1,0],3) -> 0;
([],2) -> 0;
([1],2) -> 0;
([1],1) -> 0;
([2],0) -> 2;
([3,3,1],0) -> 3;
([1,0],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.117694 true true

([2,1,0],1) -> 1;
([3,3,1],2) -> 1;
([1,3],2) -> 0;
([0,3],2) -> 0;
([1,0],3) -> 0;
([],1) -> 0;
([0,2,2],1) -> 2;
([3],1) -> 0;
([0,2],0) -> 0;
([2,1,3],1) -> 1;
([1],1) -> 0;
([2,1],0) -> 2;
([2],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.044893 true true

([2,2],0) -> 2;
([1,2,2],0) -> 1;
([0,3,2],0) -> 0;
([1],2) -> 0;
([2],0) -> 2;
([1,0],0) -> 1;
([],1) -> 0;
([1],1) -> 0;
([1,1,0],1) -> 1;
([0],3) -> 0;
([2],3) -> 0;
([2,1],3) -> 0;
([0,0,0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.042297 true true

([0,2],3) -> 0;
([3,0],2) -> 0;
([],1) -> 0;
([1,0],3) -> 0;
([1],0) -> 1;
([1,1],1) -> 1;
([1,1],3) -> 0;
([3,1,3],0) -> 3;
([],0) -> 0;
([1,0,3],0) -> 1;
([1,0,1],2) -> 1;
([2,3,1],0) -> 2;
([2,2,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.124132 true true

([3,1,0],3) -> 0;
([3,0,3],3) -> 0;
([0,1,3],0) -> 0;
([1],0) -> 1;
([1,1,1],3) -> 0;
([],1) -> 0;
([],3) -> 0;
([],2) -> 0;
([0],0) -> 0;
([1,1],0) -> 1;
([3,0],2) -> 0;
([0,0,1],2) -> 1;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.113077 true true

([0,3],0) -> 0;
([2,3,3],3) -> 0;
([2],2) -> 0;
([3],1) -> 0;
([],1) -> 0;
([2],1) -> 0;
([3,0,2],1) -> 0;
([2,3,1],0) -> 2;
([],3) -> 0;
([1,3],2) -> 0;
([2,3],3) -> 0;
([],0) -> 0;
([0],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.105973 false false

([2,1],2) -> 0;
([3,0,2],1) -> 0;
([3,3],0) -> 3;
([0],1) -> 0;
([0,2],2) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([1],2) -> 0;
([3],3) -> 0;
([1,3,1],1) -> 3;
([3,0],0) -> 3;
([3,3],1) -> 3;
([0,2,0],2) -> 0;
([0,1,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0488049999999 true true

([2,2,1],0) -> 2;
([1,3],1) -> 3;
([],3) -> 0;
([0,2],2) -> 0;
([0,3,0],3) -> 0;
([0],2) -> 0;
([3,3],2) -> 0;
([0,0,1],3) -> 0;
([],1) -> 0;
([0,2,1],1) -> 2;
([3,3,2],3) -> 0;
([0,1,3],0) -> 0;
([],2) -> 0;
([2],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0426689999999 true true

([2,3],0) -> 2;
([2],1) -> 0;
([0],2) -> 0;
([1],0) -> 1;
([2,3],1) -> 3;
([1,3,2],3) -> 0;
([2,0],1) -> 0;
([3],0) -> 3;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([0],0) -> 0;
([2,0],3) -> 0;
([3],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.113799 true true

([0,2],3) -> 0;
([2,1],1) -> 1;
([],2) -> 0;
([3,3,2],0) -> 3;
([3,1,0],1) -> 1;
([2,0],0) -> 2;
([3],1) -> 0;
([2],0) -> 2;
([2],1) -> 0;
([0,1],1) -> 1;
([3],3) -> 0;
([],3) -> 0;
([0,1,2],0) -> 0;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.037687 true true

([0,1,2],1) -> 1;
([0],2) -> 0;
([2,3],3) -> 0;
([0,0],3) -> 0;
([3,0],3) -> 0;
([3],1) -> 0;
([0,1,1],0) -> 0;
([2],0) -> 2;
([],2) -> 0;
([1,2,0],0) -> 1;
([3,1,1],2) -> 1;
([],3) -> 0;
([1,0],0) -> 1;
([1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.041874 true true

([0],0) -> 0;
([3,3],2) -> 0;
([],3) -> 0;
([0,0],1) -> 0;
([3],2) -> 0;
([3,1,2],3) -> 0;
([1,3],3) -> 0;
([1,0,2],1) -> 0;
([],0) -> 0;
([],2) -> 0;
([1],2) -> 0;
([2,0,0],0) -> 2;
([2,3,1],3) -> 0;
([0,2],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.091302 false false

([],3) -> 0;
([0,2],3) -> 0;
([1],1) -> 0;
([3,3],0) -> 3;
([3,1,3],1) -> 1;
([0],3) -> 0;
([],1) -> 0;
([1,1],1) -> 1;
([0],2) -> 0;
([0],0) -> 0;
([1,3],3) -> 0;
([2,2],3) -> 0;
([0,2,2],0) -> 0;
([3],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.040045 true true

([3,1,0],0) -> 3;
([2,1],1) -> 1;
([1,1],0) -> 1;
([0,1,0],2) -> 0;
([],2) -> 0;
([2,3],1) -> 3;
([2,1,1],0) -> 2;
([0,3],3) -> 0;
([3,3,1],2) -> 1;
([3],1) -> 0;
([0],2) -> 0;
([1,3,3],2) -> 3;
([1,2,0],3) -> 0;
([],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.129582 true true

([2,3],1) -> 3;
([0,1,1],0) -> 0;
([2,1,3],0) -> 2;
([],3) -> 0;
([],2) -> 0;
([3],1) -> 0;
([3],2) -> 0;
([0],3) -> 0;
([0,2,2],3) -> 0;
([0,3,3],1) -> 3;
([2],0) -> 2;
([1,1],0) -> 1;
([1],0) -> 1;
([3,0],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.043005 true true

([1,0,2],1) -> 0;
([2,0],2) -> 0;
([1,0,0],1) -> 0;
([1,0,3],0) -> 1;
([0],0) -> 0;
([2,1,0],1) -> 1;
([],3) -> 0;
([0,2,1],0) -> 0;
([0,1,0],2) -> 0;
([0],3) -> 0;
([2,3,2],2) -> 2;
([],0) -> 0;
([2,1,1],1) -> 1;
([3,0,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.146211 true true

([],0) -> 0;
([1,2,2],2) -> 2;
([0],0) -> 0;
([2,2],2) -> 0;
([2],2) -> 0;
([2],0) -> 2;
([1,0,1],0) -> 1;
([3],2) -> 0;
([2,0],1) -> 0;
([3,1,3],2) -> 3;
([3,1,1],3) -> 0;
([1,1],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,2,1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.119102 true true

([3,1],2) -> 0;
([2],2) -> 0;
([3,0,0],2) -> 0;
([],2) -> 0;
([1,0],3) -> 0;
([3,3],1) -> 3;
([],1) -> 0;
([3,3],3) -> 0;
([0],0) -> 0;
([3],3) -> 0;
([],0) -> 0;
([2,3,1],1) -> 3;
([],3) -> 0;
([3,0],0) -> 3;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.103609 true true

([3,2,3],2) -> 3;
([3],1) -> 0;
([0],3) -> 0;
([2],2) -> 0;
([0],0) -> 0;
([],0) -> 0;
([],3) -> 0;
([0,1,2],2) -> 2;
([3,1],2) -> 0;
([],2) -> 0;
([2,2,0],1) -> 2;
([2,1,0],0) -> 2;
([1,2],0) -> 1;
([],1) -> 0;
([0,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.126087 true true

([1],0) -> 1;
([0],0) -> 0;
([2,3,2],1) -> 3;
([3,0],1) -> 0;
([],3) -> 0;
([1,0,1],3) -> 0;
([3,1,0],2) -> 0;
([2,0],0) -> 2;
([1,1,1],3) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([3,0],3) -> 0;
([0,0,3],2) -> 3;
([3,3],0) -> 3;
([2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0465790000001 true true

([0,3],2) -> 0;
([0],2) -> 0;
([3,0],1) -> 0;
([0,2],0) -> 0;
([],2) -> 0;
([1,1],3) -> 0;
([],3) -> 0;
([0,3,2],3) -> 0;
([2,3,2],2) -> 2;
([2],1) -> 0;
([],1) -> 0;
([1,2,2],0) -> 1;
([3],0) -> 3;
([],0) -> 0;
([3,2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.123587 true true

([2],0) -> 2;
([0,1,2],1) -> 1;
([1,3,3],0) -> 1;
([2,0,0],3) -> 0;
([1,0],0) -> 1;
([2,0,1],2) -> 1;
([1,2],1) -> 2;
([3,2],0) -> 3;
([0],3) -> 0;
([2,2],0) -> 2;
([3],2) -> 0;
([2,2,3],3) -> 0;
([],3) -> 0;
([1,0,2],0) -> 1;
([],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0520469999999 true true

([3,3],3) -> 0;
([],3) -> 0;
([0,1],0) -> 0;
([2,3,2],3) -> 0;
([3],1) -> 0;
([3,2,0],1) -> 2;
([1],2) -> 0;
([2,3],2) -> 0;
([],0) -> 0;
([3,0],3) -> 0;
([2],3) -> 0;
([0,3],3) -> 0;
([3,3,0],0) -> 3;
([1,2],3) -> 0;
([2],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.131298 true true

([3,0],2) -> 0;
([2,0],2) -> 0;
([1,2],1) -> 2;
([3,2],3) -> 0;
([2,0],1) -> 0;
([1,1],1) -> 1;
([0,0],3) -> 0;
([2,2,2],2) -> 2;
([2,1],2) -> 0;
([1],1) -> 0;
([2],0) -> 2;
([2,2],3) -> 0;
([2],3) -> 0;
([3,3,0],2) -> 0;
([],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.047094 true true

([3,2,3],0) -> 3;
([2],1) -> 0;
([0,0],1) -> 0;
([3,3,1],2) -> 1;
([2,2],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([3,3,0],1) -> 3;
([1],1) -> 0;
([0,1],0) -> 0;
([],3) -> 0;
([2],3) -> 0;
([0],2) -> 0;
([1],0) -> 1;
([3,1],0) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.113478 true true

([0,0,1],3) -> 0;
([1,0,2],1) -> 0;
([],0) -> 0;
([1],3) -> 0;
([2,0],3) -> 0;
([1,0],3) -> 0;
([3,0,1],0) -> 3;
([1],1) -> 0;
([3],0) -> 3;
([2,2],1) -> 2;
([3],1) -> 0;
([1,0],0) -> 1;
([0,0,1],2) -> 1;
([],1) -> 0;
([1,2,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.123699 true true

([3,0],2) -> 0;
([],2) -> 0;
([],3) -> 0;
([3],0) -> 3;
([],0) -> 0;
([],1) -> 0;
([0,3,3],0) -> 0;
([1],0) -> 1;
([1,0],3) -> 0;
([3,2],2) -> 0;
([1],2) -> 0;
([0,0],0) -> 0;
([2,1,3],2) -> 3;
([0,0],3) -> 0;
([3],1) -> 0;
([1,3],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.120934 true true

([2,2],2) -> 0;
([0,0],3) -> 0;
([],3) -> 0;
([0,1],1) -> 1;
([],0) -> 0;
([3,2],3) -> 0;
([2],1) -> 0;
([],1) -> 0;
([],2) -> 0;
([1,0],1) -> 0;
([0,0,0],1) -> 0;
([0,0],2) -> 0;
([0,2],0) -> 0;
([3,3,3],2) -> 3;
([2,3,2],2) -> 2;
([0,0],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.132599 true true

([],2) -> 0;
([],1) -> 0;
([3,1,1],2) -> 1;
([0,2,3],3) -> 0;
([1,2,0],0) -> 1;
([0],1) -> 0;
([2,0],2) -> 0;
([],0) -> 0;
([2,3,3],0) -> 2;
([3,2,1],0) -> 3;
([3,2],2) -> 0;
([1],1) -> 0;
([1],3) -> 0;
([1,1,3],0) -> 1;
([0,0],3) -> 0;
([3,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.142251 true true

([],3) -> 0;
([3,1],0) -> 3;
([1],1) -> 0;
([],2) -> 0;
([1,2],0) -> 1;
([2],2) -> 0;
([2],0) -> 2;
([0],0) -> 0;
([3],2) -> 0;
([],0) -> 0;
([2,0],3) -> 0;
([0,0,0],0) -> 0;
([2,3],3) -> 0;
([1,1,2],2) -> 2;
([3,1],2) -> 0;
([3,1,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.15262 true true

([3,2,1],3) -> 0;
([1,2],2) -> 0;
([0,3,1],3) -> 0;
([2,1],2) -> 0;
([0,2,0],0) -> 0;
([],0) -> 0;
([1],0) -> 1;
([1],2) -> 0;
([3,3],2) -> 0;
([],2) -> 0;
([0,3],2) -> 0;
([0,3,3],2) -> 3;
([],3) -> 0;
([3,2],2) -> 0;
([1,2,0],1) -> 2;
([2,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.130516 true true

([],3) -> 0;
([2,1,0],0) -> 2;
([],0) -> 0;
([2,1,1],2) -> 1;
([1,0],3) -> 0;
([2],0) -> 2;
([2,0,3],2) -> 3;
([0,3],3) -> 0;
([3,3],0) -> 3;
([0],1) -> 0;
([3],1) -> 0;
([],1) -> 0;
([2,3,3],2) -> 3;
([0,1],3) -> 0;
([],2) -> 0;
([3,0,3],2) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.117582 true true

([3],0) -> 3;
([2,2,1],1) -> 2;
([3],1) -> 0;
([],0) -> 0;
([1,2,1],2) -> 1;
([0],1) -> 0;
([1,0],1) -> 0;
([0,3,3],0) -> 0;
([0,3],0) -> 0;
([0,0,3],1) -> 0;
([2,2],2) -> 0;
([1],3) -> 0;
([2,1,1],2) -> 1;
([3,0],3) -> 0;
([2,2],0) -> 2;
([3,3],1) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.140074 true true

([0,2],3) -> 0;
([],1) -> 0;
([3,2],3) -> 0;
([2,2],3) -> 0;
([3],0) -> 3;
([2,2,1],3) -> 0;
([1],1) -> 0;
([2,1],0) -> 2;
([0,0,3],1) -> 0;
([],3) -> 0;
([2,0,3],2) -> 3;
([0],1) -> 0;
([],2) -> 0;
([2,2,3],2) -> 3;
([0,2],0) -> 0;
([1,2],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.098393 true true

([3,2,0],3) -> 0;
([],0) -> 0;
([3],0) -> 3;
([3],1) -> 0;
([0],2) -> 0;
([1,2],3) -> 0;
([1],2) -> 0;
([2,3],0) -> 2;
([3,2],1) -> 2;
([0],0) -> 0;
([2,0,1],3) -> 0;
([2],2) -> 0;
([1,0],2) -> 0;
([2,0,3],3) -> 0;
([],2) -> 0;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.244219 true true

([3,2],3) -> 0;
([1,3,2],2) -> 2;
([],1) -> 0;
([3,0,2],0) -> 3;
([0],1) -> 0;
([3,0],2) -> 0;
([3],0) -> 3;
([3,1],2) -> 0;
([2],0) -> 2;
([2],1) -> 0;
([],0) -> 0;
([1,2],1) -> 2;
([2,1],3) -> 0;
([3,3],0) -> 3;
([0,1],2) -> 0;
([],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.121377 true true

([2],0) -> 2;
([2,1],2) -> 0;
([],1) -> 0;
([0,0],1) -> 0;
([1,1],0) -> 1;
([],3) -> 0;
([3],3) -> 0;
([2,2,3],1) -> 2;
([3,1],2) -> 0;
([3,0,1],3) -> 0;
([2,2,1],1) -> 2;
([2],1) -> 0;
([1,0,0],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([2,1,2],0) -> 2;
([0,2],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.12381 true true

([3],3) -> 0;
([],2) -> 0;
([2,3],0) -> 2;
([1,3],1) -> 3;
([0,0],3) -> 0;
([2,3,2],0) -> 2;
([1],1) -> 0;
([],1) -> 0;
([3,3],1) -> 3;
([],0) -> 0;
([0,1],1) -> 1;
([1,1],1) -> 1;
([2],0) -> 2;
([0,3,2],1) -> 3;
([2,1,0],2) -> 0;
([2],1) -> 0;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.123738 true true

([0],0) -> 0;
([0],1) -> 0;
([],1) -> 0;
([0,1,0],3) -> 0;
([0,3],0) -> 0;
([],0) -> 0;
([],2) -> 0;
([2,3],1) -> 3;
([],3) -> 0;
([0,3],3) -> 0;
([2,1,1],3) -> 0;
([1,3,0],1) -> 3;
([2,2],3) -> 0;
([0],2) -> 0;
([2,2],1) -> 2;
([0,3,0],1) -> 3;
([0,2,1],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.129865 true true

([],2) -> 0;
([],0) -> 0;
([0,0],0) -> 0;
([1,1],3) -> 0;
([3,1,2],1) -> 1;
([],3) -> 0;
([1,1],0) -> 1;
([],1) -> 0;
([0,0],2) -> 0;
([3,2,1],3) -> 0;
([1],2) -> 0;
([2,3],2) -> 0;
([2,2],2) -> 0;
([3,0],0) -> 3;
([2,3,0],0) -> 2;
([3],1) -> 0;
([1,3],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.118117 true true

([1,0],0) -> 1;
([1,2],3) -> 0;
([],2) -> 0;
([0],2) -> 0;
([],3) -> 0;
([],1) -> 0;
([1,1],2) -> 0;
([1],1) -> 0;
([2],2) -> 0;
([0],1) -> 0;
([1,0,2],2) -> 2;
([2],3) -> 0;
([],0) -> 0;
([1,2,1],3) -> 0;
([0],0) -> 0;
([3,2],2) -> 0;
([0,1,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.120184 true true

([3],2) -> 0;
([3,0,0],1) -> 0;
([2,1],1) -> 1;
([1,2],1) -> 2;
([1,2,2],3) -> 0;
([3,2],0) -> 3;
([2],3) -> 0;
([0,0],1) -> 0;
([2],0) -> 2;
([1],0) -> 1;
([],3) -> 0;
([3,1],1) -> 1;
([1],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([0,3],0) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.130315 true true

([],3) -> 0;
([3,1,1],3) -> 0;
([2],2) -> 0;
([2,2,0],3) -> 0;
([1,0,0],0) -> 1;
([3,0,3],0) -> 3;
([],0) -> 0;
([0],3) -> 0;
([],2) -> 0;
([3],0) -> 3;
([1,2],2) -> 0;
([0],2) -> 0;
([0,0,2],1) -> 0;
([3,2],3) -> 0;
([2,2,2],0) -> 2;
([],1) -> 0;
([1,0],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.133967 false false

([],0) -> 0;
([1,3,3],2) -> 3;
([],3) -> 0;
([1,2,3],3) -> 0;
([3,3],0) -> 3;
([2],2) -> 0;
([1,3],0) -> 1;
([],2) -> 0;
([1,3],3) -> 0;
([1,2,0],3) -> 0;
([3,3],3) -> 0;
([2,3,0],3) -> 0;
([2,2],3) -> 0;
([3,3,3],2) -> 3;
([3,2],0) -> 3;
([0,1],1) -> 1;
([3,2],1) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.12931 true true

([],3) -> 0;
([0,2,0],0) -> 0;
([1,0],2) -> 0;
([0,2,3],3) -> 0;
([2],3) -> 0;
([2,2],1) -> 2;
([1,1,2],2) -> 2;
([0],2) -> 0;
([1],1) -> 0;
([],1) -> 0;
([0,0,2],1) -> 0;
([0,1],1) -> 1;
([3],0) -> 3;
([0,0],3) -> 0;
([3],1) -> 0;
([1,1],1) -> 1;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.047855 true true

([2,2],1) -> 2;
([],2) -> 0;
([1],0) -> 1;
([],3) -> 0;
([2,0,2],3) -> 0;
([2,0],0) -> 2;
([3,0,1],1) -> 0;
([3],2) -> 0;
([],0) -> 0;
([0],1) -> 0;
([0,0,3],2) -> 3;
([1,2,0],0) -> 1;
([0,3],3) -> 0;
([2,1],3) -> 0;
([0,1],3) -> 0;
([1,3],1) -> 3;
([1,1,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.161877 true true

([],3) -> 0;
([2,2],1) -> 2;
([1],2) -> 0;
([],0) -> 0;
([0,1,3],2) -> 3;
([1,1],1) -> 1;
([3,2,1],1) -> 2;
([0,0],2) -> 0;
([2],0) -> 2;
([3,0,1],2) -> 1;
([3],1) -> 0;
([1,3],3) -> 0;
([1,0,2],1) -> 0;
([3],0) -> 3;
([1],0) -> 1;
([3,2],0) -> 3;
([0,1],1) -> 1;
([0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.135745 true true

([],1) -> 0;
([],0) -> 0;
([],3) -> 0;
([1,3,1],3) -> 0;
([3,1,1],0) -> 3;
([0,0,2],0) -> 0;
([3,3],0) -> 3;
([3],0) -> 3;
([0,0],0) -> 0;
([3],2) -> 0;
([3],3) -> 0;
([],2) -> 0;
([2,2,0],0) -> 2;
([0,3],2) -> 0;
([0,1,2],2) -> 2;
([1],0) -> 1;
([2],0) -> 2;
([2,1],0) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.14438 true true

([1,0,1],1) -> 0;
([1,0],2) -> 0;
([],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([2,2,2],2) -> 2;
([3],0) -> 3;
([],3) -> 0;
([2,1],2) -> 0;
([2,1],1) -> 1;
([1],1) -> 0;
([3,0],3) -> 0;
([1],3) -> 0;
([0],2) -> 0;
([0,1],0) -> 0;
([3,1,2],1) -> 1;
([3,1,0],2) -> 0;
([2,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.11967 true true

([0,3],2) -> 0;
([],1) -> 0;
([2,3],3) -> 0;
([2,3],2) -> 0;
([0],0) -> 0;
([1],3) -> 0;
([0],3) -> 0;
([],3) -> 0;
([],0) -> 0;
([0,3],1) -> 3;
([2,0],0) -> 2;
([0],1) -> 0;
([0,0],1) -> 0;
([2,2,1],2) -> 1;
([],2) -> 0;
([1,1],0) -> 1;
([0,3,0],0) -> 0;
([1,1],1) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.119535 true true

([2,1],1) -> 1;
([2,3,1],0) -> 2;
([],2) -> 0;
([0,2,3],2) -> 3;
([1,2],1) -> 2;
([1,1,2],1) -> 1;
([1],2) -> 0;
([],0) -> 0;
([0,2,3],0) -> 0;
([],1) -> 0;
([1],0) -> 1;
([2,2],3) -> 0;
([2,0,0],0) -> 2;
([0,3,1],2) -> 1;
([0,3],2) -> 0;
([3,3,0],3) -> 0;
([1,0],3) -> 0;
([0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.15525 true true

([0,3],3) -> 0;
([1,0,1],1) -> 0;
([1,3],1) -> 3;
([1,3],2) -> 0;
([3,1],3) -> 0;
([2,1],2) -> 0;
([],0) -> 0;
([],1) -> 0;
([3,0,0],0) -> 3;
([1],0) -> 1;
([],2) -> 0;
([3,1,3],0) -> 3;
([1,2],3) -> 0;
([2],2) -> 0;
([1,2,0],0) -> 1;
([1],3) -> 0;
([],3) -> 0;
([1],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.13246 true true

([3,2,3],0) -> 3;
([0,1],2) -> 0;
([0,2,1],3) -> 0;
([],0) -> 0;
([0],3) -> 0;
([2,2,1],0) -> 2;
([1,2,0],1) -> 2;
([0,3,3],0) -> 0;
([1],1) -> 0;
([2,3],3) -> 0;
([2],0) -> 2;
([0,0],0) -> 0;
([1,3,1],1) -> 3;
([],1) -> 0;
([2],2) -> 0;
([],3) -> 0;
([],2) -> 0;
([0,0,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.14623 true true

([3,1],3) -> 0;
([3],1) -> 0;
([1],1) -> 0;
([0,2,1],1) -> 2;
([],1) -> 0;
([2],0) -> 2;
([3,3],1) -> 3;
([2,3],0) -> 2;
([3],2) -> 0;
([1],0) -> 1;
([1,3,0],3) -> 0;
([],2) -> 0;
([3,0,0],1) -> 0;
([0,2],3) -> 0;
([2,1,1],0) -> 2;
([0],3) -> 0;
([],3) -> 0;
([2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0500030000001 true true

([2],1) -> 0;
([3],1) -> 0;
([2,2],0) -> 2;
([3],3) -> 0;
([],3) -> 0;
([2],3) -> 0;
([1],0) -> 1;
([2,1,0],1) -> 1;
([1,0,2],2) -> 2;
([],1) -> 0;
([2,2],1) -> 2;
([0,2],3) -> 0;
([0,2],0) -> 0;
([],0) -> 0;
([2,2,2],3) -> 0;
([1],2) -> 0;
([0,2,1],0) -> 0;
([0,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.134487 true true

([0,2,3],1) -> 2;
([1,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([3,2,2],0) -> 3;
([1,0,0],0) -> 1;
([3,1],2) -> 0;
([],0) -> 0;
([0],1) -> 0;
([3,0],2) -> 0;
([0,2,1],0) -> 0;
([3],3) -> 0;
([0,0],1) -> 0;
([1,1],1) -> 1;
([],2) -> 0;
([3,1],1) -> 1;
([1,2,0],3) -> 0;
([3,1,2],2) -> 2;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.137047 true true

([0,0,0],3) -> 0;
([1,1],1) -> 1;
([0,1,3],2) -> 3;
([2],0) -> 2;
([1],0) -> 1;
([3,0,1],1) -> 0;
([],1) -> 0;
([1,2],0) -> 1;
([3,0,1],3) -> 0;
([1,0,2],2) -> 2;
([],2) -> 0;
([1],3) -> 0;
([0],3) -> 0;
([3],3) -> 0;
([2,2],2) -> 0;
([0,1],1) -> 1;
([0,2,0],3) -> 0;
([],0) -> 0;
([0,1,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.137276 true true

([0],1) -> 0;
([2,2,0],1) -> 2;
([],3) -> 0;
([0],2) -> 0;
([1,3,3],2) -> 3;
([2],3) -> 0;
([2,2,2],2) -> 2;
([1,0],2) -> 0;
([2,2],3) -> 0;
([3,3],3) -> 0;
([3,3],0) -> 3;
([1,2,0],1) -> 2;
([1,0,3],0) -> 1;
([1,3,0],0) -> 1;
([],2) -> 0;
([0,2],0) -> 0;
([3,3,1],2) -> 1;
([0,2,0],0) -> 0;
([1],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.061719 true true

([1,3,2],1) -> 3;
([0,2],0) -> 0;
([],0) -> 0;
([0],1) -> 0;
([2],0) -> 2;
([3],2) -> 0;
([],3) -> 0;
([1,2,1],1) -> 2;
([0,2,2],1) -> 2;
([1,0],2) -> 0;
([1],1) -> 0;
([0,3],1) -> 3;
([],2) -> 0;
([3,3],1) -> 3;
([3,3],3) -> 0;
([3,0,2],0) -> 3;
([2],3) -> 0;
([3,0,2],2) -> 2;
([2,1,3],2) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.152098 true true

([],0) -> 0;
([0],2) -> 0;
([0,2,1],2) -> 1;
([2,2],3) -> 0;
([],3) -> 0;
([0,1,0],2) -> 0;
([1,1,0],1) -> 1;
([1,1],0) -> 1;
([3],0) -> 3;
([3,0,2],1) -> 0;
([],2) -> 0;
([0],0) -> 0;
([2],0) -> 2;
([0,3,1],2) -> 1;
([2],3) -> 0;
([1],3) -> 0;
([],1) -> 0;
([0,0,3],3) -> 0;
([1,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.146185 true true

([2],3) -> 0;
([],2) -> 0;
([0],1) -> 0;
([0,1],0) -> 0;
([],0) -> 0;
([0,1,3],2) -> 3;
([1],2) -> 0;
([],1) -> 0;
([2,3],1) -> 3;
([],3) -> 0;
([2,2],1) -> 2;
([1,3],0) -> 1;
([1],0) -> 1;
([0,3,3],1) -> 3;
([0,3,3],0) -> 0;
([1],1) -> 0;
([1,1,3],0) -> 1;
([0,0],2) -> 0;
([1,2],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.134485 true true

([0],1) -> 0;
([],2) -> 0;
([2,3],3) -> 0;
([],1) -> 0;
([1,3],2) -> 0;
([3,2,0],1) -> 2;
([0],2) -> 0;
([0,3],3) -> 0;
([2,0,3],3) -> 0;
([2,3,3],0) -> 2;
([0],3) -> 0;
([0,0],3) -> 0;
([2,2,1],1) -> 2;
([],3) -> 0;
([1,3,1],0) -> 1;
([],0) -> 0;
([3],0) -> 3;
([2],3) -> 0;
([0,2,0],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.153728 true true

([],1) -> 0;
([1],0) -> 1;
([1],1) -> 0;
([0,3],0) -> 0;
([2],2) -> 0;
([3],1) -> 0;
([0,0,2],1) -> 0;
([1,0,1],3) -> 0;
([0],1) -> 0;
([1,1,1],1) -> 1;
([3,3],3) -> 0;
([1],2) -> 0;
([0],2) -> 0;
([0,1,1],1) -> 1;
([0],0) -> 0;
([3],3) -> 0;
([],0) -> 0;
([2,0],1) -> 0;
([2],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.145872 true true

([2],3) -> 0;
([1,2,3],1) -> 2;
([3],2) -> 0;
([],1) -> 0;
([2,2],1) -> 2;
([],3) -> 0;
([0],1) -> 0;
([2,0],3) -> 0;
([2,2,0],0) -> 2;
([3],3) -> 0;
([],2) -> 0;
([2],1) -> 0;
([3,0,3],2) -> 3;
([0,1,1],2) -> 1;
([2,0],1) -> 0;
([0,0,1],0) -> 0;
([1],0) -> 1;
([1,2,1],3) -> 0;
([1,1,1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.048945 true true

([1],3) -> 0;
([],3) -> 0;
([3],2) -> 0;
([2],2) -> 0;
([1,2,3],1) -> 2;
([2,2,0],2) -> 0;
([2,0,0],2) -> 0;
([],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([2,1],1) -> 1;
([0,1,3],0) -> 0;
([2],3) -> 0;
([1,2,0],0) -> 1;
([3],1) -> 0;
([0,2],1) -> 2;
([3],0) -> 3;
([3,0],1) -> 0;
([3,3],1) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.140199 true true

([3,1,1],1) -> 1;
([1,0,1],2) -> 1;
([2,3],0) -> 2;
([2,2],2) -> 0;
([3],1) -> 0;
([],0) -> 0;
([0,3,1],3) -> 0;
([],2) -> 0;
([1,2,0],2) -> 0;
([1,0],2) -> 0;
([3,2,0],3) -> 0;
([2],1) -> 0;
([0,1],2) -> 0;
([0,2,3],3) -> 0;
([1,2],1) -> 2;
([2,1,2],0) -> 2;
([0,3],0) -> 0;
([1,1],3) -> 0;
([2,3,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.144715 true true

([3],3) -> 0;
([],3) -> 0;
([],2) -> 0;
([0,2],2) -> 0;
([2],1) -> 0;
([0,0,3],2) -> 3;
([2],3) -> 0;
([3,0],0) -> 3;
([],1) -> 0;
([0,3],0) -> 0;
([2,2],1) -> 2;
([0,2],1) -> 2;
([],0) -> 0;
([3,2,1],0) -> 3;
([0],1) -> 0;
([2],0) -> 2;
([1,1,0],1) -> 1;
([3],2) -> 0;
([0],2) -> 0;
([2,0,3],2) -> 3;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.147722 true true

([1],3) -> 0;
([2,0],3) -> 0;
([1,1,2],3) -> 0;
([2,3],0) -> 2;
([],0) -> 0;
([3],0) -> 3;
([2,2],0) -> 2;
([0,3],0) -> 0;
([3,1,0],1) -> 1;
([3,1],0) -> 3;
([1,0,1],2) -> 1;
([3,3,1],1) -> 3;
([0,0,2],3) -> 0;
([0],1) -> 0;
([3,2],2) -> 0;
([0,2,2],3) -> 0;
([3,0,3],2) -> 3;
([2,2],3) -> 0;
([0,2,2],1) -> 2;
([0,0],1) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.119553 true true

([],0) -> 0;
([],1) -> 0;
([1],2) -> 0;
([1],0) -> 1;
([2],3) -> 0;
([0,3],3) -> 0;
([0],1) -> 0;
([3,1],3) -> 0;
([2],2) -> 0;
([0,1,1],3) -> 0;
([],3) -> 0;
([0],2) -> 0;
([2,0,0],1) -> 0;
([3],0) -> 3;
([3,2],2) -> 0;
([2,2],0) -> 2;
([2,1],1) -> 1;
([3,3,1],2) -> 1;
([1,0],1) -> 0;
([3,2,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.136809 true true

([],3) -> 0;
([0],3) -> 0;
([2,3,1],1) -> 3;
([0],2) -> 0;
([1,3,3],2) -> 3;
([0,0,1],3) -> 0;
([3,0],2) -> 0;
([0,1,2],1) -> 1;
([2,3],0) -> 2;
([0,0],2) -> 0;
([2],2) -> 0;
([0,2],3) -> 0;
([2,0],0) -> 2;
([1,0],1) -> 0;
([],0) -> 0;
([1,0],3) -> 0;
([0,2,1],0) -> 0;
([2],0) -> 2;
([],2) -> 0;
([1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.326867 true true

([0,0,1],2) -> 1;
([],0) -> 0;
([0,3,2],3) -> 0;
([3],0) -> 3;
([2,2,3],1) -> 2;
([1,2,0],3) -> 0;
([2,3],2) -> 0;
([0],1) -> 0;
([3,3,0],1) -> 3;
([1],3) -> 0;
([2,2,1],0) -> 2;
([2],1) -> 0;
([1],0) -> 1;
([],3) -> 0;
([1,0,0],3) -> 0;
([1,1],0) -> 1;
([0,1,3],2) -> 3;
([0,1,1],2) -> 1;
([0,3],1) -> 3;
([1,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.356699 true true

([0,2,1],2) -> 1;
([0,2,0],0) -> 0;
([],0) -> 0;
([0],0) -> 0;
([],2) -> 0;
([3],3) -> 0;
([0,0],3) -> 0;
([1,3,3],2) -> 3;
([2,3],2) -> 0;
([1,0,1],0) -> 1;
([3,3],2) -> 0;
([0],2) -> 0;
([2,2,3],0) -> 2;
([2],3) -> 0;
([2,2],1) -> 2;
([2,3],1) -> 3;
([2,0],3) -> 0;
([],3) -> 0;
([],1) -> 0;
([0,1,3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.283449 true true

([],1) -> 0;
([2,1],2) -> 0;
([],0) -> 0;
([1,2],2) -> 0;
([],3) -> 0;
([3,0,1],1) -> 0;
([0,1],3) -> 0;
([1,2,0],0) -> 1;
([1,3],2) -> 0;
([0,3],1) -> 3;
([0,0],3) -> 0;
([0,2],3) -> 0;
([3],2) -> 0;
([2,1],1) -> 1;
([0,2,1],2) -> 1;
([1],0) -> 1;
([3],3) -> 0;
([1,2],3) -> 0;
([1,2],0) -> 1;
([3,0],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.216248 true true

([],3) -> 0;
([0,0,2],1) -> 0;
([],2) -> 0;
([2,1,3],2) -> 3;
([3],0) -> 3;
([1,1,2],0) -> 1;
([],0) -> 0;
([2,3],0) -> 2;
([1],1) -> 0;
([2,1,2],3) -> 0;
([2,0],3) -> 0;
([0],1) -> 0;
([3,0],3) -> 0;
([0],2) -> 0;
([2,3,0],1) -> 3;
([3],2) -> 0;
([3,0,2],1) -> 0;
([3,3,0],3) -> 0;
([3,0],0) -> 3;
([3],3) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.242102 true true

([3,1],1) -> 1;
([0,2],1) -> 2;
([1,0,3],1) -> 0;
([2],0) -> 2;
([2],2) -> 0;
([0,1,3],3) -> 0;
([2,1],0) -> 2;
([2,3],1) -> 3;
([3,3],3) -> 0;
([0],3) -> 0;
([],2) -> 0;
([2],3) -> 0;
([0,1],2) -> 0;
([],3) -> 0;
([1,3,1],1) -> 3;
([1,1,2],0) -> 1;
([0],0) -> 0;
([0],1) -> 0;
([],0) -> 0;
([1,1],0) -> 1;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.316393 true true

([],1) -> 0;
([0,3,3],3) -> 0;
([],0) -> 0;
([2],0) -> 2;
([1,0],2) -> 0;
([0,2],3) -> 0;
([2],3) -> 0;
([0,1,3],0) -> 0;
([2,2],1) -> 2;
([1,3,0],1) -> 3;
([2],2) -> 0;
([1],2) -> 0;
([],2) -> 0;
([0,1,1],0) -> 0;
([],3) -> 0;
([3,0,2],0) -> 3;
([1],1) -> 0;
([3,1,3],1) -> 1;
([0,2,0],2) -> 0;
([0,1],2) -> 0;

=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.497986 true true

