([0,0],2) -> [0,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (S (S (x . 1)), x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         f (Un_Cons (x . 0) . 1, Un_Cons (x . 0) . 0))

11.4109 false

([],1) -> [1];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0068 false

([],0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0018 false

([1,2],2) -> [1,2,2];

=================================
None
([0,3,2],1) -> [0,3,2,1];

=================================
None
([2,1],2) -> [2,1,2];

=================================
None
([],2) -> [2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0208 false

([1,0],1) -> [1,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (S (x . 1), x . 0)
      | Cons _ -> Cons (x . 1, f (Un_Cons (x . 0) . 1, 0))

2.9406 false

([],2) -> [2];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0188 false

([0,0],3) -> [0,0,3];

=================================
None
([2,0,3],3) -> [2,0,3,3];
([0,2],2) -> [0,2,2];

=================================
None
([1,0],3) -> [1,0,3];
([],3) -> [3];

=================================
None
([],0) -> [0];
([0,0],1) -> [0,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5474 true

([3],1) -> [3,1];
([0],3) -> [0,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Un_Cons (x . 0) . 1))

0.1748 false

([0,1,1],1) -> [0,1,1,1];
([3,3],3) -> [3,3,3];

=================================
None
([2,3,2],2) -> [2,3,2,2];
([2,1],1) -> [2,1,1];

=================================
None
([],3) -> [3];
([3,2,0],0) -> [3,2,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3532 true

([2,1,2],1) -> [2,1,2,1];
([3,2],0) -> [3,2,0];

=================================
None
([3],2) -> [3,2];
([],1) -> [1];

=================================
None
([3,1,1],3) -> [3,1,1,3];
([],0) -> [0];

=================================
None
([3,3],1) -> [3,3,1];
([0],2) -> [0,2];
([1,3,1],3) -> [1,3,1,3];

=================================
None
([],2) -> [2];
([2,0,0],0) -> [2,0,0,0];
([3],0) -> [3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1700 true

([3,0,2],1) -> [3,0,2,1];
([],1) -> [1];
([0,2],1) -> [0,2,1];

=================================
None
([],1) -> [1];
([2],3) -> [2,3];
([1],3) -> [1,3];

=================================
None
([0],3) -> [0,3];
([2],3) -> [2,3];
([2,2,1],1) -> [2,2,1,1];

=================================
None
([],1) -> [1];
([0,2,3],3) -> [0,2,3,3];
([2,1,3],2) -> [2,1,3,2];

=================================
None
([1],0) -> [1,0];
([3],2) -> [3,2];
([],3) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0440 true

([3,1],2) -> [3,1,2];
([],3) -> [3];
([3],0) -> [3,0];

=================================
None
([2],1) -> [2,1];
([],3) -> [3];
([2,2,2],0) -> [2,2,2,0];

=================================
None
([0,3],0) -> [0,3,0];
([1],3) -> [1,3];
([3],1) -> [3,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1614 true

([2],0) -> [2,0];
([],3) -> [3];
([1,3,0],0) -> [1,3,0,0];
([1],3) -> [1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0415 true

([3],1) -> [3,1];
([1,1,1],2) -> [1,1,1,2];
([],0) -> [0];
([1,2],2) -> [1,2,2];

=================================
None
([1],0) -> [1,0];
([3,1,1],1) -> [3,1,1,1];
([3,3,1],0) -> [3,3,1,0];
([],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.9361 true

([3,1],1) -> [3,1,1];
([1,0],2) -> [1,0,2];
([3,1],0) -> [3,1,0];
([2,0],3) -> [2,0,3];

=================================
None
([2,2,3],1) -> [2,2,3,1];
([0,3,1],2) -> [0,3,1,2];
([2,1,0],1) -> [2,1,0,1];
([1,1],2) -> [1,1,2];

=================================
None
([],3) -> [3];
([1],1) -> [1,1];
([1,0,1],0) -> [1,0,1,0];
([3,2],1) -> [3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2250 true

([1,1],2) -> [1,1,2];
([3],0) -> [3,0];
([0],0) -> [0,0];
([],1) -> [1];

=================================
None
([1,2,1],3) -> [1,2,1,3];
([],3) -> [3];
([],0) -> [0];
([1,2,2],2) -> [1,2,2,2];

=================================
None
([],1) -> [1];
([2,3],3) -> [2,3,3];
([1],2) -> [1,2];
([2,0],0) -> [2,0,0];

=================================
None
([0],2) -> [0,2];
([2],0) -> [2,0];
([1,2],0) -> [1,2,0];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9537 true

([1,3,3],0) -> [1,3,3,0];
([2],1) -> [2,1];
([2,2],3) -> [2,2,3];
([2],0) -> [2,0];
([2,2,2],2) -> [2,2,2,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.2374 true

([2,1,2],1) -> [2,1,2,1];
([],2) -> [2];
([],0) -> [0];
([1,1],0) -> [1,1,0];
([1,2],3) -> [1,2,3];

=================================
None
([0,2],2) -> [0,2,2];
([1],0) -> [1,0];
([2,3,3],2) -> [2,3,3,2];
([1],2) -> [1,2];
([2,2],2) -> [2,2,2];

=================================
None
([3],2) -> [3,2];
([0],1) -> [0,1];
([3,0],1) -> [3,0,1];
([2,2],0) -> [2,2,0];
([0,3,3],2) -> [0,3,3,2];

=================================
None
([0,0,2],1) -> [0,0,2,1];
([3],1) -> [3,1];
([],3) -> [3];
([3],2) -> [3,2];
([2,1],2) -> [2,1,2];

=================================
None
([0,3],3) -> [0,3,3];
([3,3,0],1) -> [3,3,0,1];
([1,1],3) -> [1,1,3];
([2],3) -> [2,3];
([],2) -> [2];

=================================
None
([1,3],3) -> [1,3,3];
([1,2],1) -> [1,2,1];
([3,1,2],0) -> [3,1,2,0];
([0,3],2) -> [0,3,2];
([],1) -> [1];

=================================
None
([3,2,3],0) -> [3,2,3,0];
([2],1) -> [2,1];
([],3) -> [3];
([1,0],3) -> [1,0,3];
([1,3],2) -> [1,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

3.7519 true

([0,3,1],2) -> [0,3,1,2];
([1],2) -> [1,2];
([3,1,0],3) -> [3,1,0,3];
([1,3,0],2) -> [1,3,0,2];
([0,3,3],0) -> [0,3,3,0];

=================================
None
([2,0,3],0) -> [2,0,3,0];
([],3) -> [3];
([1],0) -> [1,0];
([3],0) -> [3,0];
([1],1) -> [1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8376 true

([],1) -> [1];
([1,0],2) -> [1,0,2];
([1,3],2) -> [1,3,2];
([1,3],1) -> [1,3,1];
([],2) -> [2];
([0,2],0) -> [0,2,0];

=================================
None
([3,0],3) -> [3,0,3];
([],3) -> [3];
([2],2) -> [2,2];
([0,2],3) -> [0,2,3];
([2,1,0],3) -> [2,1,0,3];
([3,1,1],2) -> [3,1,1,2];

=================================
None
([2,3],1) -> [2,3,1];
([0],3) -> [0,3];
([0,2,3],3) -> [0,2,3,3];
([0,3,0],1) -> [0,3,0,1];
([3,1,0],2) -> [3,1,0,2];
([0,3],3) -> [0,3,3];

=================================
None
([3],3) -> [3,3];
([3,3],2) -> [3,3,2];
([1,3],3) -> [1,3,3];
([0],3) -> [0,3];
([2,3],0) -> [2,3,0];
([1],0) -> [1,0];

=================================
None
([1,1],3) -> [1,1,3];
([0,2],3) -> [0,2,3];
([0,1],0) -> [0,1,0];
([2],3) -> [2,3];
([],1) -> [1];
([3,3],0) -> [3,3,0];

=================================
None
([3,3,0],3) -> [3,3,0,3];
([0,2],1) -> [0,2,1];
([3],3) -> [3,3];
([],2) -> [2];
([3,0,2],1) -> [3,0,2,1];
([0],2) -> [0,2];

=================================
None
([0,1],2) -> [0,1,2];
([1],2) -> [1,2];
([],3) -> [3];
([2,3],0) -> [2,3,0];
([1,1,2],3) -> [1,1,2,3];
([1],1) -> [1,1];

=================================
None
([0,2,2],2) -> [0,2,2,2];
([],3) -> [3];
([2,0,2],1) -> [2,0,2,1];
([1,2],2) -> [1,2,2];
([3,3,3],3) -> [3,3,3,3];
([],1) -> [1];

=================================
None
([],3) -> [3];
([2,3,2],2) -> [2,3,2,2];
([1,1,3],2) -> [1,1,3,2];
([3,0],0) -> [3,0,0];
([0,2,3],3) -> [0,2,3,3];
([1],0) -> [1,0];

=================================
None
([1,2,2],0) -> [1,2,2,0];
([2],2) -> [2,2];
([0],1) -> [0,1];
([0,0,1],1) -> [0,0,1,1];
([2,1],0) -> [2,1,0];
([3,3,1],1) -> [3,3,1,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2378 true

([2,0],0) -> [2,0,0];
([3,2],0) -> [3,2,0];
([0,2,2],2) -> [0,2,2,2];
([],0) -> [0];
([1,1,0],2) -> [1,1,0,2];
([],1) -> [1];
([],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3974 true

([3],0) -> [3,0];
([],2) -> [2];
([3,1],2) -> [3,1,2];
([2,2,0],0) -> [2,2,0,0];
([1],3) -> [1,3];
([3],2) -> [3,2];
([0,3,3],0) -> [0,3,3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0373 true

([2],2) -> [2,2];
([1,3],0) -> [1,3,0];
([1,0,0],1) -> [1,0,0,1];
([],1) -> [1];
([2],3) -> [2,3];
([3],3) -> [3,3];
([1],3) -> [1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.2329 true

([],2) -> [2];
([2,0],1) -> [2,0,1];
([2,0],2) -> [2,0,2];
([],0) -> [0];
([3,0],3) -> [3,0,3];
([3,3],0) -> [3,3,0];
([3,2],3) -> [3,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

43.0930 true

([0],0) -> [0,0];
([1,3],1) -> [1,3,1];
([1],1) -> [1,1];
([2,3,2],3) -> [2,3,2,3];
([],3) -> [3];
([3],2) -> [3,2];
([],2) -> [2];

=================================
None
([3,0],3) -> [3,0,3];
([1,3],3) -> [1,3,3];
([0],2) -> [0,2];
([0],3) -> [0,3];
([2],1) -> [2,1];
([],1) -> [1];
([],2) -> [2];

=================================
None
([1,3],1) -> [1,3,1];
([1],3) -> [1,3];
([3,2,1],0) -> [3,2,1,0];
([],1) -> [1];
([1,3,2],1) -> [1,3,2,1];
([2],0) -> [2,0];
([3,1],0) -> [3,1,0];

=================================
None
([0],3) -> [0,3];
([],3) -> [3];
([1,2,0],2) -> [1,2,0,2];
([0],0) -> [0,0];
([1],2) -> [1,2];
([],0) -> [0];
([2],3) -> [2,3];

=================================
None
([2,3],2) -> [2,3,2];
([2,2,1],1) -> [2,2,1,1];
([1,1],3) -> [1,1,3];
([],0) -> [0];
([0,2,3],1) -> [0,2,3,1];
([0],2) -> [0,2];
([0,0,0],2) -> [0,0,0,2];

=================================
None
([],0) -> [0];
([0,0,1],2) -> [0,0,1,2];
([2,2],1) -> [2,2,1];
([2,0,2],0) -> [2,0,2,0];
([0,3,0],0) -> [0,3,0,0];
([],3) -> [3];
([2,2,1],1) -> [2,2,1,1];

=================================
None
([2,0],3) -> [2,0,3];
([3,0],1) -> [3,0,1];
([],0) -> [0];
([0],1) -> [0,1];
([3,1],1) -> [3,1,1];
([1,1],0) -> [1,1,0];
([3,0,2],1) -> [3,0,2,1];
([3,3,1],3) -> [3,3,1,3];

=================================
None
([0,1,2],2) -> [0,1,2,2];
([],0) -> [0];
([1],3) -> [1,3];
([2,0],2) -> [2,0,2];
([2,0,2],2) -> [2,0,2,2];
([3,1],2) -> [3,1,2];
([3],3) -> [3,3];
([1],2) -> [1,2];

=================================
None
([1],1) -> [1,1];
([],0) -> [0];
([],2) -> [2];
([2],3) -> [2,3];
([3,3,2],1) -> [3,3,2,1];
([],1) -> [1];
([3,0,0],0) -> [3,0,0,0];
([0,1],2) -> [0,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

29.4391 true

([1],3) -> [1,3];
([1,1,1],1) -> [1,1,1,1];
([],0) -> [0];
([],3) -> [3];
([1,2],0) -> [1,2,0];
([2],0) -> [2,0];
([3,0],3) -> [3,0,3];
([0,3],3) -> [0,3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.5787 true

([1],3) -> [1,3];
([],2) -> [2];
([2,3],1) -> [2,3,1];
([0,1],2) -> [0,1,2];
([2,0],2) -> [2,0,2];
([0,1,1],1) -> [0,1,1,1];
([3],1) -> [3,1];
([0,0,3],3) -> [0,0,3,3];

=================================
None
([3],1) -> [3,1];
([1,2],3) -> [1,2,3];
([2],3) -> [2,3];
([2,2],0) -> [2,2,0];
([],1) -> [1];
([1],3) -> [1,3];
([0,1],2) -> [0,1,2];
([1,3,3],0) -> [1,3,3,0];

=================================
None
([1],1) -> [1,1];
([2,2],0) -> [2,2,0];
([1,3],1) -> [1,3,1];
([0,2],3) -> [0,2,3];
([3,1,0],2) -> [3,1,0,2];
([0],2) -> [0,2];
([2,2,3],2) -> [2,2,3,2];
([],3) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> (match x . 1 with
                    | O _ -> Cons (S (x . 1), x . 0)
                    | S _ -> Cons (x . 1, x . 0))
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0,
                                       Cons (x . 1, Un_Cons (x . 0) . 1))
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.6406 false

([0],3) -> [0,3];
([1,1,3],0) -> [1,1,3,0];
([3],3) -> [3,3];
([0,0],0) -> [0,0,0];
([0,3],1) -> [0,3,1];
([3],2) -> [3,2];
([1,2,2],3) -> [1,2,2,3];
([2,1],1) -> [2,1,1];

=================================
None
([1,0,3],1) -> [1,0,3,1];
([0],3) -> [0,3];
([1,1,1],2) -> [1,1,1,2];
([3],3) -> [3,3];
([3,3],2) -> [3,3,2];
([3],2) -> [3,2];
([2,0,0],0) -> [2,0,0,0];
([2,1],0) -> [2,1,0];

=================================
None
([2],3) -> [2,3];
([1,1,0],3) -> [1,1,0,3];
([2,1],0) -> [2,1,0];
([0],2) -> [0,2];
([0],1) -> [0,1];
([3,3,0],3) -> [3,3,0,3];
([1,3],2) -> [1,3,2];
([3,1],0) -> [3,1,0];

=================================
None
([0],3) -> [0,3];
([3],1) -> [3,1];
([2],0) -> [2,0];
([0,3],1) -> [0,3,1];
([],2) -> [2];
([3,0],3) -> [3,0,3];
([0,0,3],3) -> [0,0,3,3];
([3],2) -> [3,2];
([2,3],2) -> [2,3,2];

=================================
None
([],0) -> [0];
([],3) -> [3];
([1,2,1],1) -> [1,2,1,1];
([0,1],2) -> [0,1,2];
([],2) -> [2];
([1,1],1) -> [1,1,1];
([],1) -> [1];
([3,3],1) -> [3,3,1];
([1],1) -> [1,1];

=================================
None
([1,3],3) -> [1,3,3];
([0,2],2) -> [0,2,2];
([],1) -> [1];
([0,3,0],0) -> [0,3,0,0];
([1,0,3],1) -> [1,0,3,1];
([2],3) -> [2,3];
([2],2) -> [2,2];
([2,0],1) -> [2,0,1];
([1],0) -> [1,0];

=================================
None
([2,1],0) -> [2,1,0];
([1],3) -> [1,3];
([],1) -> [1];
([3],0) -> [3,0];
([2,0,1],1) -> [2,0,1,1];
([1,3,3],2) -> [1,3,3,2];
([1,0,2],0) -> [1,0,2,0];
([2],2) -> [2,2];
([3,2,2],3) -> [3,2,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1979 true

([3,1,3],2) -> [3,1,3,2];
([1],3) -> [1,3];
([0,1],2) -> [0,1,2];
([2,3],0) -> [2,3,0];
([],2) -> [2];
([1,1],1) -> [1,1,1];
([1],1) -> [1,1];
([3,3],3) -> [3,3,3];
([],0) -> [0];

=================================
None
([0,0],1) -> [0,0,1];
([3,0,0],1) -> [3,0,0,1];
([],2) -> [2];
([1,3],2) -> [1,3,2];
([0],2) -> [0,2];
([0,1],2) -> [0,1,2];
([0],1) -> [0,1];
([],1) -> [1];
([3,3],0) -> [3,3,0];

=================================
None
([1,0],3) -> [1,0,3];
([1,1],1) -> [1,1,1];
([0,3,0],2) -> [0,3,0,2];
([3],0) -> [3,0];
([0,3,2],1) -> [0,3,2,1];
([3,0,2],3) -> [3,0,2,3];
([1,2,2],2) -> [1,2,2,2];
([0,2,2],0) -> [0,2,2,0];
([2,3,0],0) -> [2,3,0,0];

=================================
None
([3,1],0) -> [3,1,0];
([],2) -> [2];
([],3) -> [3];
([2,0,2],2) -> [2,0,2,2];
([1,0,3],0) -> [1,0,3,0];
([3],1) -> [3,1];
([2],3) -> [2,3];
([2],1) -> [2,1];
([1],2) -> [1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1522 true

([1],3) -> [1,3];
([1,2],0) -> [1,2,0];
([2,0,1],2) -> [2,0,1,2];
([2],2) -> [2,2];
([3,1],1) -> [3,1,1];
([0],3) -> [0,3];
([2,3],2) -> [2,3,2];
([2,0],2) -> [2,0,2];
([0,3],1) -> [0,3,1];

=================================
None
([1,1],3) -> [1,1,3];
([0],0) -> [0,0];
([1],0) -> [1,0];
([2,2],3) -> [2,2,3];
([2],0) -> [2,0];
([],2) -> [2];
([3],0) -> [3,0];
([2,1,3],1) -> [2,1,3,1];
([0,1],1) -> [0,1,1];

=================================
None
([],1) -> [1];
([3],3) -> [3,3];
([3,3],3) -> [3,3,3];
([3,1],0) -> [3,1,0];
([0],2) -> [0,2];
([0,2],3) -> [0,2,3];
([2,2],2) -> [2,2,2];
([1,1],1) -> [1,1,1];
([1],3) -> [1,3];
([],2) -> [2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1750 true

([0,3,1],3) -> [0,3,1,3];
([1,2],3) -> [1,2,3];
([1],3) -> [1,3];
([2],0) -> [2,0];
([3,0,1],2) -> [3,0,1,2];
([1,0],0) -> [1,0,0];
([3,0,0],0) -> [3,0,0,0];
([],1) -> [1];
([0,3,0],2) -> [0,3,0,2];
([],3) -> [3];

=================================
None
([0,3],3) -> [0,3,3];
([1],3) -> [1,3];
([2],2) -> [2,2];
([0],0) -> [0,0];
([0,2],3) -> [0,2,3];
([],2) -> [2];
([0,2,2],1) -> [0,2,2,1];
([0],3) -> [0,3];
([3],2) -> [3,2];
([0],2) -> [0,2];

=================================
None
([0,0,1],2) -> [0,0,1,2];
([0,3,2],1) -> [0,3,2,1];
([],0) -> [0];
([3],2) -> [3,2];
([],1) -> [1];
([3,2,3],0) -> [3,2,3,0];
([1,1],3) -> [1,1,3];
([0,0],0) -> [0,0,0];
([],3) -> [3];
([1,1,0],1) -> [1,1,0,1];

=================================
None
([2],1) -> [2,1];
([3,1,2],1) -> [3,1,2,1];
([3],1) -> [3,1];
([],1) -> [1];
([0],1) -> [0,1];
([0,1],0) -> [0,1,0];
([],3) -> [3];
([1,1],1) -> [1,1,1];
([1],1) -> [1,1];
([0],3) -> [0,3];

=================================
None
([3],2) -> [3,2];
([0,1],0) -> [0,1,0];
([],1) -> [1];
([0,1,1],0) -> [0,1,1,0];
([0],3) -> [0,3];
([3,3],1) -> [3,3,1];
([],2) -> [2];
([0,1,3],2) -> [0,1,3,2];
([3,3],0) -> [3,3,0];
([],3) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

6.8458 true

([3,0],3) -> [3,0,3];
([],1) -> [1];
([2],2) -> [2,2];
([],3) -> [3];
([3,0,0],2) -> [3,0,0,2];
([0],1) -> [0,1];
([0],2) -> [0,2];
([2,2],3) -> [2,2,3];
([0,0],0) -> [0,0,0];
([3],1) -> [3,1];

=================================
None
([3,3,1],1) -> [3,3,1,1];
([1,0,0],1) -> [1,0,0,1];
([2,2,0],0) -> [2,2,0,0];
([],1) -> [1];
([3,1],1) -> [3,1,1];
([0],1) -> [0,1];
([1,0],1) -> [1,0,1];
([1,0,2],3) -> [1,0,2,3];
([2],0) -> [2,0];
([1,2],0) -> [1,2,0];

=================================
None
([2,0,2],2) -> [2,0,2,2];
([2,3,1],1) -> [2,3,1,1];
([],0) -> [0];
([1,3,3],2) -> [1,3,3,2];
([1],1) -> [1,1];
([],3) -> [3];
([1,0],2) -> [1,0,2];
([1,3,1],2) -> [1,3,1,2];
([],1) -> [1];
([2,3],1) -> [2,3,1];

=================================
None
([],2) -> [2];
([3],2) -> [3,2];
([],1) -> [1];
([3,2,2],1) -> [3,2,2,1];
([2],0) -> [2,0];
([3,3],1) -> [3,3,1];
([1],1) -> [1,1];
([2],3) -> [2,3];
([3],1) -> [3,1];
([0,3],2) -> [0,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.4515 true

([1,0],1) -> [1,0,1];
([3,3],0) -> [3,3,0];
([0,2],1) -> [0,2,1];
([1,2,0],3) -> [1,2,0,3];
([2,3],0) -> [2,3,0];
([],3) -> [3];
([3,3],3) -> [3,3,3];
([3],3) -> [3,3];
([0],3) -> [0,3];
([3,3,1],0) -> [3,3,1,0];
([0],2) -> [0,2];

=================================
STACKOVERFLOW

([0],1) -> [0,1];
([2,1],1) -> [2,1,1];
([1,1,0],1) -> [1,1,0,1];
([3,3],2) -> [3,3,2];
([1,2],1) -> [1,2,1];
([3],1) -> [3,1];
([3],0) -> [3,0];
([],2) -> [2];
([0,2],2) -> [0,2,2];
([0],3) -> [0,3];
([1],1) -> [1,1];

=================================
None
([3],3) -> [3,3];
([],0) -> [0];
([],2) -> [2];
([2,1],3) -> [2,1,3];
([0],0) -> [0,0];
([0],2) -> [0,2];
([0,2],0) -> [0,2,0];
([1,3,1],0) -> [1,3,1,0];
([3,0,3],1) -> [3,0,3,1];
([],3) -> [3];
([2],3) -> [2,3];

=================================
None
([3],3) -> [3,3];
([1],0) -> [1,0];
([3,1],0) -> [3,1,0];
([3],1) -> [3,1];
([3],2) -> [3,2];
([0],1) -> [0,1];
([0,0],3) -> [0,0,3];
([2,2,1],2) -> [2,2,1,2];
([1,3,2],2) -> [1,3,2,2];
([3,2,3],1) -> [3,2,3,1];
([3,3],0) -> [3,3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4781 true

([],2) -> [2];
([0,2],0) -> [0,2,0];
([0],0) -> [0,0];
([],0) -> [0];
([0,0],1) -> [0,0,1];
([],3) -> [3];
([3],3) -> [3,3];
([2,1],2) -> [2,1,2];
([0,3,2],2) -> [0,3,2,2];
([2,2],2) -> [2,2,2];
([0,2,2],3) -> [0,2,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1603 true

([0],2) -> [0,2];
([2,1],1) -> [2,1,1];
([0,1,0],2) -> [0,1,0,2];
([],2) -> [2];
([3,3],2) -> [3,3,2];
([3,2],3) -> [3,2,3];
([3,3,3],3) -> [3,3,3,3];
([0,3,1],2) -> [0,3,1,2];
([],3) -> [3];
([2,3,0],1) -> [2,3,0,1];
([3],3) -> [3,3];

=================================
None
([2],1) -> [2,1];
([2,2,3],2) -> [2,2,3,2];
([2,2],1) -> [2,2,1];
([2],2) -> [2,2];
([],1) -> [1];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([2,1],0) -> [2,1,0];
([3,3,2],2) -> [3,3,2,2];
([3,2,2],2) -> [3,2,2,2];
([],2) -> [2];

=================================
None
([3,3,3],3) -> [3,3,3,3];
([],1) -> [1];
([0,0],2) -> [0,0,2];
([3,1],2) -> [3,1,2];
([3,1],1) -> [3,1,1];
([0,1,1],0) -> [0,1,1,0];
([],0) -> [0];
([0,1],3) -> [0,1,3];
([1],2) -> [1,2];
([2],2) -> [2,2];
([3],3) -> [3,3];

=================================
None
([],3) -> [3];
([2,3,3],2) -> [2,3,3,2];
([],0) -> [0];
([3],3) -> [3,3];
([3],2) -> [3,2];
([],1) -> [1];
([0,2,2],2) -> [0,2,2,2];
([],2) -> [2];
([2,2,1],1) -> [2,2,1,1];
([2,3,2],0) -> [2,3,2,0];
([2,2,0],1) -> [2,2,0,1];

=================================
None
([2],0) -> [2,0];
([],2) -> [2];
([],3) -> [3];
([1,0],1) -> [1,0,1];
([2,3,3],0) -> [2,3,3,0];
([1,1],2) -> [1,1,2];
([3,1,3],1) -> [3,1,3,1];
([1],0) -> [1,0];
([3,2,3],1) -> [3,2,3,1];
([2],3) -> [2,3];
([2],1) -> [2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0352 true

([2],0) -> [2,0];
([1,0],2) -> [1,0,2];
([1,0,0],3) -> [1,0,0,3];
([],0) -> [0];
([0,1,3],2) -> [0,1,3,2];
([1,3],0) -> [1,3,0];
([2],2) -> [2,2];
([2,1],3) -> [2,1,3];
([],1) -> [1];
([1,2,2],2) -> [1,2,2,2];
([0,3],1) -> [0,3,1];
([3,0,3],1) -> [3,0,3,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4735 true

([3,2,3],2) -> [3,2,3,2];
([3,1,2],3) -> [3,1,2,3];
([0],3) -> [0,3];
([],2) -> [2];
([2,3,0],2) -> [2,3,0,2];
([1],0) -> [1,0];
([2,0,3],2) -> [2,0,3,2];
([2,0,0],3) -> [2,0,0,3];
([0,2],0) -> [0,2,0];
([1,2],3) -> [1,2,3];
([],1) -> [1];
([0],0) -> [0,0];

=================================
None
([2,3],2) -> [2,3,2];
([],2) -> [2];
([3,1],1) -> [3,1,1];
([0],3) -> [0,3];
([],0) -> [0];
([],1) -> [1];
([3],0) -> [3,0];
([0,3],0) -> [0,3,0];
([1],1) -> [1,1];
([3],1) -> [3,1];
([2,3,3],3) -> [2,3,3,3];
([2],0) -> [2,0];

=================================
None
([],2) -> [2];
([0,1,3],3) -> [0,1,3,3];
([2,1],1) -> [2,1,1];
([3],2) -> [3,2];
([0],0) -> [0,0];
([2,0],3) -> [2,0,3];
([],1) -> [1];
([3,0],1) -> [3,0,1];
([1],1) -> [1,1];
([],0) -> [0];
([3,0,1],3) -> [3,0,1,3];
([2,1,2],2) -> [2,1,2,2];

=================================
None
([3,0,0],1) -> [3,0,0,1];
([],0) -> [0];
([1],3) -> [1,3];
([0,2],1) -> [0,2,1];
([],3) -> [3];
([3,1,0],0) -> [3,1,0,0];
([2,3],3) -> [2,3,3];
([1,0,0],0) -> [1,0,0,0];
([0,0],1) -> [0,0,1];
([2],3) -> [2,3];
([2,2],1) -> [2,2,1];
([0],0) -> [0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

44.4920 true

([2,0,1],2) -> [2,0,1,2];
([0,1],3) -> [0,1,3];
([],1) -> [1];
([1,2],1) -> [1,2,1];
([1],3) -> [1,3];
([3,2,0],0) -> [3,2,0,0];
([3,1,0],1) -> [3,1,0,1];
([1,0,3],1) -> [1,0,3,1];
([0,2],3) -> [0,2,3];
([0,1,3],1) -> [0,1,3,1];
([1,3,3],2) -> [1,3,3,2];
([2,0],2) -> [2,0,2];

=================================
None
([1,2,3],1) -> [1,2,3,1];
([3,2],2) -> [3,2,2];
([0],3) -> [0,3];
([0,3,3],3) -> [0,3,3,3];
([],3) -> [3];
([0,0],1) -> [0,0,1];
([],2) -> [2];
([2,2,2],2) -> [2,2,2,2];
([1,0],0) -> [1,0,0];
([1,1,2],1) -> [1,1,2,1];
([1],3) -> [1,3];
([2,0],0) -> [2,0,0];

=================================
None
([],0) -> [0];
([0,2,0],3) -> [0,2,0,3];
([0],0) -> [0,0];
([0],3) -> [0,3];
([1,1],1) -> [1,1,1];
([2],0) -> [2,0];
([3,3,0],3) -> [3,3,0,3];
([1],0) -> [1,0];
([1,2,3],1) -> [1,2,3,1];
([2,3,0],2) -> [2,3,0,2];
([1],1) -> [1,1];
([2,1,2],0) -> [2,1,2,0];

=================================
None
([0,2,2],0) -> [0,2,2,0];
([],2) -> [2];
([1,3],1) -> [1,3,1];
([1,2,2],2) -> [1,2,2,2];
([0],2) -> [0,2];
([1,0],0) -> [1,0,0];
([3],3) -> [3,3];
([1,0],2) -> [1,0,2];
([],1) -> [1];
([3,2],0) -> [3,2,0];
([2,3,2],0) -> [2,3,2,0];
([1],2) -> [1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.1189 true

([1],0) -> [1,0];
([],0) -> [0];
([1,3],0) -> [1,3,0];
([],2) -> [2];
([],1) -> [1];
([3],1) -> [3,1];
([0,3],3) -> [0,3,3];
([2,2],2) -> [2,2,2];
([2,1],1) -> [2,1,1];
([2,1],3) -> [2,1,3];
([2,2],1) -> [2,2,1];
([],3) -> [3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0313 true

([],3) -> [3];
([2,2,2],0) -> [2,2,2,0];
([1,2,0],1) -> [1,2,0,1];
([1,0],3) -> [1,0,3];
([1],2) -> [1,2];
([2,0],0) -> [2,0,0];
([],1) -> [1];
([3],0) -> [3,0];
([0],0) -> [0,0];
([2,0],3) -> [2,0,3];
([1,0,3],1) -> [1,0,3,1];
([2],2) -> [2,2];
([0,0],0) -> [0,0,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5326 true

([1],2) -> [1,2];
([],3) -> [3];
([3,3],0) -> [3,3,0];
([1,0,0],1) -> [1,0,0,1];
([2],1) -> [2,1];
([],0) -> [0];
([0,1,3],3) -> [0,1,3,3];
([0],2) -> [0,2];
([2],2) -> [2,2];
([1,3],2) -> [1,3,2];
([2,2],0) -> [2,2,0];
([1,3,3],2) -> [1,3,3,2];
([3,1,3],2) -> [3,1,3,2];

=================================
None
([3],3) -> [3,3];
([0],0) -> [0,0];
([],3) -> [3];
([1,3],2) -> [1,3,2];
([1],1) -> [1,1];
([],2) -> [2];
([3,2,1],2) -> [3,2,1,2];
([3,2,3],2) -> [3,2,3,2];
([],1) -> [1];
([3,3,3],3) -> [3,3,3,3];
([3,2,3],0) -> [3,2,3,0];
([3,3],3) -> [3,3,3];
([2],3) -> [2,3];

=================================
None
([1],3) -> [1,3];
([3],0) -> [3,0];
([],0) -> [0];
([],1) -> [1];
([],3) -> [3];
([3],2) -> [3,2];
([0,2],3) -> [0,2,3];
([3,0,1],0) -> [3,0,1,0];
([1],0) -> [1,0];
([2],3) -> [2,3];
([2,0,0],0) -> [2,0,0,0];
([0,1,3],3) -> [0,1,3,3];
([2,3],3) -> [2,3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.2731 true

([3],2) -> [3,2];
([3],3) -> [3,3];
([],0) -> [0];
([3,3,0],1) -> [3,3,0,1];
([0],0) -> [0,0];
([0,3,0],2) -> [0,3,0,2];
([3,3,1],3) -> [3,3,1,3];
([1,0],0) -> [1,0,0];
([2,3,0],1) -> [2,3,0,1];
([2,2],0) -> [2,2,0];
([2,1],1) -> [2,1,1];
([1,1],2) -> [1,1,2];
([1,0,0],2) -> [1,0,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.5359 true

([2,2,0],1) -> [2,2,0,1];
([2],1) -> [2,1];
([0,0],1) -> [0,0,1];
([0],3) -> [0,3];
([2],0) -> [2,0];
([2],3) -> [2,3];
([0,1,2],2) -> [0,1,2,2];
([2,0],2) -> [2,0,2];
([0],0) -> [0,0];
([1,1,2],1) -> [1,1,2,1];
([2,1,3],1) -> [2,1,3,1];
([2,0,0],1) -> [2,0,0,1];
([1,2],3) -> [1,2,3];

=================================
None
([2,0],3) -> [2,0,3];
([0,1],2) -> [0,1,2];
([],0) -> [0];
([2,3],1) -> [2,3,1];
([1,2,0],1) -> [1,2,0,1];
([0],0) -> [0,0];
([],2) -> [2];
([3],2) -> [3,2];
([3,0,2],0) -> [3,0,2,0];
([],3) -> [3];
([1,1,1],2) -> [1,1,1,2];
([1,3,1],0) -> [1,3,1,0];
([1,0],2) -> [1,0,2];

=================================
None
([],3) -> [3];
([],2) -> [2];
([0,1,0],1) -> [0,1,0,1];
([0,2],3) -> [0,2,3];
([3],1) -> [3,1];
([2],3) -> [2,3];
([0,2,1],3) -> [0,2,1,3];
([2,1],3) -> [2,1,3];
([0,2],0) -> [0,2,0];
([],0) -> [0];
([1,3,2],1) -> [1,3,2,1];
([1,2],0) -> [1,2,0];
([0],1) -> [0,1];

=================================
None
([1],1) -> [1,1];
([1,1],2) -> [1,1,2];
([2],0) -> [2,0];
([0],2) -> [0,2];
([1,0,0],0) -> [1,0,0,0];
([],2) -> [2];
([2,0],2) -> [2,0,2];
([3,2],3) -> [3,2,3];
([1,0],3) -> [1,0,3];
([2,3,0],2) -> [2,3,0,2];
([1,0,0],1) -> [1,0,0,1];
([],1) -> [1];
([0,2,2],1) -> [0,2,2,1];

=================================
None
([3,3,3],3) -> [3,3,3,3];
([1,2,1],3) -> [1,2,1,3];
([0,1,0],3) -> [0,1,0,3];
([],1) -> [1];
([1,1],0) -> [1,1,0];
([1,3,2],0) -> [1,3,2,0];
([0],0) -> [0,0];
([1,0],0) -> [1,0,0];
([],3) -> [3];
([2,3,0],2) -> [2,3,0,2];
([],2) -> [2];
([1,0,1],3) -> [1,0,1,3];
([2,2,2],1) -> [2,2,2,1];

=================================
None
([1,2],1) -> [1,2,1];
([1],2) -> [1,2];
([0,1],2) -> [0,1,2];
([3,3],3) -> [3,3,3];
([2,1],0) -> [2,1,0];
([1],0) -> [1,0];
([2],0) -> [2,0];
([2,2],0) -> [2,2,0];
([],0) -> [0];
([2,0],2) -> [2,0,2];
([],1) -> [1];
([3],2) -> [3,2];
([3,3,1],2) -> [3,3,1,2];
([3,1],2) -> [3,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5711 true

([1],1) -> [1,1];
([],0) -> [0];
([],3) -> [3];
([3,0,0],3) -> [3,0,0,3];
([],2) -> [2];
([1,3,0],1) -> [1,3,0,1];
([2,2],3) -> [2,2,3];
([3,1],2) -> [3,1,2];
([3,0],2) -> [3,0,2];
([1],0) -> [1,0];
([0,2],1) -> [0,2,1];
([2,1,3],0) -> [2,1,3,0];
([3,0],3) -> [3,0,3];
([],1) -> [1];

=================================
None
([0],3) -> [0,3];
([3],2) -> [3,2];
([2,2,0],1) -> [2,2,0,1];
([3,2],0) -> [3,2,0];
([2,0],2) -> [2,0,2];
([1,2,0],0) -> [1,2,0,0];
([1],0) -> [1,0];
([3],0) -> [3,0];
([3,0],2) -> [3,0,2];
([2,1,3],1) -> [2,1,3,1];
([3,3,1],0) -> [3,3,1,0];
([3,1,3],2) -> [3,1,3,2];
([],1) -> [1];
([0,3],2) -> [0,3,2];

=================================
None
([0,1,2],0) -> [0,1,2,0];
([3,3,0],0) -> [3,3,0,0];
([1,1,3],1) -> [1,1,3,1];
([0,3],1) -> [0,3,1];
([3],1) -> [3,1];
([1,0],0) -> [1,0,0];
([3,1],2) -> [3,1,2];
([1,3,0],3) -> [1,3,0,3];
([],0) -> [0];
([],3) -> [3];
([3,0],3) -> [3,0,3];
([0,3,0],3) -> [0,3,0,3];
([0,3,2],0) -> [0,3,2,0];
([1,0],1) -> [1,0,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8590 true

([3],3) -> [3,3];
([0],0) -> [0,0];
([],3) -> [3];
([3,0],1) -> [3,0,1];
([2,3,0],2) -> [2,3,0,2];
([0,3],1) -> [0,3,1];
([1],3) -> [1,3];
([3,2],2) -> [3,2,2];
([2,3,2],1) -> [2,3,2,1];
([1],2) -> [1,2];
([],1) -> [1];
([1],0) -> [1,0];
([1,2],3) -> [1,2,3];
([3],1) -> [3,1];

=================================
None
([2,2],0) -> [2,2,0];
([1],1) -> [1,1];
([],0) -> [0];
([0],3) -> [0,3];
([0,3],3) -> [0,3,3];
([],2) -> [2];
([2,3,2],3) -> [2,3,2,3];
([3,3],2) -> [3,3,2];
([0],0) -> [0,0];
([1,2,3],0) -> [1,2,3,0];
([1,3],3) -> [1,3,3];
([3,0,2],1) -> [3,0,2,1];
([1,0,0],3) -> [1,0,0,3];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1367 true

([3],3) -> [3,3];
([],3) -> [3];
([0,3,3],3) -> [0,3,3,3];
([],0) -> [0];
([0,1],2) -> [0,1,2];
([],1) -> [1];
([3,2,0],2) -> [3,2,0,2];
([0,0,2],3) -> [0,0,2,3];
([0,2],1) -> [0,2,1];
([3,0],3) -> [3,0,3];
([3],1) -> [3,1];
([3,0,0],0) -> [3,0,0,0];
([1],2) -> [1,2];
([1,3,2],1) -> [1,3,2,1];

=================================
None
([0],2) -> [0,2];
([0,1,3],2) -> [0,1,3,2];
([1],1) -> [1,1];
([3,3],1) -> [3,3,1];
([0,1,0],0) -> [0,1,0,0];
([],0) -> [0];
([0],1) -> [0,1];
([2],2) -> [2,2];
([2],0) -> [2,0];
([],3) -> [3];
([0,0,2],3) -> [0,0,2,3];
([2,3,3],1) -> [2,3,3,1];
([3,2],1) -> [3,2,1];
([0,3],0) -> [0,3,0];

=================================
None
([],0) -> [0];
([2,2,1],3) -> [2,2,1,3];
([0],1) -> [0,1];
([0,1,2],3) -> [0,1,2,3];
([0,3,2],2) -> [0,3,2,2];
([],2) -> [2];
([],1) -> [1];
([1],3) -> [1,3];
([1,3,3],3) -> [1,3,3,3];
([3,3],3) -> [3,3,3];
([0,0],1) -> [0,0,1];
([3],0) -> [3,0];
([1,2,0],3) -> [1,2,0,3];
([0,2,1],2) -> [0,2,1,2];

=================================
None
([3,3],2) -> [3,3,2];
([0,3],3) -> [0,3,3];
([2,1],2) -> [2,1,2];
([],0) -> [0];
([1,3,1],0) -> [1,3,1,0];
([2,2],3) -> [2,2,3];
([],3) -> [3];
([0],2) -> [0,2];
([1,2],1) -> [1,2,1];
([0],0) -> [0,0];
([],2) -> [2];
([0],3) -> [0,3];
([1,3,3],1) -> [1,3,3,1];
([0,1],2) -> [0,1,2];

=================================
None
([1],2) -> [1,2];
([0,1],1) -> [0,1,1];
([2],3) -> [2,3];
([2],1) -> [2,1];
([3,2],3) -> [3,2,3];
([],1) -> [1];
([3,3,2],0) -> [3,3,2,0];
([0,3],1) -> [0,3,1];
([3,0],0) -> [3,0,0];
([2,0],3) -> [2,0,3];
([],2) -> [2];
([3,1,0],1) -> [3,1,0,1];
([0],0) -> [0,0];
([3],0) -> [3,0];
([2],0) -> [2,0];

=================================
None
([],2) -> [2];
([],1) -> [1];
([],0) -> [0];
([],3) -> [3];
([0,1],0) -> [0,1,0];
([2,3,3],2) -> [2,3,3,2];
([2],1) -> [2,1];
([2,1,1],0) -> [2,1,1,0];
([1,0,0],1) -> [1,0,0,1];
([3,1,1],2) -> [3,1,1,2];
([2,3,2],2) -> [2,3,2,2];
([3,3],0) -> [3,3,0];
([1,0,0],3) -> [1,0,0,3];
([0,2],2) -> [0,2,2];
([2,3,2],3) -> [2,3,2,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1226 true

([1,2],2) -> [1,2,2];
([3,2],3) -> [3,2,3];
([2],3) -> [2,3];
([1,3],1) -> [1,3,1];
([1],0) -> [1,0];
([3,3],0) -> [3,3,0];
([3,0],3) -> [3,0,3];
([2],1) -> [2,1];
([1,1],3) -> [1,1,3];
([],2) -> [2];
([2],2) -> [2,2];
([1,2,2],1) -> [1,2,2,1];
([],3) -> [3];
([1],3) -> [1,3];
([0,0],0) -> [0,0,0];

=================================
STACKOVERFLOW

([],1) -> [1];
([1],2) -> [1,2];
([],0) -> [0];
([1,3,3],2) -> [1,3,3,2];
([3,2],1) -> [3,2,1];
([],3) -> [3];
([1],3) -> [1,3];
([2,3,1],1) -> [2,3,1,1];
([1],1) -> [1,1];
([3],0) -> [3,0];
([2,1],2) -> [2,1,2];
([1,3],0) -> [1,3,0];
([0,2],2) -> [0,2,2];
([0,1,0],0) -> [0,1,0,0];
([2,0,2],0) -> [2,0,2,0];

=================================
None
([2],2) -> [2,2];
([],2) -> [2];
([1,3],3) -> [1,3,3];
([3],0) -> [3,0];
([3,2],3) -> [3,2,3];
([0,2],2) -> [0,2,2];
([1,3,2],0) -> [1,3,2,0];
([3,0],0) -> [3,0,0];
([2],1) -> [2,1];
([3,1],2) -> [3,1,2];
([1,3],0) -> [1,3,0];
([2,0],3) -> [2,0,3];
([3,2],2) -> [3,2,2];
([],0) -> [0];
([2,0,0],1) -> [2,0,0,1];

=================================
None
([0,1,1],3) -> [0,1,1,3];
([],2) -> [2];
([3,1,3],0) -> [3,1,3,0];
([0,2,2],0) -> [0,2,2,0];
([2],3) -> [2,3];
([],0) -> [0];
([3,3],1) -> [3,3,1];
([3,1,3],3) -> [3,1,3,3];
([2,3],0) -> [2,3,0];
([1,1,3],2) -> [1,1,3,2];
([],3) -> [3];
([3],3) -> [3,3];
([1],3) -> [1,3];
([2],1) -> [2,1];
([1,1,3],0) -> [1,1,3,0];

=================================
None
([2,2],0) -> [2,2,0];
([],2) -> [2];
([3,0,0],1) -> [3,0,0,1];
([0,3,3],0) -> [0,3,3,0];
([3,3,2],2) -> [3,3,2,2];
([0,0,0],0) -> [0,0,0,0];
([0],0) -> [0,0];
([],3) -> [3];
([1],3) -> [1,3];
([3,1],1) -> [3,1,1];
([3,3,2],3) -> [3,3,2,3];
([0,2,0],2) -> [0,2,0,2];
([1,0],2) -> [1,0,2];
([3,2],1) -> [3,2,1];
([],1) -> [1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1442 true

([3,3],2) -> [3,3,2];
([2,2,0],0) -> [2,2,0,0];
([2],3) -> [2,3];
([],0) -> [0];
([],1) -> [1];
([0,1,3],1) -> [0,1,3,1];
([],2) -> [2];
([3],3) -> [3,3];
([2],2) -> [2,2];
([1],1) -> [1,1];
([1,3,3],1) -> [1,3,3,1];
([],3) -> [3];
([0,3,2],1) -> [0,3,2,1];
([3,3,0],0) -> [3,3,0,0];
([1,3,1],3) -> [1,3,1,3];

=================================
None
([],2) -> [2];
([1,0,3],1) -> [1,0,3,1];
([1,3],2) -> [1,3,2];
([1,1],2) -> [1,1,2];
([],3) -> [3];
([],0) -> [0];
([2,2],1) -> [2,2,1];
([],1) -> [1];
([1,0,0],3) -> [1,0,0,3];
([2,1,3],0) -> [2,1,3,0];
([0,3,3],3) -> [0,3,3,3];
([2,3],1) -> [2,3,1];
([2,2],3) -> [2,2,3];
([1],0) -> [1,0];
([1,0,1],0) -> [1,0,1,0];

=================================
None
([],0) -> [0];
([],1) -> [1];
([1,3,3],2) -> [1,3,3,2];
([],2) -> [2];
([],3) -> [3];
([3,3],3) -> [3,3,3];
([0],0) -> [0,0];
([2],1) -> [2,1];
([2,3],0) -> [2,3,0];
([3,3,3],1) -> [3,3,3,1];
([3,3,3],0) -> [3,3,3,0];
([0,0,3],3) -> [0,0,3,3];
([1,3,0],0) -> [1,3,0,0];
([3,2],2) -> [3,2,2];
([2,1],2) -> [2,1,2];

=================================
None
([1],2) -> [1,2];
([],0) -> [0];
([0,3,2],1) -> [0,3,2,1];
([3],1) -> [3,1];
([0,1,0],3) -> [0,1,0,3];
([],3) -> [3];
([0,2],1) -> [0,2,1];
([3,1,0],3) -> [3,1,0,3];
([3,3,2],1) -> [3,3,2,1];
([],2) -> [2];
([3,3],2) -> [3,3,2];
([0],1) -> [0,1];
([1,3],3) -> [1,3,3];
([0,2,1],3) -> [0,2,1,3];
([1],3) -> [1,3];
([],1) -> [1];

=================================
None
([1,3],1) -> [1,3,1];
([0,0,3],1) -> [0,0,3,1];
([],1) -> [1];
([1,3],3) -> [1,3,3];
([],2) -> [2];
([0],0) -> [0,0];
([0,2,0],0) -> [0,2,0,0];
([],3) -> [3];
([1,0,0],2) -> [1,0,0,2];
([0],2) -> [0,2];
([3,3,0],0) -> [3,3,0,0];
([1],0) -> [1,0];
([3],3) -> [3,3];
([2,2],0) -> [2,2,0];
([2,3,2],0) -> [2,3,2,0];
([2,3,0],1) -> [2,3,0,1];

=================================
None
([3],2) -> [3,2];
([1],1) -> [1,1];
([0,1],2) -> [0,1,2];
([0],0) -> [0,0];
([0,1,1],0) -> [0,1,1,0];
([1],3) -> [1,3];
([3,3,2],0) -> [3,3,2,0];
([],0) -> [0];
([1,1],1) -> [1,1,1];
([],1) -> [1];
([],2) -> [2];
([0,2],0) -> [0,2,0];
([1],2) -> [1,2];
([2],3) -> [2,3];
([0,2,2],1) -> [0,2,2,1];
([1,3],0) -> [1,3,0];

=================================
None
([],1) -> [1];
([3,0,0],3) -> [3,0,0,3];
([1,2],3) -> [1,2,3];
([1],2) -> [1,2];
([],3) -> [3];
([2],1) -> [2,1];
([0],2) -> [0,2];
([0,1],2) -> [0,1,2];
([],2) -> [2];
([3,0,1],3) -> [3,0,1,3];
([2,1],2) -> [2,1,2];
([0,3],3) -> [0,3,3];
([2,3,1],2) -> [2,3,1,2];
([2,3],0) -> [2,3,0];
([2,3,3],3) -> [2,3,3,3];
([2,3,0],0) -> [2,3,0,0];

=================================
None
([3],3) -> [3,3];
([2,1,2],0) -> [2,1,2,0];
([],1) -> [1];
([2,3],0) -> [2,3,0];
([2,0,1],3) -> [2,0,1,3];
([],0) -> [0];
([0,3],3) -> [0,3,3];
([],2) -> [2];
([1],3) -> [1,3];
([2,2,3],3) -> [2,2,3,3];
([],3) -> [3];
([3,3,3],2) -> [3,3,3,2];
([3],0) -> [3,0];
([3,1,2],2) -> [3,1,2,2];
([0,3,1],1) -> [0,3,1,1];
([0],2) -> [0,2];

=================================
None
([1,0,0],0) -> [1,0,0,0];
([2,3,2],2) -> [2,3,2,2];
([2],2) -> [2,2];
([3,2,1],0) -> [3,2,1,0];
([3],3) -> [3,3];
([3,2,0],2) -> [3,2,0,2];
([0,1],1) -> [0,1,1];
([3,0,2],1) -> [3,0,2,1];
([0],1) -> [0,1];
([1,3,2],2) -> [1,3,2,2];
([3,1],0) -> [3,1,0];
([],1) -> [1];
([2,3,1],0) -> [2,3,1,0];
([0,0],0) -> [0,0,0];
([2,0],3) -> [2,0,3];
([],3) -> [3];

=================================
None
([],2) -> [2];
([],3) -> [3];
([3,2,3],1) -> [3,2,3,1];
([],1) -> [1];
([2],2) -> [2,2];
([1,3,0],0) -> [1,3,0,0];
([0,1,2],2) -> [0,1,2,2];
([3],1) -> [3,1];
([2,1,1],3) -> [2,1,1,3];
([3],0) -> [3,0];
([0,2,1],2) -> [0,2,1,2];
([1],2) -> [1,2];
([0,0,1],1) -> [0,0,1,1];
([1,2],1) -> [1,2,1];
([0,0,0],1) -> [0,0,0,1];
([2],1) -> [2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

32.5340 true

([],1) -> [1];
([0,2,0],2) -> [0,2,0,2];
([1],1) -> [1,1];
([0,3,0],2) -> [0,3,0,2];
([0,0],0) -> [0,0,0];
([3,2],2) -> [3,2,2];
([],3) -> [3];
([],2) -> [2];
([3,2],1) -> [3,2,1];
([2],3) -> [2,3];
([2,1,0],2) -> [2,1,0,2];
([3],3) -> [3,3];
([3],1) -> [3,1];
([1,0,1],0) -> [1,0,1,0];
([0],0) -> [0,0];
([0,3,1],3) -> [0,3,1,3];

=================================
None
([],1) -> [1];
([3,1,2],1) -> [3,1,2,1];
([0],1) -> [0,1];
([1,2,2],1) -> [1,2,2,1];
([1],3) -> [1,3];
([0,1],0) -> [0,1,0];
([2],3) -> [2,3];
([],0) -> [0];
([2,3],3) -> [2,3,3];
([3,0],0) -> [3,0,0];
([0,3],1) -> [0,3,1];
([],3) -> [3];
([3,1,2],2) -> [3,1,2,2];
([],2) -> [2];
([3,3],0) -> [3,3,0];
([0,2],0) -> [0,2,0];

=================================
None
([2],1) -> [2,1];
([],2) -> [2];
([2,0,0],3) -> [2,0,0,3];
([],1) -> [1];
([2],3) -> [2,3];
([3,2,2],2) -> [3,2,2,2];
([2],2) -> [2,2];
([0,3,3],3) -> [0,3,3,3];
([0,2,3],3) -> [0,2,3,3];
([],0) -> [0];
([0],2) -> [0,2];
([3,3,2],1) -> [3,3,2,1];
([3,2,3],0) -> [3,2,3,0];
([2,0,1],0) -> [2,0,1,0];
([2,1],0) -> [2,1,0];
([3,2,1],3) -> [3,2,1,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4058 true

([],1) -> [1];
([],3) -> [3];
([1,0,0],1) -> [1,0,0,1];
([1],2) -> [1,2];
([0,2],0) -> [0,2,0];
([2],1) -> [2,1];
([1],1) -> [1,1];
([],0) -> [0];
([3],2) -> [3,2];
([2,0],1) -> [2,0,1];
([3],1) -> [3,1];
([],2) -> [2];
([3,1],1) -> [3,1,1];
([0],1) -> [0,1];
([1,0],0) -> [1,0,0];
([0,3],0) -> [0,3,0];
([1],3) -> [1,3];

=================================
None
([3,1,3],3) -> [3,1,3,3];
([2],2) -> [2,2];
([0,0,0],1) -> [0,0,0,1];
([1,2,0],0) -> [1,2,0,0];
([1,1],1) -> [1,1,1];
([0,2,3],3) -> [0,2,3,3];
([],1) -> [1];
([1],3) -> [1,3];
([1,1,3],3) -> [1,1,3,3];
([0,1],2) -> [0,1,2];
([0,2,3],1) -> [0,2,3,1];
([],0) -> [0];
([3,0],1) -> [3,0,1];
([2,0,1],1) -> [2,0,1,1];
([0,2,1],1) -> [0,2,1,1];
([],2) -> [2];
([0,3],1) -> [0,3,1];

=================================
None
([0,0,1],1) -> [0,0,1,1];
([],3) -> [3];
([0,3],1) -> [0,3,1];
([2,2,1],1) -> [2,2,1,1];
([0],1) -> [0,1];
([1,0],2) -> [1,0,2];
([3,3],2) -> [3,3,2];
([1],2) -> [1,2];
([3],2) -> [3,2];
([2,1],2) -> [2,1,2];
([],2) -> [2];
([2,0,2],1) -> [2,0,2,1];
([1],1) -> [1,1];
([],0) -> [0];
([3],0) -> [3,0];
([1,1],1) -> [1,1,1];
([0,2,3],0) -> [0,2,3,0];

=================================
None
([2,3,1],2) -> [2,3,1,2];
([3],1) -> [3,1];
([2,0,2],2) -> [2,0,2,2];
([],3) -> [3];
([],2) -> [2];
([3,1],1) -> [3,1,1];
([1],3) -> [1,3];
([2,3],0) -> [2,3,0];
([1],2) -> [1,2];
([1,2],3) -> [1,2,3];
([],0) -> [0];
([],1) -> [1];
([0],0) -> [0,0];
([0,3,2],0) -> [0,3,2,0];
([1,3,0],3) -> [1,3,0,3];
([2],1) -> [2,1];
([3,3],1) -> [3,3,1];

=================================
None
([],2) -> [2];
([],1) -> [1];
([3,0],0) -> [3,0,0];
([1,3,3],2) -> [1,3,3,2];
([],0) -> [0];
([1],1) -> [1,1];
([1],3) -> [1,3];
([3,0],1) -> [3,0,1];
([1],2) -> [1,2];
([3,3,0],1) -> [3,3,0,1];
([1,1],3) -> [1,1,3];
([0],1) -> [0,1];
([0,1,3],3) -> [0,1,3,3];
([1,0,3],3) -> [1,0,3,3];
([2,3,3],1) -> [2,3,3,1];
([2,2],2) -> [2,2,2];
([3],3) -> [3,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0408 true

([0,2],1) -> [0,2,1];
([3],0) -> [3,0];
([],2) -> [2];
([0],0) -> [0,0];
([],3) -> [3];
([0],3) -> [0,3];
([2,1,2],0) -> [2,1,2,0];
([2],2) -> [2,2];
([1,2,1],1) -> [1,2,1,1];
([1,1],2) -> [1,1,2];
([],1) -> [1];
([2],3) -> [2,3];
([2,1,0],0) -> [2,1,0,0];
([1,1,3],0) -> [1,1,3,0];
([3],2) -> [3,2];
([],0) -> [0];
([2],1) -> [2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

5.7112 true

([0,1,1],1) -> [0,1,1,1];
([3,3],1) -> [3,3,1];
([2],1) -> [2,1];
([3,3,1],2) -> [3,3,1,2];
([0,2],0) -> [0,2,0];
([2,2,3],0) -> [2,2,3,0];
([2,0,2],3) -> [2,0,2,3];
([3],0) -> [3,0];
([0],1) -> [0,1];
([0],3) -> [0,3];
([3,1,3],3) -> [3,1,3,3];
([3],2) -> [3,2];
([],0) -> [0];
([0,0],2) -> [0,0,2];
([1,3,1],0) -> [1,3,1,0];
([3,2,2],2) -> [3,2,2,2];
([0,3],2) -> [0,3,2];

=================================
None
([],3) -> [3];
([1,0],1) -> [1,0,1];
([2],2) -> [2,2];
([],2) -> [2];
([],0) -> [0];
([2],1) -> [2,1];
([],1) -> [1];
([0,3,3],2) -> [0,3,3,2];
([1,0,3],1) -> [1,0,3,1];
([1],1) -> [1,1];
([0],0) -> [0,0];
([1,2],3) -> [1,2,3];
([2],3) -> [2,3];
([1],3) -> [1,3];
([1,1,0],3) -> [1,1,0,3];
([1,2],2) -> [1,2,2];
([2,3,0],2) -> [2,3,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3597 true

([0,1,3],2) -> [0,1,3,2];
([],3) -> [3];
([2,1,2],1) -> [2,1,2,1];
([3,3,0],2) -> [3,3,0,2];
([],0) -> [0];
([3,0],1) -> [3,0,1];
([1,2],2) -> [1,2,2];
([0,2,2],3) -> [0,2,2,3];
([2,3,3],2) -> [2,3,3,2];
([],1) -> [1];
([0,3],2) -> [0,3,2];
([0],3) -> [0,3];
([0,1,0],3) -> [0,1,0,3];
([0,3],0) -> [0,3,0];
([2,2],2) -> [2,2,2];
([3],2) -> [3,2];
([1,1],3) -> [1,1,3];

=================================
None
([0,1],1) -> [0,1,1];
([],2) -> [2];
([1,1,2],1) -> [1,1,2,1];
([0],2) -> [0,2];
([],0) -> [0];
([3,1,2],3) -> [3,1,2,3];
([],3) -> [3];
([2,1],0) -> [2,1,0];
([0],3) -> [0,3];
([1,0,2],2) -> [1,0,2,2];
([1],1) -> [1,1];
([2],1) -> [2,1];
([2,0,2],2) -> [2,0,2,2];
([1,1],0) -> [1,1,0];
([],1) -> [1];
([1,2,1],1) -> [1,2,1,1];
([1,3,3],0) -> [1,3,3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

2.4058 true

([2,1],3) -> [2,1,3];
([1,0],2) -> [1,0,2];
([2,2,1],3) -> [2,2,1,3];
([1],2) -> [1,2];
([2,1],2) -> [2,1,2];
([],2) -> [2];
([2,1,2],1) -> [2,1,2,1];
([],3) -> [3];
([3,1],0) -> [3,1,0];
([],1) -> [1];
([3,3],1) -> [3,3,1];
([3],0) -> [3,0];
([3,1,0],1) -> [3,1,0,1];
([0,0,3],1) -> [0,0,3,1];
([2],1) -> [2,1];
([0,2,1],2) -> [0,2,1,2];
([3,2,1],1) -> [3,2,1,1];
([0,0],0) -> [0,0,0];

=================================
None
([2],0) -> [2,0];
([],2) -> [2];
([0,0,1],1) -> [0,0,1,1];
([],1) -> [1];
([],3) -> [3];
([1,3,3],2) -> [1,3,3,2];
([3],2) -> [3,2];
([3,0],3) -> [3,0,3];
([1,1,3],0) -> [1,1,3,0];
([],0) -> [0];
([1],2) -> [1,2];
([2],1) -> [2,1];
([0],3) -> [0,3];
([0,0],3) -> [0,0,3];
([1],0) -> [1,0];
([0,2,0],2) -> [0,2,0,2];
([0,2],0) -> [0,2,0];
([0,2,0],3) -> [0,2,0,3];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0314 true

([],2) -> [2];
([2,3,2],0) -> [2,3,2,0];
([2],3) -> [2,3];
([],3) -> [3];
([2,3,1],3) -> [2,3,1,3];
([0,2,1],3) -> [0,2,1,3];
([2,0,1],3) -> [2,0,1,3];
([3,3],2) -> [3,3,2];
([0,3,3],2) -> [0,3,3,2];
([0],0) -> [0,0];
([1],2) -> [1,2];
([2,2,3],0) -> [2,2,3,0];
([2],0) -> [2,0];
([],0) -> [0];
([3],2) -> [3,2];
([1,1],3) -> [1,1,3];
([1,2,1],3) -> [1,2,1,3];
([1,1,3],0) -> [1,1,3,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.9564 true

([2,3,1],1) -> [2,3,1,1];
([3],3) -> [3,3];
([3,1,3],1) -> [3,1,3,1];
([3],1) -> [3,1];
([],0) -> [0];
([],3) -> [3];
([1,1],1) -> [1,1,1];
([3],0) -> [3,0];
([0,3],0) -> [0,3,0];
([1,1,3],0) -> [1,1,3,0];
([3],2) -> [3,2];
([1,1],3) -> [1,1,3];
([2],2) -> [2,2];
([],2) -> [2];
([2,0,1],3) -> [2,0,1,3];
([0,3],3) -> [0,3,3];
([0,1,1],2) -> [0,1,1,2];
([0],2) -> [0,2];

=================================
None
([2,0,0],1) -> [2,0,0,1];
([0,1,2],0) -> [0,1,2,0];
([1,1],0) -> [1,1,0];
([0,3],2) -> [0,3,2];
([2,1,1],1) -> [2,1,1,1];
([],2) -> [2];
([1,3,1],0) -> [1,3,1,0];
([2,0],1) -> [2,0,1];
([1,1,3],1) -> [1,1,3,1];
([3],1) -> [3,1];
([1,0],1) -> [1,0,1];
([2],1) -> [2,1];
([0],3) -> [0,3];
([],0) -> [0];
([2,3],1) -> [2,3,1];
([2,2,3],0) -> [2,2,3,0];
([2],3) -> [2,3];
([2,0,3],2) -> [2,0,3,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

114.2816 true

([],3) -> [3];
([3,2],0) -> [3,2,0];
([0,1,2],1) -> [0,1,2,1];
([1],0) -> [1,0];
([0],1) -> [0,1];
([2,1,0],1) -> [2,1,0,1];
([0,2,1],2) -> [0,2,1,2];
([0,0],2) -> [0,0,2];
([],0) -> [0];
([0,0],0) -> [0,0,0];
([1,0],3) -> [1,0,3];
([2,1,1],3) -> [2,1,1,3];
([1,1,2],1) -> [1,1,2,1];
([0,2],2) -> [0,2,2];
([3],3) -> [3,3];
([2],3) -> [2,3];
([2],0) -> [2,0];
([0,2],1) -> [0,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2497 true

([],1) -> [1];
([],0) -> [0];
([0],1) -> [0,1];
([],3) -> [3];
([3],2) -> [3,2];
([0],0) -> [0,0];
([3,2],0) -> [3,2,0];
([0,3],1) -> [0,3,1];
([1,0],3) -> [1,0,3];
([],2) -> [2];
([0],2) -> [0,2];
([0,0,3],3) -> [0,0,3,3];
([1,1,1],1) -> [1,1,1,1];
([2],1) -> [2,1];
([1,1,3],0) -> [1,1,3,0];
([0,3,0],3) -> [0,3,0,3];
([1,2,0],1) -> [1,2,0,1];
([0,2],0) -> [0,2,0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1956 true

([2,3,1],0) -> [2,3,1,0];
([1],0) -> [1,0];
([],0) -> [0];
([1,0],1) -> [1,0,1];
([3],3) -> [3,3];
([0,3],3) -> [0,3,3];
([0,1],2) -> [0,1,2];
([],3) -> [3];
([3],0) -> [3,0];
([3,2,1],1) -> [3,2,1,1];
([2],1) -> [2,1];
([3,3,1],2) -> [3,3,1,2];
([],2) -> [2];
([3,1,3],1) -> [3,1,3,1];
([0],1) -> [0,1];
([],1) -> [1];
([3,1],1) -> [3,1,1];
([3,1,1],2) -> [3,1,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.3728 true

([3],3) -> [3,3];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([3],0) -> [3,0];
([3,2,2],3) -> [3,2,2,3];
([],3) -> [3];
([3],2) -> [3,2];
([0,2],1) -> [0,2,1];
([2,1],1) -> [2,1,1];
([],0) -> [0];
([0],3) -> [0,3];
([0,2],0) -> [0,2,0];
([3,2],3) -> [3,2,3];
([3,1],0) -> [3,1,0];
([3,1,3],3) -> [3,1,3,3];
([3,3,0],2) -> [3,3,0,2];
([3,2],1) -> [3,2,1];
([1],2) -> [1,2];

=================================
None
([0],3) -> [0,3];
([2,3],1) -> [2,3,1];
([1,3],1) -> [1,3,1];
([],0) -> [0];
([1,0],1) -> [1,0,1];
([],1) -> [1];
([2],3) -> [2,3];
([1,3],3) -> [1,3,3];
([1,2,1],0) -> [1,2,1,0];
([0,1],1) -> [0,1,1];
([0,1],2) -> [0,1,2];
([3,3,0],0) -> [3,3,0,0];
([1,0,2],0) -> [1,0,2,0];
([0,3,1],1) -> [0,3,1,1];
([2],0) -> [2,0];
([2,2,0],1) -> [2,2,0,1];
([0,2],2) -> [0,2,2];
([1,3,3],2) -> [1,3,3,2];

=================================
None
([3,1],1) -> [3,1,1];
([],1) -> [1];
([1,3],0) -> [1,3,0];
([0],3) -> [0,3];
([3],2) -> [3,2];
([2],1) -> [2,1];
([],0) -> [0];
([3,3],0) -> [3,3,0];
([2],3) -> [2,3];
([1,3],1) -> [1,3,1];
([1,3,2],1) -> [1,3,2,1];
([2,0,1],3) -> [2,0,1,3];
([],2) -> [2];
([0],1) -> [0,1];
([3],3) -> [3,3];
([0,2,2],3) -> [0,2,2,3];
([3,2],0) -> [3,2,0];
([2],2) -> [2,2];
([2,3],2) -> [2,3,2];

=================================
None
([1,3,3],2) -> [1,3,3,2];
([2,0],3) -> [2,0,3];
([3],1) -> [3,1];
([0,2,1],3) -> [0,2,1,3];
([1,2],0) -> [1,2,0];
([0,1],3) -> [0,1,3];
([1],2) -> [1,2];
([3],0) -> [3,0];
([0,3,2],0) -> [0,3,2,0];
([],3) -> [3];
([3],3) -> [3,3];
([3,2],2) -> [3,2,2];
([1],3) -> [1,3];
([],2) -> [2];
([2,2],3) -> [2,2,3];
([2,1,2],0) -> [2,1,2,0];
([0,3,3],1) -> [0,3,3,1];
([0],1) -> [0,1];
([3,2],1) -> [3,2,1];

=================================
None
([2,2],0) -> [2,2,0];
([3],1) -> [3,1];
([2],0) -> [2,0];
([1],0) -> [1,0];
([],0) -> [0];
([1,1,2],3) -> [1,1,2,3];
([],3) -> [3];
([2,0],0) -> [2,0,0];
([3],0) -> [3,0];
([3,0],1) -> [3,0,1];
([],2) -> [2];
([],1) -> [1];
([3,2],0) -> [3,2,0];
([3,2,0],3) -> [3,2,0,3];
([0,3,1],1) -> [0,3,1,1];
([3,3,3],3) -> [3,3,3,3];
([0],3) -> [0,3];
([0],0) -> [0,0];
([1,1],2) -> [1,1,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1150 true

([1,1],3) -> [1,1,3];
([3],3) -> [3,3];
([0,3],1) -> [0,3,1];
([],1) -> [1];
([1,0],2) -> [1,0,2];
([1,0],3) -> [1,0,3];
([],0) -> [0];
([0,3,3],1) -> [0,3,3,1];
([],3) -> [3];
([1,2,0],1) -> [1,2,0,1];
([1,3,3],3) -> [1,3,3,3];
([0,3,1],1) -> [0,3,1,1];
([0],0) -> [0,0];
([],2) -> [2];
([0,0],0) -> [0,0,0];
([3],1) -> [3,1];
([1,1,1],1) -> [1,1,1,1];
([2,1],3) -> [2,1,3];
([2,2],1) -> [2,2,1];

=================================
None
([0,2],3) -> [0,2,3];
([1,2,3],3) -> [1,2,3,3];
([],0) -> [0];
([],1) -> [1];
([1,2,0],3) -> [1,2,0,3];
([3,2,2],3) -> [3,2,2,3];
([0,2],0) -> [0,2,0];
([0,1,3],0) -> [0,1,3,0];
([],3) -> [3];
([],2) -> [2];
([1],2) -> [1,2];
([2,0],2) -> [2,0,2];
([2],2) -> [2,2];
([3,2,2],2) -> [3,2,2,2];
([1,0],1) -> [1,0,1];
([3],0) -> [3,0];
([2,2],3) -> [2,2,3];
([1,2],0) -> [1,2,0];
([1,1,2],3) -> [1,1,2,3];

=================================
None
([2,0],2) -> [2,0,2];
([1,0],1) -> [1,0,1];
([3],0) -> [3,0];
([2],0) -> [2,0];
([2,1],1) -> [2,1,1];
([2,0],1) -> [2,0,1];
([3,3],2) -> [3,3,2];
([3],3) -> [3,3];
([3,1,1],0) -> [3,1,1,0];
([],3) -> [3];
([],2) -> [2];
([1],2) -> [1,2];
([],1) -> [1];
([3],1) -> [3,1];
([3,0,0],1) -> [3,0,0,1];
([],0) -> [0];
([1],1) -> [1,1];
([1,3,1],3) -> [1,3,1,3];
([1,1],3) -> [1,1,3];

=================================
None
([],1) -> [1];
([0],2) -> [0,2];
([2,1,3],1) -> [2,1,3,1];
([1,2,2],2) -> [1,2,2,2];
([0,1],0) -> [0,1,0];
([2],2) -> [2,2];
([],3) -> [3];
([3,3,2],3) -> [3,3,2,3];
([],2) -> [2];
([2,2],2) -> [2,2,2];
([0,0],2) -> [0,0,2];
([0,0,1],0) -> [0,0,1,0];
([1,0,0],3) -> [1,0,0,3];
([2,0,0],0) -> [2,0,0,0];
([0],0) -> [0,0];
([0,3,3],0) -> [0,3,3,0];
([],0) -> [0];
([0,0],1) -> [0,0,1];
([1,3,2],1) -> [1,3,2,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1470 true

([0,1,3],2) -> [0,1,3,2];
([3],1) -> [3,1];
([],3) -> [3];
([1,1,1],0) -> [1,1,1,0];
([2,2],3) -> [2,2,3];
([0,3,3],1) -> [0,3,3,1];
([2],2) -> [2,2];
([2,3],3) -> [2,3,3];
([],1) -> [1];
([],2) -> [2];
([0],0) -> [0,0];
([1],2) -> [1,2];
([1],3) -> [1,3];
([0,3],2) -> [0,3,2];
([1,0],2) -> [1,0,2];
([0],1) -> [0,1];
([],0) -> [0];
([0,0],2) -> [0,0,2];
([0],3) -> [0,3];

=================================
None
([2,1,0],0) -> [2,1,0,0];
([1,3],3) -> [1,3,3];
([3,3],1) -> [3,3,1];
([1,2,0],3) -> [1,2,0,3];
([0],2) -> [0,2];
([1,2],3) -> [1,2,3];
([3,2,2],3) -> [3,2,2,3];
([1],2) -> [1,2];
([],3) -> [3];
([2,0,0],0) -> [2,0,0,0];
([2,0,3],0) -> [2,0,3,0];
([],1) -> [1];
([1,2],0) -> [1,2,0];
([2,1],3) -> [2,1,3];
([3],0) -> [3,0];
([],0) -> [0];
([1,1,2],2) -> [1,1,2,2];
([0,1,2],2) -> [0,1,2,2];
([2,1],2) -> [2,1,2];

=================================
None
([0,1],2) -> [0,1,2];
([0,3,2],0) -> [0,3,2,0];
([2,0],3) -> [2,0,3];
([],0) -> [0];
([3,1,2],1) -> [3,1,2,1];
([2,0],1) -> [2,0,1];
([2],2) -> [2,2];
([3],3) -> [3,3];
([1,0],3) -> [1,0,3];
([0],1) -> [0,1];
([0,3,2],3) -> [0,3,2,3];
([0,2,3],3) -> [0,2,3,3];
([0,2],1) -> [0,2,1];
([0],2) -> [0,2];
([2,3,0],0) -> [2,3,0,0];
([1,0],0) -> [1,0,0];
([2],0) -> [2,0];
([1],3) -> [1,3];
([],2) -> [2];

=================================
None
([0,2,0],3) -> [0,2,0,3];
([],3) -> [3];
([],1) -> [1];
([1,2,2],0) -> [1,2,2,0];
([1],1) -> [1,1];
([],0) -> [0];
([3,2,1],0) -> [3,2,1,0];
([0],0) -> [0,0];
([2,0],3) -> [2,0,3];
([3,0,3],0) -> [3,0,3,0];
([0,0],2) -> [0,0,2];
([3,3],3) -> [3,3,3];
([0,1,0],1) -> [0,1,0,1];
([1,0],0) -> [1,0,0];
([3],0) -> [3,0];
([3,0],0) -> [3,0,0];
([0,0],0) -> [0,0,0];
([3,2],1) -> [3,2,1];
([0],3) -> [0,3];
([1],0) -> [1,0];

=================================
None
([3],3) -> [3,3];
([3],2) -> [3,2];
([1],3) -> [1,3];
([],3) -> [3];
([2],2) -> [2,2];
([3],0) -> [3,0];
([2,0,2],1) -> [2,0,2,1];
([3,2,1],2) -> [3,2,1,2];
([2,2],1) -> [2,2,1];
([3,1,3],2) -> [3,1,3,2];
([],0) -> [0];
([0],2) -> [0,2];
([1,2],0) -> [1,2,0];
([],2) -> [2];
([1,3,3],0) -> [1,3,3,0];
([1,3],2) -> [1,3,2];
([0],0) -> [0,0];
([1],0) -> [1,0];
([3,2,2],1) -> [3,2,2,1];
([2,3,3],1) -> [2,3,3,1];

=================================
None
([],0) -> [0];
([],1) -> [1];
([1,3],1) -> [1,3,1];
([3],0) -> [3,0];
([0,0],3) -> [0,0,3];
([1],3) -> [1,3];
([0,1],0) -> [0,1,0];
([1,1,0],0) -> [1,1,0,0];
([1,3,2],0) -> [1,3,2,0];
([1],0) -> [1,0];
([0],0) -> [0,0];
([3,1,0],0) -> [3,1,0,0];
([1,2,3],2) -> [1,2,3,2];
([3],3) -> [3,3];
([2,2],1) -> [2,2,1];
([1],1) -> [1,1];
([3,1,2],3) -> [3,1,2,3];
([0],2) -> [0,2];
([2,0,3],2) -> [2,0,3,2];
([3],1) -> [3,1];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6721 true

([2],2) -> [2,2];
([0,3,3],3) -> [0,3,3,3];
([],3) -> [3];
([2,0,0],1) -> [2,0,0,1];
([1],3) -> [1,3];
([0,3,3],0) -> [0,3,3,0];
([3,3,0],0) -> [3,3,0,0];
([1],2) -> [1,2];
([1,3],3) -> [1,3,3];
([1,3],2) -> [1,3,2];
([0,1,0],3) -> [0,1,0,3];
([],2) -> [2];
([2],1) -> [2,1];
([3,2],0) -> [3,2,0];
([2,0],1) -> [2,0,1];
([0,0],3) -> [0,0,3];
([3,1,3],3) -> [3,1,3,3];
([],1) -> [1];
([0,2],3) -> [0,2,3];
([2,2],1) -> [2,2,1];

=================================
None
([2,1,1],0) -> [2,1,1,0];
([],3) -> [3];
([2,2],0) -> [2,2,0];
([2],3) -> [2,3];
([],1) -> [1];
([1,3],1) -> [1,3,1];
([3,0],3) -> [3,0,3];
([],0) -> [0];
([0,3,0],1) -> [0,3,0,1];
([0,2],2) -> [0,2,2];
([2],0) -> [2,0];
([1],2) -> [1,2];
([3],3) -> [3,3];
([1,1],3) -> [1,1,3];
([1,0,3],0) -> [1,0,3,0];
([2],2) -> [2,2];
([],2) -> [2];
([3,0],2) -> [3,0,2];
([0],3) -> [0,3];
([1,0,0],2) -> [1,0,0,2];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8533 true

([],1) -> [1];
([0,0,3],1) -> [0,0,3,1];
([3,1,2],1) -> [3,1,2,1];
([1,3],2) -> [1,3,2];
([1],2) -> [1,2];
([1,1,1],2) -> [1,1,1,2];
([3,3,2],1) -> [3,3,2,1];
([],0) -> [0];
([1,1,3],0) -> [1,1,3,0];
([0],0) -> [0,0];
([],3) -> [3];
([2,1,1],0) -> [2,1,1,0];
([2,1],0) -> [2,1,0];
([2,2,2],2) -> [2,2,2,2];
([2,2],1) -> [2,2,1];
([2],0) -> [2,0];
([2],2) -> [2,2];
([3,3,0],1) -> [3,3,0,1];
([0,1,2],1) -> [0,1,2,1];
([1],0) -> [1,0];

=================================
None
([1,0],3) -> [1,0,3];
([0,2,0],1) -> [0,2,0,1];
([3,2],2) -> [3,2,2];
([3],3) -> [3,3];
([],3) -> [3];
([2,0,2],2) -> [2,0,2,2];
([],0) -> [0];
([],2) -> [2];
([1,2,2],3) -> [1,2,2,3];
([2],3) -> [2,3];
([0],3) -> [0,3];
([1,2],1) -> [1,2,1];
([3],1) -> [3,1];
([2,0],0) -> [2,0,0];
([1],3) -> [1,3];
([0],2) -> [0,2];
([3,0],3) -> [3,0,3];
([2,2,0],1) -> [2,2,0,1];
([2,3],1) -> [2,3,1];
([0,3,1],2) -> [0,3,1,2];

=================================
None
([2],2) -> [2,2];
([0,0,1],1) -> [0,0,1,1];
([1],3) -> [1,3];
([0,1,3],0) -> [0,1,3,0];
([],2) -> [2];
([1],0) -> [1,0];
([1,3,1],2) -> [1,3,1,2];
([3],1) -> [3,1];
([0,3,3],3) -> [0,3,3,3];
([3,2],0) -> [3,2,0];
([],3) -> [3];
([1],2) -> [1,2];
([1,0],1) -> [1,0,1];
([],1) -> [1];
([0,2],3) -> [0,2,3];
([3],0) -> [3,0];
([1,1,3],3) -> [1,1,3,3];
([1,3,3],3) -> [1,3,3,3];
([2,0],2) -> [2,0,2];
([],0) -> [0];

=================================
None
([1,1],3) -> [1,1,3];
([2],3) -> [2,3];
([0],1) -> [0,1];
([3,0],0) -> [3,0,0];
([3],1) -> [3,1];
([2,0,0],0) -> [2,0,0,0];
([2,1],3) -> [2,1,3];
([],3) -> [3];
([0,2],2) -> [0,2,2];
([1],2) -> [1,2];
([3,0],1) -> [3,0,1];
([],1) -> [1];
([2,3],1) -> [2,3,1];
([1,3,2],1) -> [1,3,2,1];
([3,0],2) -> [3,0,2];
([0,1],2) -> [0,1,2];
([1,2],3) -> [1,2,3];
([],2) -> [2];
([2,0],2) -> [2,0,2];
([1],0) -> [1,0];

=================================
None
([3],3) -> [3,3];
([],0) -> [0];
([],3) -> [3];
([0,1,3],2) -> [0,1,3,2];
([2],0) -> [2,0];
([],1) -> [1];
([0,3,3],1) -> [0,3,3,1];
([1,2,1],3) -> [1,2,1,3];
([2,0,1],2) -> [2,0,1,2];
([0],1) -> [0,1];
([0],2) -> [0,2];
([1],3) -> [1,3];
([1],2) -> [1,2];
([],2) -> [2];
([2,1,1],0) -> [2,1,1,0];
([2,3,1],1) -> [2,3,1,1];
([1,1,1],2) -> [1,1,1,2];
([1,0],1) -> [1,0,1];
([0,0],3) -> [0,0,3];
([0],0) -> [0,0];

=================================
None
