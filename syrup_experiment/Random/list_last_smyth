[1,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 2 in list_last) : NatList -> NatOpt)
0.00216099999989 false false

[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 1 in list_last) : NatList -> NatOpt)
0.00191100000006 false false

[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00183399999992 false false

[3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 1 in list_last) : NatList -> NatOpt)
0.00179899999989 false false

[1,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 0 in list_last) : NatList -> NatOpt)
0.001757 false false

[1,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00180999999998 false false

[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> None in list_last) : NatList -> NatOpt)
0.00177800000006 false false

[2,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 1 in list_last) : NatList -> NatOpt)
0.00181500000008 false false

[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 2 in list_last) : NatList -> NatOpt)
0.00178400000004 false false

[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00297500000011 false false

[3] -> Some (3);
[2,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 3 in list_last) : NatList -> NatOpt)
0.00182999999993 false false

[2,3] -> Some (3);
[2,0,0] -> Some (0);

=================================
NOSOL

[0,3,1] -> Some (1);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_last = \xs -> Some 1 in list_last) : NatList -> NatOpt)
0.00195099999996 false false

[] -> None;
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (S (S (#2.1 y1))) in list_last) : NatList -> NatOpt)
0.0040469999999 false false

[2,2,2] -> Some (2);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.002925 false false

[0] -> Some (0);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 0 in list_last) : NatList -> NatOpt)
0.0026170000001 false false

[2] -> Some (2);
[3,1] -> Some (1);

=================================
NOSOL

[] -> None;
[0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 1 in list_last) : NatList -> NatOpt)
0.00262300000009 false false

[3,1,2] -> Some (2);
[2,1,1] -> Some (1);

=================================
NOSOL

[] -> None;
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some 0 in list_last) : NatList -> NatOpt)
0.00285200000008 false false

[1,2] -> Some (2);
[2,3] -> Some (3);
[1,0,3] -> Some (3);

=================================
NOSOL

[3,1] -> Some (1);
[1,2] -> Some (2);
[] -> None;

=================================
NOSOL

[] -> None;
[2,0,2] -> Some (2);
[1,0,0] -> Some (0);

=================================
NOSOL

[] -> None;
[1] -> Some (1);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.0027970000001 false false

[0,0,0] -> Some (0);
[0,1,0] -> Some (0);
[3,3,3] -> Some (3);

=================================
NOSOL

[] -> None;
[3] -> Some (3);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.0027090000001 false false

[0,3,3] -> Some (3);
[2,0,0] -> Some (0);
[0,3,0] -> Some (0);

=================================
NOSOL

[3,1,2] -> Some (2);
[3,3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case list_last (#2.2 y1) of
        Some y2 -> 
          Some y2

        None y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              None

            Cons y3 -> 
              Some (#2.1 y3) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case list_last (#2.2 y1) of
        Some y2 -> 
          Some y2

        None y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              None

            Cons y3 -> 
              Some (#2.1 y3) in list_last) : NatList -> NatOpt)
0.0522920000001 false false

[2] -> Some (2);
[3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some (#2.1 y1) in list_last) : NatList -> NatOpt)
0.00286899999992 false false

[1,3,2] -> Some (2);
[0] -> Some (0);
[0,1] -> Some (1);

=================================
NOSOL

[] -> None;
[1,1] -> Some (1);
[2,1] -> Some (1);
[2,0,3] -> Some (3);

=================================
NOSOL

[0,3,0] -> Some (0);
[2,3] -> Some (3);
[] -> None;
[2,2] -> Some (2);

=================================
NOSOL

[1,1] -> Some (1);
[0] -> Some (0);
[1,3] -> Some (3);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            0

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00709099999995 false true

[] -> None;
[3,1,0] -> Some (0);
[3,0,1] -> Some (1);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00634300000002 true true

[2,3,3] -> Some (3);
[] -> None;
[3,0,2] -> Some (2);
[2,3,2] -> Some (2);

=================================
NOSOL

[2] -> Some (2);
[3,0] -> Some (0);
[1,3,3] -> Some (3);
[2,1] -> Some (1);

=================================
NOSOL

[3,1] -> Some (1);
[2,3] -> Some (3);
[3] -> Some (3);
[2] -> Some (2);

=================================
NOSOL

[0] -> Some (0);
[3,3,2] -> Some (2);
[] -> None;
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00975900000003 true true

[0,0] -> Some (0);
[1,0] -> Some (0);
[1,1,2] -> Some (2);
[3,3,3] -> Some (3);

=================================
NOSOL

[1,3,3] -> Some (3);
[3,0,3] -> Some (3);
[1,0] -> Some (0);
[3] -> Some (3);

=================================
NOSOL

[2] -> Some (2);
[3] -> Some (3);
[3,1] -> Some (1);
[] -> None;
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00652300000002 false true

[0,0,2] -> Some (2);
[2,2] -> Some (2);
[0] -> Some (0);
[3,0] -> Some (0);
[1] -> Some (1);

=================================
NOSOL

[1,1,2] -> Some (2);
[3,3] -> Some (3);
[0,3,3] -> Some (3);
[1,0] -> Some (0);
[0,0,1] -> Some (1);

=================================
NOSOL

[0,3,1] -> Some (1);
[3,3] -> Some (3);
[0,0] -> Some (0);
[0] -> Some (0);
[3] -> Some (3);

=================================
NOSOL

[0] -> Some (0);
[3,1,3] -> Some (3);
[0,2,1] -> Some (1);
[] -> None;
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00710099999992 true true

[2] -> Some (2);
[] -> None;
[0,0,0] -> Some (0);
[1,0,3] -> Some (3);
[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00689200000011 true true

[1] -> Some (1);
[2,0,3] -> Some (3);
[] -> None;
[3,3,1] -> Some (1);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00644800000009 true true

[1] -> Some (1);
[0] -> Some (0);
[] -> None;
[3,2] -> Some (2);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0076610000001 false true

[0,0,2] -> Some (2);
[2] -> Some (2);
[2,0] -> Some (0);
[2,1] -> Some (1);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00691499999994 true true

[1,2,2] -> Some (2);
[] -> None;
[1,0,0] -> Some (0);
[0,2] -> Some (2);
[2,2,0] -> Some (0);

=================================
NOSOL

[2] -> Some (2);
[2,3] -> Some (3);
[1,1,0] -> Some (0);
[1,3,1] -> Some (1);
[0] -> Some (0);
[] -> None;

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0068940000001 true true

[3,2,1] -> Some (1);
[0,1] -> Some (1);
[0] -> Some (0);
[1] -> Some (1);
[] -> None;
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00703999999996 false true

[3,0] -> Some (0);
[2] -> Some (2);
[] -> None;
[3,1] -> Some (1);
[0,3] -> Some (3);
[1,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00686599999995 true true

[] -> None;
[1,0] -> Some (0);
[3,1] -> Some (1);
[0] -> Some (0);
[2,2] -> Some (2);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00752800000009 true true

[0,2] -> Some (2);
[] -> None;
[2,3,1] -> Some (1);
[3,1,0] -> Some (0);
[0,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0075690000001 true true

[3,1,3] -> Some (3);
[0,1] -> Some (1);
[1,0] -> Some (0);
[] -> None;
[3,2,3] -> Some (3);
[1,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Some 1

        S y2 -> 
          Some
            (case y2 of
              Z y3 -> 
                0

              S y3 -> 
                #2.1 y1) in list_last) : NatList -> NatOpt)
0.0298869999999 false false

[] -> None;
[2,1] -> Some (1);
[2] -> Some (2);
[0,3] -> Some (3);
[0,1] -> Some (1);
[2,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00767300000007 true true

[] -> None;
[1,3,1] -> Some (1);
[2,0] -> Some (0);
[0,3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.006799 true true

[] -> None;
[0] -> Some (0);
[2,0] -> Some (0);
[0,1] -> Some (1);
[3,1,2] -> Some (2);
[3,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00685300000009 true true

[0] -> Some (0);
[2,2,3] -> Some (3);
[3,3,3] -> Some (3);
[2,1] -> Some (1);
[1,2,0] -> Some (0);
[0,3] -> Some (3);

=================================
NOSOL

[0,1,2] -> Some (2);
[2] -> Some (2);
[3] -> Some (3);
[] -> None;
[3,1,3] -> Some (3);
[1] -> Some (1);
[1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00837700000011 true true

[3] -> Some (3);
[] -> None;
[1] -> Some (1);
[3,3] -> Some (3);
[1,2,1] -> Some (1);
[2,2] -> Some (2);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00627000000009 true true

[2] -> Some (2);
[3,0,2] -> Some (2);
[3] -> Some (3);
[2,1,0] -> Some (0);
[0,0] -> Some (0);
[3,1] -> Some (1);
[0,2] -> Some (2);

=================================
NOSOL

[1,3] -> Some (3);
[] -> None;
[2] -> Some (2);
[1] -> Some (1);
[1,1] -> Some (1);
[2,2] -> Some (2);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00742100000002 false true

[2,0] -> Some (0);
[3,1] -> Some (1);
[0] -> Some (0);
[] -> None;
[3,0,2] -> Some (2);
[0,1] -> Some (1);
[2,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00719099999992 true true

[2,2] -> Some (2);
[1,3] -> Some (3);
[1,0,3] -> Some (3);
[2,1,1] -> Some (1);
[1,1,1] -> Some (1);
[0,0] -> Some (0);
[] -> None;

=================================
NOSOL

[] -> None;
[1,0,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[1,2,3] -> Some (3);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.007024 true true

[0] -> Some (0);
[2] -> Some (2);
[0,1] -> Some (1);
[1,0] -> Some (0);
[1,2,2] -> Some (2);
[] -> None;
[3,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00695999999994 true true

[0] -> Some (0);
[0,1] -> Some (1);
[3,3] -> Some (3);
[] -> None;
[3,2,3] -> Some (3);
[2,0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00688100000002 true true

[1,2] -> Some (2);
[3,3] -> Some (3);
[1,2,2] -> Some (2);
[2,1,3] -> Some (3);
[3,1,3] -> Some (3);
[1] -> Some (1);
[1,0] -> Some (0);

=================================
NOSOL

[0,0] -> Some (0);
[3,2,3] -> Some (3);
[2,0,0] -> Some (0);
[0,0,1] -> Some (1);
[0,2] -> Some (2);
[0,2,2] -> Some (2);
[] -> None;
[3,0,0] -> Some (0);

=================================
NOSOL

[0,0,3] -> Some (3);
[1] -> Some (1);
[2] -> Some (2);
[0] -> Some (0);
[3,2] -> Some (2);
[3,0,3] -> Some (3);
[3,0] -> Some (0);
[0,2] -> Some (2);

=================================
NOSOL

[1,3] -> Some (3);
[] -> None;
[0,1,2] -> Some (2);
[1] -> Some (1);
[0,2,2] -> Some (2);
[1,1,1] -> Some (1);
[3,0] -> Some (0);
[1,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00703900000008 true true

[0,3,3] -> Some (3);
[2,0,2] -> Some (2);
[3,2,0] -> Some (0);
[0] -> Some (0);
[1,1] -> Some (1);
[0,0,1] -> Some (1);
[2] -> Some (2);
[0,0] -> Some (0);

=================================
NOSOL

[0] -> Some (0);
[0,3,1] -> Some (1);
[] -> None;
[1] -> Some (1);
[3,1,2] -> Some (2);
[2,2,3] -> Some (3);
[3] -> Some (3);
[0,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00788299999999 true true

[] -> None;
[1,2,3] -> Some (3);
[3] -> Some (3);
[1,2,1] -> Some (1);
[0,3] -> Some (3);
[2,2,1] -> Some (1);
[1] -> Some (1);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00783799999999 true true

[2,3] -> Some (3);
[] -> None;
[1,2,1] -> Some (1);
[1,2] -> Some (2);
[0,2,0] -> Some (0);
[0,1] -> Some (1);
[3] -> Some (3);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00772000000006 true true

[] -> None;
[2,2] -> Some (2);
[2,3,1] -> Some (1);
[2,3,0] -> Some (0);
[2,0,0] -> Some (0);
[1] -> Some (1);
[0,0] -> Some (0);
[0,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00715500000001 true true

[1,1] -> Some (1);
[2,1] -> Some (1);
[3] -> Some (3);
[3,1,2] -> Some (2);
[0] -> Some (0);
[1,2] -> Some (2);
[2] -> Some (2);
[2,0,2] -> Some (2);

=================================
NOSOL

[2,1] -> Some (1);
[3,3] -> Some (3);
[] -> None;
[0] -> Some (0);
[1] -> Some (1);
[1,0] -> Some (0);
[1,1] -> Some (1);
[0,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00742300000002 true true

[] -> None;
[2,3,0] -> Some (0);
[3,2] -> Some (2);
[1,0] -> Some (0);
[2,2] -> Some (2);
[0,1] -> Some (1);
[3] -> Some (3);
[2,1] -> Some (1);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00754099999995 true true

[3,3] -> Some (3);
[] -> None;
[2,2] -> Some (2);
[2,1,3] -> Some (3);
[3] -> Some (3);
[3,1] -> Some (1);
[1,2,2] -> Some (2);
[2,0,3] -> Some (3);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00728200000003 true true

[0,1,1] -> Some (1);
[3,0] -> Some (0);
[] -> None;
[2] -> Some (2);
[3,0,1] -> Some (1);
[1] -> Some (1);
[3,1] -> Some (1);
[1,3,2] -> Some (2);
[2,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00713599999995 true true

[2,0,3] -> Some (3);
[] -> None;
[1,3,2] -> Some (2);
[2,0,2] -> Some (2);
[3] -> Some (3);
[2,0] -> Some (0);
[2,2,0] -> Some (0);
[2,3] -> Some (3);
[3,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00660700000003 true true

[1] -> Some (1);
[] -> None;
[2,0,0] -> Some (0);
[3,1,0] -> Some (0);
[0,2,1] -> Some (1);
[2] -> Some (2);
[1,2,3] -> Some (3);
[0] -> Some (0);
[3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0073809999999 true true

[] -> None;
[3,3] -> Some (3);
[1] -> Some (1);
[1,2] -> Some (2);
[1,0] -> Some (0);
[0,0] -> Some (0);
[3] -> Some (3);
[2,3] -> Some (3);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      Some
        (case #2.2 y1 of
          Nil y2 -> 
            #2.1 y1

          Cons y2 -> 
            #2.1 y2) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00764699999991 false true

[3,0] -> Some (0);
[3] -> Some (3);
[0,2,1] -> Some (1);
[3,2,1] -> Some (1);
[0] -> Some (0);
[] -> None;
[0,0,1] -> Some (1);
[1,1] -> Some (1);
[3,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00707200000011 true true

[] -> None;
[3,2,1] -> Some (1);
[1,0] -> Some (0);
[0] -> Some (0);
[1,1,1] -> Some (1);
[1,3] -> Some (3);
[3,3,2] -> Some (2);
[3,2] -> Some (2);
[3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00760700000001 true true

[0,1,1] -> Some (1);
[2] -> Some (2);
[1,3] -> Some (3);
[0,1] -> Some (1);
[] -> None;
[3,2] -> Some (2);
[2,2,0] -> Some (0);
[3,0,1] -> Some (1);
[2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00713900000005 true true

[3,0,2] -> Some (2);
[2] -> Some (2);
[3,2] -> Some (2);
[0,1] -> Some (1);
[1,3,3] -> Some (3);
[] -> None;
[3] -> Some (3);
[1] -> Some (1);
[1,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00845099999992 true true

[2,1] -> Some (1);
[0] -> Some (0);
[] -> None;
[1,1] -> Some (1);
[1] -> Some (1);
[3,0,1] -> Some (1);
[1,1,2] -> Some (2);
[1,3] -> Some (3);
[2,2,0] -> Some (0);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00722399999995 true true

[2] -> Some (2);
[2,3] -> Some (3);
[0] -> Some (0);
[3] -> Some (3);
[] -> None;
[0,2,1] -> Some (1);
[0,0,0] -> Some (0);
[3,1,2] -> Some (2);
[2,0] -> Some (0);
[1,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00796999999989 true true

[] -> None;
[2,1,3] -> Some (3);
[2,1] -> Some (1);
[1,3,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[0,3,1] -> Some (1);
[3,2,0] -> Some (0);
[1,3,0] -> Some (0);
[2,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00785599999995 true true

[] -> None;
[2] -> Some (2);
[3,1] -> Some (1);
[3,0,3] -> Some (3);
[0,3,3] -> Some (3);
[0,1,1] -> Some (1);
[3,1,1] -> Some (1);
[2,2,3] -> Some (3);
[1,2] -> Some (2);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00822799999992 true true

[0] -> Some (0);
[3,0] -> Some (0);
[] -> None;
[2] -> Some (2);
[1,0,1] -> Some (1);
[3,3,2] -> Some (2);
[3] -> Some (3);
[0,2,2] -> Some (2);
[1,0] -> Some (0);
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00749700000006 true true

[] -> None;
[0,0,0] -> Some (0);
[1,2,2] -> Some (2);
[1] -> Some (1);
[2,2,3] -> Some (3);
[2,3] -> Some (3);
[3] -> Some (3);
[0,0] -> Some (0);
[2,0] -> Some (0);
[3,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00715199999991 true true

[1,1] -> Some (1);
[1] -> Some (1);
[] -> None;
[0,2] -> Some (2);
[0,0,2] -> Some (2);
[1,1,1] -> Some (1);
[0] -> Some (0);
[1,1,2] -> Some (2);
[1,2,3] -> Some (3);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0072990000001 true true

[2] -> Some (2);
[] -> None;
[3,1] -> Some (1);
[0] -> Some (0);
[3] -> Some (3);
[3,2] -> Some (2);
[2,2] -> Some (2);
[1] -> Some (1);
[1,2,3] -> Some (3);
[1,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00712300000009 true true

[2] -> Some (2);
[0] -> Some (0);
[] -> None;
[0,2,3] -> Some (3);
[3] -> Some (3);
[3,2] -> Some (2);
[0,0] -> Some (0);
[1,3,1] -> Some (1);
[3,3] -> Some (3);
[0,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00777599999992 true true

[] -> None;
[1,3,0] -> Some (0);
[3] -> Some (3);
[2,3,3] -> Some (3);
[1,1,1] -> Some (1);
[2] -> Some (2);
[1,3] -> Some (3);
[0] -> Some (0);
[1,1,2] -> Some (2);
[2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00749799999994 true true

[0] -> Some (0);
[] -> None;
[3,2] -> Some (2);
[3,3] -> Some (3);
[1,1,3] -> Some (3);
[1,1,2] -> Some (2);
[2] -> Some (2);
[3] -> Some (3);
[2,0,1] -> Some (1);
[2,2] -> Some (2);
[0,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0080640000001 true true

[0,3] -> Some (3);
[1] -> Some (1);
[1,2] -> Some (2);
[2,0] -> Some (0);
[0,2,3] -> Some (3);
[2,2,2] -> Some (2);
[3] -> Some (3);
[2,0,1] -> Some (1);
[3,3,0] -> Some (0);
[0,1] -> Some (1);
[3,0,1] -> Some (1);

=================================
NOSOL

[1] -> Some (1);
[] -> None;
[3,1,0] -> Some (0);
[0,1] -> Some (1);
[3] -> Some (3);
[2] -> Some (2);
[1,0,0] -> Some (0);
[0,2] -> Some (2);
[0] -> Some (0);
[3,1] -> Some (1);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00777500000004 true true

[] -> None;
[2,3,1] -> Some (1);
[2] -> Some (2);
[1,0] -> Some (0);
[2,3,0] -> Some (0);
[0] -> Some (0);
[1,3] -> Some (3);
[3] -> Some (3);
[2,1] -> Some (1);
[3,2] -> Some (2);
[1,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00726000000009 true true

[0] -> Some (0);
[] -> None;
[1,3,3] -> Some (3);
[1,1] -> Some (1);
[3] -> Some (3);
[2,1] -> Some (1);
[0,3,0] -> Some (0);
[0,0] -> Some (0);
[3,3] -> Some (3);
[2,3] -> Some (3);
[3,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00746299999992 true true

[3,2,0] -> Some (0);
[2,0] -> Some (0);
[] -> None;
[1,0,0] -> Some (0);
[2,0,0] -> Some (0);
[3,1,0] -> Some (0);
[2,2] -> Some (2);
[1,2] -> Some (2);
[2,3] -> Some (3);
[0,2,0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00812199999996 true true

[] -> None;
[0,1] -> Some (1);
[3] -> Some (3);
[1] -> Some (1);
[1,2,3] -> Some (3);
[0,3] -> Some (3);
[1,0,0] -> Some (0);
[1,1,3] -> Some (3);
[0,0,2] -> Some (2);
[0,1,2] -> Some (2);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00708699999996 true true

[0,0] -> Some (0);
[3] -> Some (3);
[3,2] -> Some (2);
[1,0,0] -> Some (0);
[3,3,0] -> Some (0);
[1,1,1] -> Some (1);
[] -> None;
[1] -> Some (1);
[1,2,0] -> Some (0);
[0,2] -> Some (2);
[2,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00733199999991 true true

[0] -> Some (0);
[3,2] -> Some (2);
[3,0] -> Some (0);
[0,3,2] -> Some (2);
[3] -> Some (3);
[3,1,0] -> Some (0);
[] -> None;
[2,1,3] -> Some (3);
[0,2,3] -> Some (3);
[1,2] -> Some (2);
[3,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00792999999999 true true

[0,3,0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[1,0] -> Some (0);
[1,1] -> Some (1);
[0,0,0] -> Some (0);
[0,1,2] -> Some (2);
[0,0] -> Some (0);
[0,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00733700000001 true true

[1,3] -> Some (3);
[] -> None;
[1] -> Some (1);
[0] -> Some (0);
[3,2,0] -> Some (0);
[2,0] -> Some (0);
[1,2] -> Some (2);
[3] -> Some (3);
[3,3,3] -> Some (3);
[3,3,0] -> Some (0);
[2] -> Some (2);
[2,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00754200000006 true true

[] -> None;
[1,2] -> Some (2);
[0,2] -> Some (2);
[0,1] -> Some (1);
[3,0] -> Some (0);
[2,2] -> Some (2);
[2,1] -> Some (1);
[3,2,1] -> Some (1);
[2] -> Some (2);
[2,2,1] -> Some (1);
[1,1] -> Some (1);
[2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00798400000008 true true

[1,0] -> Some (0);
[3,2] -> Some (2);
[2,3,0] -> Some (0);
[2] -> Some (2);
[1,2] -> Some (2);
[2,0,3] -> Some (3);
[0] -> Some (0);
[1] -> Some (1);
[3,3] -> Some (3);
[] -> None;
[1,1,2] -> Some (2);
[1,1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00737400000003 true true

[0,3,0] -> Some (0);
[] -> None;
[2] -> Some (2);
[2,0,2] -> Some (2);
[1] -> Some (1);
[2,1] -> Some (1);
[3,3] -> Some (3);
[0,2,0] -> Some (0);
[1,1] -> Some (1);
[1,3] -> Some (3);
[1,1,3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0124390000001 true true

[3,1] -> Some (1);
[] -> None;
[3] -> Some (3);
[2,3] -> Some (3);
[0,3,2] -> Some (2);
[1] -> Some (1);
[0] -> Some (0);
[0,1] -> Some (1);
[3,2] -> Some (2);
[2,1,0] -> Some (0);
[2] -> Some (2);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00735299999997 true true

[3] -> Some (3);
[0] -> Some (0);
[1,1,2] -> Some (2);
[] -> None;
[0,3] -> Some (3);
[2,1,0] -> Some (0);
[3,2,1] -> Some (1);
[0,2,0] -> Some (0);
[2] -> Some (2);
[0,1,2] -> Some (2);
[0,0,0] -> Some (0);
[0,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00799699999993 true true

[] -> None;
[2,0] -> Some (0);
[1,0] -> Some (0);
[3,2] -> Some (2);
[2] -> Some (2);
[3,2,1] -> Some (1);
[2,1,2] -> Some (2);
[0,3] -> Some (3);
[3] -> Some (3);
[3,3] -> Some (3);
[3,0] -> Some (0);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00804100000005 true true

[0] -> Some (0);
[2] -> Some (2);
[] -> None;
[3,1,0] -> Some (0);
[0,1] -> Some (1);
[3] -> Some (3);
[2,1] -> Some (1);
[2,2,2] -> Some (2);
[2,0] -> Some (0);
[1,3] -> Some (3);
[2,3,1] -> Some (1);
[3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00781200000006 true true

[] -> None;
[2,3] -> Some (3);
[2,2,3] -> Some (3);
[3] -> Some (3);
[0,1] -> Some (1);
[2] -> Some (2);
[1] -> Some (1);
[1,1] -> Some (1);
[0] -> Some (0);
[3,3] -> Some (3);
[3,0] -> Some (0);
[1,1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00711200000001 true true

[1,0] -> Some (0);
[3,3] -> Some (3);
[1,2,1] -> Some (1);
[] -> None;
[1] -> Some (1);
[2,0] -> Some (0);
[2] -> Some (2);
[3,2] -> Some (2);
[2,1] -> Some (1);
[1,0,0] -> Some (0);
[2,3,1] -> Some (1);
[1,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00709600000005 true true

[1] -> Some (1);
[3] -> Some (3);
[] -> None;
[3,3,2] -> Some (2);
[0,1] -> Some (1);
[2,0,3] -> Some (3);
[2] -> Some (2);
[3,1] -> Some (1);
[0,0,2] -> Some (2);
[3,2] -> Some (2);
[2,0] -> Some (0);
[2,3] -> Some (3);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00740900000005 true true

[] -> None;
[1,3,1] -> Some (1);
[3] -> Some (3);
[0,3] -> Some (3);
[2,2,1] -> Some (1);
[2] -> Some (2);
[1,1,1] -> Some (1);
[2,3] -> Some (3);
[1,1,2] -> Some (2);
[1] -> Some (1);
[2,0,2] -> Some (2);
[1,1] -> Some (1);
[3,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00831999999991 true true

[] -> None;
[3] -> Some (3);
[2,1] -> Some (1);
[2,3] -> Some (3);
[0,1] -> Some (1);
[2,0] -> Some (0);
[1,0] -> Some (0);
[1,1,3] -> Some (3);
[1,3,1] -> Some (1);
[2,2,1] -> Some (1);
[0,3] -> Some (3);
[3,1] -> Some (1);
[2,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00816499999996 true true

[3] -> Some (3);
[3,0,1] -> Some (1);
[] -> None;
[2,1,0] -> Some (0);
[0,2,0] -> Some (0);
[1] -> Some (1);
[1,2] -> Some (2);
[2,0] -> Some (0);
[0] -> Some (0);
[0,3] -> Some (3);
[1,0] -> Some (0);
[1,3] -> Some (3);
[0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00740900000005 true true

[] -> None;
[2,2,3] -> Some (3);
[1,3] -> Some (3);
[0,2,2] -> Some (2);
[3] -> Some (3);
[1,2] -> Some (2);
[2,2,0] -> Some (0);
[2,0] -> Some (0);
[3,2] -> Some (2);
[2,3] -> Some (3);
[0] -> Some (0);
[1] -> Some (1);
[2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0178149999999 true true

[] -> None;
[2,0,1] -> Some (1);
[2] -> Some (2);
[2,3,3] -> Some (3);
[3,3] -> Some (3);
[3] -> Some (3);
[0,2,0] -> Some (0);
[2,0] -> Some (0);
[0,0] -> Some (0);
[0] -> Some (0);
[0,3] -> Some (3);
[3,0,2] -> Some (2);
[0,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00730599999997 true true

[3] -> Some (3);
[1,0] -> Some (0);
[1] -> Some (1);
[2] -> Some (2);
[] -> None;
[0,1] -> Some (1);
[1,3,0] -> Some (0);
[0] -> Some (0);
[1,3] -> Some (3);
[0,3] -> Some (3);
[0,2,3] -> Some (3);
[2,3] -> Some (3);
[1,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00730500000009 true true

[] -> None;
[2,1,2] -> Some (2);
[1] -> Some (1);
[0] -> Some (0);
[1,0,3] -> Some (3);
[2] -> Some (2);
[0,3,1] -> Some (1);
[0,0] -> Some (0);
[1,0,1] -> Some (1);
[0,2] -> Some (2);
[0,0,2] -> Some (2);
[3,2,0] -> Some (0);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.030923 true true

[3] -> Some (3);
[2] -> Some (2);
[2,1] -> Some (1);
[] -> None;
[0,3,3] -> Some (3);
[3,3,3] -> Some (3);
[1] -> Some (1);
[1,1,3] -> Some (3);
[3,2,3] -> Some (3);
[3,0,2] -> Some (2);
[2,3] -> Some (3);
[0,0] -> Some (0);
[1,3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0163 true true

[3,3,2] -> Some (2);
[0] -> Some (0);
[1,0] -> Some (0);
[1,2] -> Some (2);
[] -> None;
[1] -> Some (1);
[1,3] -> Some (3);
[2] -> Some (2);
[1,3,1] -> Some (1);
[3,3] -> Some (3);
[2,1,0] -> Some (0);
[0,3] -> Some (3);
[1,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.015721 true true

[0,3] -> Some (3);
[3,3,1] -> Some (1);
[2,0] -> Some (0);
[] -> None;
[1] -> Some (1);
[0] -> Some (0);
[1,0] -> Some (0);
[3,1,2] -> Some (2);
[0,2,0] -> Some (0);
[0,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[0,0] -> Some (0);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00802999999996 true true

[] -> None;
[1] -> Some (1);
[0,0] -> Some (0);
[1,0] -> Some (0);
[0] -> Some (0);
[2,2,0] -> Some (0);
[2] -> Some (2);
[1,0,3] -> Some (3);
[2,2,3] -> Some (3);
[1,3,1] -> Some (1);
[2,1] -> Some (1);
[3] -> Some (3);
[3,1] -> Some (1);
[3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.007384 true true

[2] -> Some (2);
[1,2] -> Some (2);
[] -> None;
[1,2,1] -> Some (1);
[1,1,1] -> Some (1);
[3] -> Some (3);
[2,0,0] -> Some (0);
[0] -> Some (0);
[3,3,1] -> Some (1);
[1] -> Some (1);
[3,2] -> Some (2);
[3,3,3] -> Some (3);
[2,3,2] -> Some (2);
[3,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00755699999991 true true

[0,3,3] -> Some (3);
[1,1,3] -> Some (3);
[] -> None;
[2] -> Some (2);
[3] -> Some (3);
[2,2] -> Some (2);
[3,3,1] -> Some (1);
[0] -> Some (0);
[3,3] -> Some (3);
[3,2] -> Some (2);
[0,0] -> Some (0);
[0,2,0] -> Some (0);
[2,3,3] -> Some (3);
[0,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0076590000001 true true

[3,3] -> Some (3);
[2] -> Some (2);
[] -> None;
[1] -> Some (1);
[0,0] -> Some (0);
[3] -> Some (3);
[2,0] -> Some (0);
[2,1] -> Some (1);
[2,3] -> Some (3);
[0] -> Some (0);
[1,2] -> Some (2);
[0,1,1] -> Some (1);
[3,0] -> Some (0);
[1,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00753899999995 true true

[2,1] -> Some (1);
[] -> None;
[3] -> Some (3);
[0] -> Some (0);
[2] -> Some (2);
[0,2,0] -> Some (0);
[2,1,2] -> Some (2);
[2,0,0] -> Some (0);
[2,2,3] -> Some (3);
[1] -> Some (1);
[2,1,3] -> Some (3);
[1,1] -> Some (1);
[3,0,2] -> Some (2);
[3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00780200000008 true true

[3,3,0] -> Some (0);
[0,0] -> Some (0);
[2,1] -> Some (1);
[] -> None;
[1,0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[1,1,1] -> Some (1);
[2,3,0] -> Some (0);
[2,2] -> Some (2);
[3,2,2] -> Some (2);
[2,0] -> Some (0);
[2,0,3] -> Some (3);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00807200000008 true true

[] -> None;
[1] -> Some (1);
[0,0] -> Some (0);
[0,3,2] -> Some (2);
[3,2,1] -> Some (1);
[1,1,0] -> Some (0);
[1,2] -> Some (2);
[1,1,2] -> Some (2);
[3,0,3] -> Some (3);
[3,1,2] -> Some (2);
[2,2] -> Some (2);
[2,1,2] -> Some (2);
[2,1,0] -> Some (0);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00813100000005 true true

[] -> None;
[3,2,0] -> Some (0);
[0,1,2] -> Some (2);
[2,2] -> Some (2);
[1,2,1] -> Some (1);
[2,1,2] -> Some (2);
[3,3,2] -> Some (2);
[1,0,2] -> Some (2);
[2] -> Some (2);
[2,2,1] -> Some (1);
[1] -> Some (1);
[0,0] -> Some (0);
[1,2] -> Some (2);
[3,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00752499999999 true true

[] -> None;
[0,1,1] -> Some (1);
[3,2,1] -> Some (1);
[0] -> Some (0);
[2] -> Some (2);
[3] -> Some (3);
[1,2,1] -> Some (1);
[0,0] -> Some (0);
[3,3] -> Some (3);
[0,0,3] -> Some (3);
[0,0,0] -> Some (0);
[1] -> Some (1);
[2,2] -> Some (2);
[1,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00823700000001 true true

[1,0,1] -> Some (1);
[1,3] -> Some (3);
[0,1,2] -> Some (2);
[1] -> Some (1);
[2] -> Some (2);
[1,3,1] -> Some (1);
[0,3] -> Some (3);
[3,0,2] -> Some (2);
[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[2,2] -> Some (2);
[1,1,0] -> Some (0);
[1,1,3] -> Some (3);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0093710000001 true true

[1,0,3] -> Some (3);
[0,3,1] -> Some (1);
[0,3] -> Some (3);
[2,1] -> Some (1);
[1,2] -> Some (2);
[2] -> Some (2);
[1,1,3] -> Some (3);
[2,1,3] -> Some (3);
[2,3] -> Some (3);
[] -> None;
[3] -> Some (3);
[0] -> Some (0);
[2,2] -> Some (2);
[0,1,1] -> Some (1);
[3,0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00838599999997 true true

[] -> None;
[3] -> Some (3);
[2] -> Some (2);
[0] -> Some (0);
[0,1,3] -> Some (3);
[0,2] -> Some (2);
[0,0] -> Some (0);
[3,0] -> Some (0);
[3,2] -> Some (2);
[0,2,1] -> Some (1);
[3,3] -> Some (3);
[1] -> Some (1);
[1,3,2] -> Some (2);
[3,1,2] -> Some (2);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0136230000001 true true

[0,2] -> Some (2);
[0] -> Some (0);
[0,2,3] -> Some (3);
[] -> None;
[1,3,3] -> Some (3);
[0,0,0] -> Some (0);
[2,3,3] -> Some (3);
[3,2,2] -> Some (2);
[0,3] -> Some (3);
[1,0] -> Some (0);
[3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[1,1] -> Some (1);
[2,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.026063 true true

[0,3] -> Some (3);
[2,1,3] -> Some (3);
[0,0] -> Some (0);
[0] -> Some (0);
[3,1] -> Some (1);
[3,2,2] -> Some (2);
[0,0,0] -> Some (0);
[2] -> Some (2);
[] -> None;
[2,2] -> Some (2);
[0,1] -> Some (1);
[3] -> Some (3);
[2,0,1] -> Some (1);
[0,1,2] -> Some (2);
[1,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00749199999996 true true

[] -> None;
[0] -> Some (0);
[2,0] -> Some (0);
[3,3] -> Some (3);
[2,0,1] -> Some (1);
[0,1,1] -> Some (1);
[3,3,2] -> Some (2);
[0,3,2] -> Some (2);
[2,3] -> Some (3);
[1,2] -> Some (2);
[3,2] -> Some (2);
[2,2,3] -> Some (3);
[0,3] -> Some (3);
[2] -> Some (2);
[0,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0244909999999 true true

[] -> None;
[1,1,1] -> Some (1);
[2,3,1] -> Some (1);
[2,0,0] -> Some (0);
[1,0,0] -> Some (0);
[2,1] -> Some (1);
[3,1,0] -> Some (0);
[3,0,3] -> Some (3);
[2] -> Some (2);
[1] -> Some (1);
[0,0,0] -> Some (0);
[1,0,3] -> Some (3);
[0] -> Some (0);
[3,2] -> Some (2);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.013825 true true

[0] -> Some (0);
[2,2,0] -> Some (0);
[1,2,1] -> Some (1);
[] -> None;
[1] -> Some (1);
[0,0] -> Some (0);
[2,2] -> Some (2);
[2,1,3] -> Some (3);
[0,0,2] -> Some (2);
[3,1,1] -> Some (1);
[0,3] -> Some (3);
[3,1] -> Some (1);
[3,1,2] -> Some (2);
[1,3,3] -> Some (3);
[3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00837299999989 true true

[1] -> Some (1);
[0,3,0] -> Some (0);
[3,0] -> Some (0);
[1,0,2] -> Some (2);
[2] -> Some (2);
[0,1] -> Some (1);
[3,1,3] -> Some (3);
[3,0,3] -> Some (3);
[] -> None;
[2,3,2] -> Some (2);
[0,3] -> Some (3);
[2,2] -> Some (2);
[0,0] -> Some (0);
[1,0] -> Some (0);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00767199999996 true true

[2] -> Some (2);
[1,0,2] -> Some (2);
[] -> None;
[0,3,3] -> Some (3);
[3,2] -> Some (2);
[2,3] -> Some (3);
[0,2,1] -> Some (1);
[3] -> Some (3);
[0] -> Some (0);
[3,0,1] -> Some (1);
[1,0] -> Some (0);
[1,1,2] -> Some (2);
[3,0] -> Some (0);
[0,1,3] -> Some (3);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.013557 true true

[3,2] -> Some (2);
[3,0,0] -> Some (0);
[] -> None;
[1,0] -> Some (0);
[1,1,3] -> Some (3);
[3,0] -> Some (0);
[0,3] -> Some (3);
[0,0] -> Some (0);
[3,1,1] -> Some (1);
[2] -> Some (2);
[3] -> Some (3);
[3,0,2] -> Some (2);
[0,3,1] -> Some (1);
[1,2,3] -> Some (3);
[2,2,2] -> Some (2);
[2,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.016355 true true

[2,0,1] -> Some (1);
[3,3,0] -> Some (0);
[2] -> Some (2);
[1,3,2] -> Some (2);
[2,3] -> Some (3);
[3,0,1] -> Some (1);
[1] -> Some (1);
[] -> None;
[3] -> Some (3);
[0,2] -> Some (2);
[3,3,1] -> Some (1);
[0,3] -> Some (3);
[2,2,3] -> Some (3);
[2,1] -> Some (1);
[0] -> Some (0);
[1,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0226419999999 true true

[0,1,0] -> Some (0);
[3,1] -> Some (1);
[1] -> Some (1);
[0,3,1] -> Some (1);
[0] -> Some (0);
[3] -> Some (3);
[] -> None;
[0,1,1] -> Some (1);
[1,1,1] -> Some (1);
[0,0] -> Some (0);
[2,0] -> Some (0);
[1,3,1] -> Some (1);
[0,3,3] -> Some (3);
[2,0,0] -> Some (0);
[1,0] -> Some (0);
[0,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00835800000004 true true

[2,0] -> Some (0);
[3,0] -> Some (0);
[3,1,3] -> Some (3);
[] -> None;
[2,2] -> Some (2);
[2,2,2] -> Some (2);
[2] -> Some (2);
[2,1,3] -> Some (3);
[3] -> Some (3);
[0,0,3] -> Some (3);
[1,2] -> Some (2);
[3,3] -> Some (3);
[3,1] -> Some (1);
[3,3,3] -> Some (3);
[2,3] -> Some (3);
[0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00827600000002 true true

[3,0,3] -> Some (3);
[] -> None;
[1,1] -> Some (1);
[0,2] -> Some (2);
[1,2,2] -> Some (2);
[2,3] -> Some (3);
[0,3] -> Some (3);
[0,1] -> Some (1);
[3] -> Some (3);
[2] -> Some (2);
[1,3,0] -> Some (0);
[0,0,2] -> Some (2);
[3,0,1] -> Some (1);
[0] -> Some (0);
[0,0] -> Some (0);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0081090000001 true true

[0,1,0] -> Some (0);
[3,2,3] -> Some (3);
[0,3,0] -> Some (0);
[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[0,2] -> Some (2);
[3,0] -> Some (0);
[2,3] -> Some (3);
[2] -> Some (2);
[1,3,2] -> Some (2);
[1] -> Some (1);
[3,3] -> Some (3);
[1,3,1] -> Some (1);
[0,3] -> Some (3);
[3,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00824699999998 true true

[1,0] -> Some (0);
[3,0] -> Some (0);
[0] -> Some (0);
[0,2,1] -> Some (1);
[1,3,3] -> Some (3);
[] -> None;
[0,0,0] -> Some (0);
[0,1] -> Some (1);
[3,2] -> Some (2);
[0,1,2] -> Some (2);
[3,0,1] -> Some (1);
[2,1,1] -> Some (1);
[1] -> Some (1);
[2,2] -> Some (2);
[3,3,0] -> Some (0);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00863200000003 true true

[] -> None;
[1] -> Some (1);
[2,0] -> Some (0);
[1,0] -> Some (0);
[2] -> Some (2);
[3,3,0] -> Some (0);
[0,2] -> Some (2);
[0] -> Some (0);
[1,1,2] -> Some (2);
[3] -> Some (3);
[1,2] -> Some (2);
[0,1] -> Some (1);
[0,3] -> Some (3);
[3,3] -> Some (3);
[3,2,0] -> Some (0);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00885500000004 true true

[] -> None;
[2,3] -> Some (3);
[3] -> Some (3);
[3,0] -> Some (0);
[0,3,1] -> Some (1);
[3,3,1] -> Some (1);
[1,3] -> Some (3);
[2] -> Some (2);
[3,2] -> Some (2);
[1] -> Some (1);
[2,2,3] -> Some (3);
[3,3] -> Some (3);
[2,0,0] -> Some (0);
[2,1,0] -> Some (0);
[2,0,1] -> Some (1);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00811300000009 true true

[] -> None;
[1,1,3] -> Some (3);
[1,2] -> Some (2);
[2] -> Some (2);
[2,3,3] -> Some (3);
[2,1,1] -> Some (1);
[1,3] -> Some (3);
[3,1,3] -> Some (3);
[0,3,3] -> Some (3);
[3,1] -> Some (1);
[0,2,2] -> Some (2);
[2,0,3] -> Some (3);
[0,0,1] -> Some (1);
[3] -> Some (3);
[0] -> Some (0);
[1,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839599999995 true true

[] -> None;
[1,3,1] -> Some (1);
[0,2] -> Some (2);
[2,1,3] -> Some (3);
[2,1] -> Some (1);
[1,1,0] -> Some (0);
[3,3,3] -> Some (3);
[3,2] -> Some (2);
[2] -> Some (2);
[0,0] -> Some (0);
[2,0,1] -> Some (1);
[3,0] -> Some (0);
[1] -> Some (1);
[3] -> Some (3);
[3,2,1] -> Some (1);
[0,3] -> Some (3);
[1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00779299999999 true true

[3,1,2] -> Some (2);
[] -> None;
[2,3] -> Some (3);
[3,0] -> Some (0);
[0,1] -> Some (1);
[0,3] -> Some (3);
[2,0,3] -> Some (3);
[2] -> Some (2);
[0] -> Some (0);
[1] -> Some (1);
[2,2] -> Some (2);
[1,2,1] -> Some (1);
[1,1,3] -> Some (3);
[3] -> Some (3);
[2,2,3] -> Some (3);
[2,0,2] -> Some (2);
[1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00828200000001 true true

[0,0] -> Some (0);
[] -> None;
[1,1] -> Some (1);
[3] -> Some (3);
[1,1,0] -> Some (0);
[3,0,1] -> Some (1);
[2,2] -> Some (2);
[1] -> Some (1);
[0] -> Some (0);
[2,1] -> Some (1);
[0,1] -> Some (1);
[2] -> Some (2);
[2,3,0] -> Some (0);
[0,2] -> Some (2);
[1,3,0] -> Some (0);
[2,0,0] -> Some (0);
[2,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00830199999996 true true

[] -> None;
[0,3] -> Some (3);
[0,2,3] -> Some (3);
[1] -> Some (1);
[0] -> Some (0);
[3] -> Some (3);
[3,3] -> Some (3);
[1,3] -> Some (3);
[2,3] -> Some (3);
[2,2,0] -> Some (0);
[0,3,2] -> Some (2);
[0,2,0] -> Some (0);
[2,2] -> Some (2);
[2,0,3] -> Some (3);
[0,3,1] -> Some (1);
[3,2] -> Some (2);
[0,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00778300000002 true true

[3,2] -> Some (2);
[3,0,2] -> Some (2);
[0] -> Some (0);
[2] -> Some (2);
[0,0] -> Some (0);
[0,1] -> Some (1);
[2,1] -> Some (1);
[0,2,3] -> Some (3);
[1] -> Some (1);
[1,1,1] -> Some (1);
[3,0,0] -> Some (0);
[] -> None;
[3] -> Some (3);
[1,1,0] -> Some (0);
[0,3,3] -> Some (3);
[1,2] -> Some (2);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00815200000011 true true

[2,2] -> Some (2);
[3,1] -> Some (1);
[0] -> Some (0);
[3,0] -> Some (0);
[0,3,2] -> Some (2);
[] -> None;
[1,2] -> Some (2);
[3,0,2] -> Some (2);
[3,2,0] -> Some (0);
[3] -> Some (3);
[1,1,3] -> Some (3);
[2,1] -> Some (1);
[1,1] -> Some (1);
[1,0] -> Some (0);
[3,3] -> Some (3);
[0,1,0] -> Some (0);
[2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00885900000003 true true

[1,2,2] -> Some (2);
[0,0] -> Some (0);
[0,1] -> Some (1);
[] -> None;
[3,0,2] -> Some (2);
[0] -> Some (0);
[1,1] -> Some (1);
[1,2] -> Some (2);
[0,3,1] -> Some (1);
[2,0] -> Some (0);
[1] -> Some (1);
[2,0,2] -> Some (2);
[2] -> Some (2);
[0,2] -> Some (2);
[3] -> Some (3);
[3,0,3] -> Some (3);
[1,3,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00831300000004 true true

[2,1] -> Some (1);
[] -> None;
[2] -> Some (2);
[1] -> Some (1);
[2,1,2] -> Some (2);
[0,3,2] -> Some (2);
[1,3] -> Some (3);
[3] -> Some (3);
[3,0] -> Some (0);
[3,0,1] -> Some (1);
[1,2,0] -> Some (0);
[1,1,2] -> Some (2);
[3,2] -> Some (2);
[3,3] -> Some (3);
[1,3,2] -> Some (2);
[0,2] -> Some (2);
[0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00790400000005 true true

[0,2] -> Some (2);
[0,1,3] -> Some (3);
[] -> None;
[3,3,0] -> Some (0);
[0] -> Some (0);
[1,0,1] -> Some (1);
[2,1] -> Some (1);
[0,3,0] -> Some (0);
[0,2,3] -> Some (3);
[3] -> Some (3);
[1] -> Some (1);
[2,1,3] -> Some (3);
[1,2,0] -> Some (0);
[3,1] -> Some (1);
[2,3,2] -> Some (2);
[2] -> Some (2);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.01892 true true

[] -> None;
[1,3,3] -> Some (3);
[0,0] -> Some (0);
[1,2,0] -> Some (0);
[2,3] -> Some (3);
[0,2,3] -> Some (3);
[3,1] -> Some (1);
[2,2] -> Some (2);
[1,3] -> Some (3);
[2,1,2] -> Some (2);
[0] -> Some (0);
[1] -> Some (1);
[3,1,3] -> Some (3);
[1,2,2] -> Some (2);
[2,3,1] -> Some (1);
[2] -> Some (2);
[1,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00794900000005 true true

[0,2] -> Some (2);
[] -> None;
[0,0] -> Some (0);
[3,2,3] -> Some (3);
[3,2,0] -> Some (0);
[2,3] -> Some (3);
[2,0] -> Some (0);
[1,1,1] -> Some (1);
[0,2,1] -> Some (1);
[3,0] -> Some (0);
[2] -> Some (2);
[1,0] -> Some (0);
[2,1] -> Some (1);
[0,1] -> Some (1);
[3,1] -> Some (1);
[1,0,2] -> Some (2);
[0] -> Some (0);
[1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.010203 true true

[] -> None;
[3,1,3] -> Some (3);
[1] -> Some (1);
[1,2,1] -> Some (1);
[1,0] -> Some (0);
[3] -> Some (3);
[2,3] -> Some (3);
[3,2,2] -> Some (2);
[0,0,0] -> Some (0);
[2,1,1] -> Some (1);
[3,0] -> Some (0);
[1,3] -> Some (3);
[0,2] -> Some (2);
[3,2] -> Some (2);
[0,2,0] -> Some (0);
[0,3] -> Some (3);
[2] -> Some (2);
[2,3,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00861099999997 true true

[1] -> Some (1);
[] -> None;
[1,1] -> Some (1);
[0,0] -> Some (0);
[3,0,0] -> Some (0);
[2] -> Some (2);
[0,1] -> Some (1);
[1,1,0] -> Some (0);
[0,3] -> Some (3);
[1,2,3] -> Some (3);
[2,3] -> Some (3);
[1,0] -> Some (0);
[3,0] -> Some (0);
[3,1,2] -> Some (2);
[3] -> Some (3);
[3,3] -> Some (3);
[0] -> Some (0);
[2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00782099999992 true true

[1,0,0] -> Some (0);
[] -> None;
[3,1] -> Some (1);
[0] -> Some (0);
[2,2] -> Some (2);
[2] -> Some (2);
[1,2] -> Some (2);
[1,3,1] -> Some (1);
[3,3] -> Some (3);
[3,1,3] -> Some (3);
[3,3,3] -> Some (3);
[0,0,3] -> Some (3);
[0,3,0] -> Some (0);
[0,0,0] -> Some (0);
[2,3] -> Some (3);
[3] -> Some (3);
[1,2,0] -> Some (0);
[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00850500000001 true true

[2,3,3] -> Some (3);
[1] -> Some (1);
[3,2] -> Some (2);
[0,2] -> Some (2);
[0] -> Some (0);
[3,1] -> Some (1);
[1,1] -> Some (1);
[] -> None;
[2] -> Some (2);
[2,3,2] -> Some (2);
[1,1,1] -> Some (1);
[3,0,1] -> Some (1);
[1,2] -> Some (2);
[3] -> Some (3);
[0,3] -> Some (3);
[2,3] -> Some (3);
[0,0] -> Some (0);
[1,0,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00975900000003 true true

[0] -> Some (0);
[1] -> Some (1);
[0,2,2] -> Some (2);
[2,1] -> Some (1);
[] -> None;
[1,0] -> Some (0);
[0,2] -> Some (2);
[3,0] -> Some (0);
[2] -> Some (2);
[0,0] -> Some (0);
[3] -> Some (3);
[3,2,0] -> Some (0);
[3,0,2] -> Some (2);
[1,1,3] -> Some (3);
[3,2,2] -> Some (2);
[1,1,0] -> Some (0);
[1,3] -> Some (3);
[1,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0112670000001 true true

[3,2] -> Some (2);
[] -> None;
[1] -> Some (1);
[3,0] -> Some (0);
[2,3,1] -> Some (1);
[0] -> Some (0);
[1,3] -> Some (3);
[2] -> Some (2);
[0,2] -> Some (2);
[2,2] -> Some (2);
[0,2,2] -> Some (2);
[3] -> Some (3);
[3,0,3] -> Some (3);
[1,0,3] -> Some (3);
[1,2] -> Some (2);
[3,2,2] -> Some (2);
[1,3,0] -> Some (0);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00839399999995 true true

[3,1,3] -> Some (3);
[] -> None;
[1,1,1] -> Some (1);
[3] -> Some (3);
[0,0] -> Some (0);
[1,3,2] -> Some (2);
[1,0] -> Some (0);
[2,0] -> Some (0);
[0,2] -> Some (2);
[2,3] -> Some (3);
[1,1,2] -> Some (2);
[1] -> Some (1);
[1,2,1] -> Some (1);
[3,2] -> Some (2);
[3,0] -> Some (0);
[3,2,2] -> Some (2);
[2] -> Some (2);
[0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00864999999999 true true

[] -> None;
[3] -> Some (3);
[3,3] -> Some (3);
[2,1,0] -> Some (0);
[0] -> Some (0);
[2,2,2] -> Some (2);
[1] -> Some (1);
[1,1,3] -> Some (3);
[0,3,1] -> Some (1);
[2,2] -> Some (2);
[0,2] -> Some (2);
[1,0] -> Some (0);
[2,1] -> Some (1);
[0,3] -> Some (3);
[2,3,0] -> Some (0);
[1,3,2] -> Some (2);
[2] -> Some (2);
[0,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00832799999989 true true

[0] -> Some (0);
[3,2] -> Some (2);
[3,1] -> Some (1);
[] -> None;
[3,0,2] -> Some (2);
[3,3] -> Some (3);
[1] -> Some (1);
[2,1,3] -> Some (3);
[2,1] -> Some (1);
[2,0] -> Some (0);
[1,0,2] -> Some (2);
[1,0] -> Some (0);
[1,1] -> Some (1);
[3] -> Some (3);
[2,2] -> Some (2);
[1,3,3] -> Some (3);
[3,2,3] -> Some (3);
[2,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00786799999992 true true

[3,0] -> Some (0);
[2,1,2] -> Some (2);
[] -> None;
[2] -> Some (2);
[0,2] -> Some (2);
[2,0,1] -> Some (1);
[2,1] -> Some (1);
[3,1,1] -> Some (1);
[3,3] -> Some (3);
[2,3,2] -> Some (2);
[3,3,2] -> Some (2);
[1,2] -> Some (2);
[1,2,1] -> Some (1);
[1,2,0] -> Some (0);
[1] -> Some (1);
[0] -> Some (0);
[2,3,3] -> Some (3);
[2,2] -> Some (2);
[2,2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.027249 true true

[2,3,1] -> Some (1);
[] -> None;
[3] -> Some (3);
[1,2] -> Some (2);
[3,2] -> Some (2);
[2,1] -> Some (1);
[0,3] -> Some (3);
[0,3,0] -> Some (0);
[1,3,1] -> Some (1);
[1,1,1] -> Some (1);
[0] -> Some (0);
[0,3,1] -> Some (1);
[1,1,2] -> Some (2);
[3,0] -> Some (0);
[1,3,0] -> Some (0);
[2,2] -> Some (2);
[2] -> Some (2);
[1] -> Some (1);
[0,2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00851200000011 true true

[3,3] -> Some (3);
[] -> None;
[2,3,3] -> Some (3);
[3] -> Some (3);
[3,1,0] -> Some (0);
[0,3] -> Some (3);
[1,3,2] -> Some (2);
[0,2] -> Some (2);
[2] -> Some (2);
[2,2,2] -> Some (2);
[1] -> Some (1);
[1,2] -> Some (2);
[0,1,2] -> Some (2);
[2,0,3] -> Some (3);
[2,3] -> Some (3);
[1,3] -> Some (3);
[0,1] -> Some (1);
[3,3,1] -> Some (1);
[3,1,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.031567 true true

[1,0,1] -> Some (1);
[2] -> Some (2);
[3,3,0] -> Some (0);
[] -> None;
[2,1,0] -> Some (0);
[1] -> Some (1);
[0,3,1] -> Some (1);
[0] -> Some (0);
[3,1,1] -> Some (1);
[2,0,0] -> Some (0);
[1,3] -> Some (3);
[0,0,3] -> Some (3);
[3,2] -> Some (2);
[3,1,2] -> Some (2);
[0,2] -> Some (2);
[2,2,2] -> Some (2);
[1,0,3] -> Some (3);
[3,3] -> Some (3);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.016294 true true

[2,3] -> Some (3);
[0,0,1] -> Some (1);
[0] -> Some (0);
[3,1] -> Some (1);
[0,1,0] -> Some (0);
[] -> None;
[2,1,0] -> Some (0);
[1,1] -> Some (1);
[0,1,3] -> Some (3);
[2,2] -> Some (2);
[0,0,2] -> Some (2);
[1,2] -> Some (2);
[3] -> Some (3);
[1] -> Some (1);
[2] -> Some (2);
[0,0] -> Some (0);
[1,3] -> Some (3);
[1,2,1] -> Some (1);
[3,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00783200000001 true true

[1,3,1] -> Some (1);
[] -> None;
[2,0,2] -> Some (2);
[3] -> Some (3);
[2,3] -> Some (3);
[3,3,0] -> Some (0);
[2,1] -> Some (1);
[0,0] -> Some (0);
[3,0] -> Some (0);
[0] -> Some (0);
[3,0,3] -> Some (3);
[2] -> Some (2);
[0,0,2] -> Some (2);
[1,3] -> Some (3);
[1] -> Some (1);
[1,3,3] -> Some (3);
[0,1] -> Some (1);
[2,0] -> Some (0);
[0,0,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00889800000004 true true

[3] -> Some (3);
[0] -> Some (0);
[] -> None;
[3,2,2] -> Some (2);
[1] -> Some (1);
[3,2] -> Some (2);
[2,2] -> Some (2);
[0,0] -> Some (0);
[0,1,3] -> Some (3);
[2,1,2] -> Some (2);
[2] -> Some (2);
[1,0] -> Some (0);
[3,3] -> Some (3);
[3,1,0] -> Some (0);
[3,0,2] -> Some (2);
[2,3,1] -> Some (1);
[0,2] -> Some (2);
[1,2] -> Some (2);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0084139999999 true true

[0,1] -> Some (1);
[0,0] -> Some (0);
[2,3,0] -> Some (0);
[1,3] -> Some (3);
[2] -> Some (2);
[] -> None;
[1,3,2] -> Some (2);
[0] -> Some (0);
[1] -> Some (1);
[2,0] -> Some (0);
[0,0,3] -> Some (3);
[3,2,2] -> Some (2);
[0,0,1] -> Some (1);
[3] -> Some (3);
[1,1] -> Some (1);
[3,1] -> Some (1);
[1,3,0] -> Some (0);
[2,1,1] -> Some (1);
[0,3,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0266859999999 true true

[] -> None;
[1,0,1] -> Some (1);
[1,3,3] -> Some (3);
[3] -> Some (3);
[0] -> Some (0);
[2] -> Some (2);
[3,3] -> Some (3);
[2,0] -> Some (0);
[3,1,1] -> Some (1);
[1,3] -> Some (3);
[1] -> Some (1);
[3,1] -> Some (1);
[0,3] -> Some (3);
[2,2] -> Some (2);
[1,1,2] -> Some (2);
[2,2,0] -> Some (0);
[1,2,1] -> Some (1);
[2,2,3] -> Some (3);
[1,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00798600000007 true true

[] -> None;
[1,0] -> Some (0);
[1] -> Some (1);
[0] -> Some (0);
[3,1,3] -> Some (3);
[2] -> Some (2);
[3,2] -> Some (2);
[0,1] -> Some (1);
[3,0] -> Some (0);
[0,0,0] -> Some (0);
[2,1] -> Some (1);
[3] -> Some (3);
[3,0,0] -> Some (0);
[3,1,1] -> Some (1);
[0,3,2] -> Some (2);
[0,2,1] -> Some (1);
[1,1] -> Some (1);
[1,2] -> Some (2);
[2,1,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0198270000001 true true

[0,0,2] -> Some (2);
[] -> None;
[1] -> Some (1);
[2,0,2] -> Some (2);
[2,0] -> Some (0);
[2] -> Some (2);
[3,3] -> Some (3);
[3,2,1] -> Some (1);
[1,1,1] -> Some (1);
[1,2] -> Some (2);
[3,2] -> Some (2);
[3,0,0] -> Some (0);
[3,0,3] -> Some (3);
[3,3,3] -> Some (3);
[1,0] -> Some (0);
[0,1] -> Some (1);
[2,3,0] -> Some (0);
[1,3,2] -> Some (2);
[3,0] -> Some (0);
[3,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.025257 true true

[2,3,2] -> Some (2);
[3,3,0] -> Some (0);
[2,3] -> Some (3);
[] -> None;
[1,1,0] -> Some (0);
[2] -> Some (2);
[1,1] -> Some (1);
[3,1] -> Some (1);
[1,3,2] -> Some (2);
[3,0] -> Some (0);
[2,1] -> Some (1);
[1,0] -> Some (0);
[3,3] -> Some (3);
[1,3,0] -> Some (0);
[1,2,2] -> Some (2);
[1,3] -> Some (3);
[0,3,3] -> Some (3);
[2,0] -> Some (0);
[0,0] -> Some (0);
[2,0,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00886500000001 true true

[0] -> Some (0);
[1,3] -> Some (3);
[] -> None;
[1] -> Some (1);
[2,3] -> Some (3);
[0,2] -> Some (2);
[3,1] -> Some (1);
[2] -> Some (2);
[0,1] -> Some (1);
[1,3,3] -> Some (3);
[1,0,0] -> Some (0);
[3,3,2] -> Some (2);
[3] -> Some (3);
[2,2,2] -> Some (2);
[0,0,1] -> Some (1);
[0,3] -> Some (3);
[1,3,1] -> Some (1);
[0,1,3] -> Some (3);
[1,0] -> Some (0);
[3,2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0170780000001 true true

[1] -> Some (1);
[] -> None;
[2,2,1] -> Some (1);
[2,1] -> Some (1);
[0,0,1] -> Some (1);
[1,2] -> Some (2);
[3,0] -> Some (0);
[0] -> Some (0);
[2,2,0] -> Some (0);
[3,2] -> Some (2);
[2] -> Some (2);
[3,1,1] -> Some (1);
[3,0,2] -> Some (2);
[1,3] -> Some (3);
[2,0,2] -> Some (2);
[0,1,0] -> Some (0);
[0,2] -> Some (2);
[3,3,0] -> Some (0);
[1,0] -> Some (0);
[3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0196960000001 true true

[2] -> Some (2);
[] -> None;
[3,0,0] -> Some (0);
[0,3] -> Some (3);
[3] -> Some (3);
[1,3] -> Some (3);
[3,1] -> Some (1);
[2,2] -> Some (2);
[3,2,3] -> Some (3);
[3,2,0] -> Some (0);
[0] -> Some (0);
[0,1,3] -> Some (3);
[1,1,2] -> Some (2);
[1,0,2] -> Some (2);
[1] -> Some (1);
[2,3,3] -> Some (3);
[1,1] -> Some (1);
[3,2] -> Some (2);
[1,2,2] -> Some (2);
[2,0] -> Some (0);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0093139999999 true true

[0,2] -> Some (2);
[2] -> Some (2);
[3,0] -> Some (0);
[3,0,1] -> Some (1);
[0] -> Some (0);
[2,1,2] -> Some (2);
[3,1,2] -> Some (2);
[0,2,0] -> Some (0);
[] -> None;
[1] -> Some (1);
[0,1] -> Some (1);
[3,2] -> Some (2);
[2,1,3] -> Some (3);
[3,3] -> Some (3);
[0,1,0] -> Some (0);
[2,1,0] -> Some (0);
[0,3,1] -> Some (1);
[1,0] -> Some (0);
[0,3,0] -> Some (0);
[2,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.016476 true true

[1] -> Some (1);
[] -> None;
[2,0] -> Some (0);
[0,2,2] -> Some (2);
[2] -> Some (2);
[3] -> Some (3);
[3,0,2] -> Some (2);
[2,1,1] -> Some (1);
[1,1] -> Some (1);
[0,0] -> Some (0);
[2,0,0] -> Some (0);
[0,3,2] -> Some (2);
[3,3] -> Some (3);
[3,1] -> Some (1);
[3,0] -> Some (0);
[1,0] -> Some (0);
[0,0,1] -> Some (1);
[1,3] -> Some (3);
[0,2] -> Some (2);
[2,3] -> Some (3);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.0255609999999 true true

[] -> None;
[1,2,1] -> Some (1);
[0,2] -> Some (2);
[2,3] -> Some (3);
[2] -> Some (2);
[3,2,2] -> Some (2);
[0] -> Some (0);
[3,0,1] -> Some (1);
[3,1] -> Some (1);
[2,2] -> Some (2);
[3,0,3] -> Some (3);
[3] -> Some (3);
[2,1] -> Some (1);
[3,1,2] -> Some (2);
[3,0] -> Some (0);
[0,0,1] -> Some (1);
[3,2] -> Some (2);
[2,2,0] -> Some (0);
[3,2,1] -> Some (1);
[2,2,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00988299999995 true true

[1] -> Some (1);
[3] -> Some (3);
[2] -> Some (2);
[3,0] -> Some (0);
[] -> None;
[0,0] -> Some (0);
[1,0,3] -> Some (3);
[2,0] -> Some (0);
[1,3] -> Some (3);
[0] -> Some (0);
[3,2] -> Some (2);
[2,3] -> Some (3);
[1,1] -> Some (1);
[0,1] -> Some (1);
[0,0,2] -> Some (2);
[1,2,1] -> Some (1);
[2,1] -> Some (1);
[0,2,2] -> Some (2);
[3,2,3] -> Some (3);
[3,3,2] -> Some (2);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.00907200000006 true true

[3,0,3] -> Some (3);
[0,1] -> Some (1);
[0,2] -> Some (2);
[2] -> Some (2);
[] -> None;
[0] -> Some (0);
[3,2] -> Some (2);
[2,3,2] -> Some (2);
[1] -> Some (1);
[1,0,1] -> Some (1);
[1,3,3] -> Some (3);
[1,3,2] -> Some (2);
[0,3,1] -> Some (1);
[3] -> Some (3);
[3,2,0] -> Some (0);
[3,1,1] -> Some (1);
[0,1,2] -> Some (2);
[0,3,0] -> Some (0);
[2,3,1] -> Some (1);
[1,1] -> Some (1);

=================================
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
(\list_last -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_last = \xs -> case xs of
    Nil y1 -> 
      None

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          Some (#2.1 y1)

        Cons y2 -> 
          list_last (#2.2 y1) in list_last) : NatList -> NatOpt)
0.013275 true true

