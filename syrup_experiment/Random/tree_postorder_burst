Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 0)))
                    Cons (Un_Node x . 1, Nil)

69.7330 false

Node (Leaf (),0,Leaf ()) -> [0];

=================================
fix (f : tree -> list) = fun (x:tree) -> Cons (Un_Node x . 1, Nil)

0.0028 false

Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [2,3,0];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1761 false

Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0930 false

Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,3];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

1.4536 false

Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,3];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match Un_S (Un_Node x . 1) with
      | O _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))
      | S _ -> (match Un_Node x . 2 with
                  | Leaf _ -> Cons (S (Un_Node x . 1), Nil)
                  | Node _ -> Cons (Un_S (Un_Node x . 1), f (Un_Node x . 2)))

1.4696 false

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.6363 false

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [0,3,2];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,3,3];

=================================
None
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [1,3,0];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,0,1];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match append (f (Un_Node x . 2)) (f (Un_Node x . 0)) with
                     | Nil _ -> Cons (S (Un_Node x . 1), Nil)
                     | Cons _ -> Cons (0,
                                        append (f (Un_Node x . 2))
                                          (f (Un_Node x . 0))))

0.4119 false

Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0051 false

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,0];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0847 false

Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [1,0,0];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [2,2,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,1];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,1];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),2,Leaf ()) -> [1,0,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [2,3,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,1,1];

=================================
None
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];

=================================
None
Leaf () -> [];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];

=================================
None
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [2,2,1];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

62.9096 false

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [0,3,1];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> [1,1,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [1,0,0];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match append
                           (append (f (Un_Node x . 2)) (f (Un_Node x . 0)))
                           (f (Un_Node x . 0)) with
                     | Nil _ -> Cons (Un_Node x . 1, Nil)
                     | Cons _ -> append
                                   (append (f (Un_Node x . 2))
                                      (f (Un_Node x . 0)))
                                   Cons (Un_Node x . 1, Nil))

42.3534 false

Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),0,Leaf ()) -> [3,3,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [2,1,1];

=================================
None
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];

=================================
None
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,3,2];

=================================
None
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [2,0,3];
Node (Leaf (),2,Leaf ()) -> [2];

=================================
None
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [3,1,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match f (Un_Node x . 2) with
                     | Nil _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))
                     | Cons _ -> append (f (Un_Node x . 2))
                                   Cons (Un_Node x . 1, Nil))

15.7371 false

Leaf () -> [];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];

=================================
None
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,1];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [3,0,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,0];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,1];

=================================
None
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [0,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [3,2,0];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Leaf () -> [];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,2];

=================================
None
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,2];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,0];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,0,1];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];

=================================
None
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,2];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];

=================================
None
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [2,2,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];

=================================
None
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,3,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,1];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [1,3,3];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,1,0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,3,3];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,1,1];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,3];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [2,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,0];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [0,2,2];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [0,1,2];
Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [3,1,0];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];

=================================
None
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> [2,0,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,0];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,3];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,0];

=================================
None
Leaf () -> [];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,1,2];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,1,2];

=================================
None
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,1];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,0];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [3,0,0];

=================================
None
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,0,1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Leaf () -> [];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [2,0,3];

=================================
None
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> [2,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [0,1,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Leaf () -> [];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

26.9077 true

Leaf () -> [];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,2,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [1,3,3];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> [3,2,1];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,1,1];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [0,3,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Leaf () -> [];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [0,0,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    (append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil))

83.2257 true

Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,2];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [3,1,2];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];

=================================
None
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Leaf () -> [];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,2,2];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,1,0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,3];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,0];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [2,3,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,2,1];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];

=================================
None
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,2];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];

=================================
None
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [2,1,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,2];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,0,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

32.7543 true

Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,0,1];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> [3,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> [2,3,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,2];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,2,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,0];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [2,2,1];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,3,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];
Leaf () -> [];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [0,2,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,0];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,0];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [2,0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];

=================================
None
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [0,3,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,2];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Leaf () -> [];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,0,1];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];

=================================
None
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [0,3,3];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [3,1,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> [0,1,3];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,0,3];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,0];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,3,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Leaf () -> [];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,1,2];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Node (Leaf (),3,Leaf ()) -> [3];

=================================
None
Leaf () -> [];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [3,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,3,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [1,2,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];

=================================
None
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [1,0,2];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [3,3,2];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,0,0];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [2,2,1];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [2,1,0];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Leaf () -> [];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [1,2,0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,0];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,1,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,0];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,1,0];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [2,1,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,1,1];

=================================
None
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Leaf () -> [];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [2,1,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,2];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,1,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];

=================================
None
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,0];
Leaf () -> [];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,1,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,3];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [1,0,0];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,0,1];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [3,1,1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,1];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,0,0];
Leaf () -> [];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,0,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,2,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,2,1];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [2,0,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,1];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,1,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];

=================================
None
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [3,3,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [2,2,3];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,3,2];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Leaf () -> [];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,0];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [1,2,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),2,Leaf ()) -> [0,2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [0,0,1];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,1,2];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,1,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [3,0,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Leaf () -> [];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,3,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,1,2];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

12.4907 true

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [0,0,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [3,2,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [0,0,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [2,3,0];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,2];

=================================
None
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,0,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,0,2];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [0,1,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> [0,2,3];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [0,3,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];

=================================
None
Leaf () -> [];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [0,2,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [1,3,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [0,0,1];
Leaf () -> [];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,0,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Leaf (),1,Leaf ()) -> [1];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 2)) (f (Un_Node x . 0)))
                    Cons (Un_Node x . 1, Nil)

6.5672 false

Leaf () -> [];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,1];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [0,0,2];

=================================
None
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [0,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [1,2,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> [2,2,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [0,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),0,Leaf ()) -> [3,3,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [3,1,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [0,1,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,2];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> [1,1,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Leaf () -> [];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [1,1,3];

=================================
None
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,0];
Leaf () -> [];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,0,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [0,3,3];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,1,3];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [2,2,0];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,0,0];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,1,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,0,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,0,2];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> [1,0,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,3];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [3,0,0];

=================================
None
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,1,0];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,1];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,2,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,1,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Leaf () -> [];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [3,1,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,0];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,0,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Leaf () -> [];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [1,2,0];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [3,0,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,3];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Leaf ()) -> [1];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,3,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [3,0,2];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,1];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,2,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];

=================================
None
Leaf () -> [];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [3,0,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,0];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> [2,2,1];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,0,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];
Leaf () -> [];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [0,3,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,2];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [0,1,1];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [3,0,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [1,3,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,2];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [1,1,3];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,3];
Leaf () -> [];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,0];

=================================
None
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Leaf () -> [];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [1,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [2,3,0];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [3,0,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> [2,3,1];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [1,1,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];

=================================
None
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,2];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),2,Leaf ()) -> [2];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,2];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];

=================================
None
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,3,0];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,2];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,0,2];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,3,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,2];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [1,1,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [0,0,3];
Leaf () -> [];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,0];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,1];

=================================
None
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,3,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,1,2];
Leaf () -> [];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> [1,1,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [0,1,1];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [1,2,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Leaf (),2,Leaf ()) -> [2];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Leaf () -> [];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [0,0,1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,0,2];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> [2,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [0,1,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [2,3,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [3,1,0];
Leaf () -> [];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,1];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];

=================================
None
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,1,2];
Leaf () -> [];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    (append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil))

65.7569 true

Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,0,0];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [0,1,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,0,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [2,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Node (Leaf (),3,Leaf ()) -> [3];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [1,0,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [1,2,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,1,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,0,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,0,2];
Leaf () -> [];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [1,2,2];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];

=================================
None
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,2];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,3,0];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,1,1];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,2,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,0];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [3,2,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [0,1,3];

=================================
None
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,0,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> [2,3,1];
Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];

=================================
None
Leaf () -> [];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,1];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,2];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,2];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,3,2];
Node (Leaf (),0,Leaf ()) -> [0];

=================================
None
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Leaf () -> [];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),2,Leaf ()) -> [1,0,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.9290 true

Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [3,2,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [1,0,0];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Leaf () -> [];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [3,0,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,2];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,1];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Leaf (),2,Leaf ()) -> [2];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,2];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Leaf () -> [];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> [0,3,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,0,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,1];

=================================
None
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,3];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Leaf () -> [];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,0];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [0,0,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Leaf (),3,Leaf ()) -> [3];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Leaf () -> [];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [0,2,1];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,1,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];

=================================
None
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [1,3,3];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,3];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> [2,3,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [3,0,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,0,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,2,0];

=================================
None
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> [0,1,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [3,0,1];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [0,3,2];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [0,3,3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> [2,0,0];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,1];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,3,0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [3,0,0];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,0];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Leaf () -> [];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,0];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,2];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,3];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,1,0];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [0,0,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [0,3,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [0,3,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [3,1,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [0,3,1];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,0,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];

=================================
None
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,0,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,1];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,0,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

21.8112 true

Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,0,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];

=================================
None
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,0];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [1,1,2];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,3];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [2,1,0];

=================================
None
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,1,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,2];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [0,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,3,1];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [3,0,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,2];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,0];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];

=================================
None
Leaf () -> [];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,0];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,0];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [0,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,1,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> [0,2,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [3,2,2];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [3,1,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,1];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,3,0];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,3];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [0,3,3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,0,3];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];
Leaf () -> [];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,2,3];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,2,3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,1,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,3,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,0,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,0,2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [2,0,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [1,3,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [3,1,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,2,3];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,1];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Leaf () -> [];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,0];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,3,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [2,2,3];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Leaf () -> [];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,2,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [0,0,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,3,2];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,1];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];

=================================
None
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [0,1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [3,0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [1,2,2];

=================================
None
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,3,2];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,3];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [3,2,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,1,2];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [0,0,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,2,1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];

=================================
None
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [1,3,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [1,2,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [1,0,0];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,1];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [1,1,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];
Leaf () -> [];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,3,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,0];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [2,0,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [3,2,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Leaf () -> [];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,1,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [1,3,0];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

22.3571 true

Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [3,3,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,1];
Leaf () -> [];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,2,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [2,1,0];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,2,1];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,2,0];

=================================
None
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,3,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,3,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [1,3,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [1,0,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> [2,3,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> [0,3,3];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,3,3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,2,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [1,1,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,0];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),2,Leaf ()) -> [1,0,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,3,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [0,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,2,2];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,1];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Leaf () -> [];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [2,1,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [1,0,3];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,1];

=================================
None
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [3,1,1];
Leaf () -> [];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [1,1,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [1,0,3];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [1,2,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Leaf () -> [];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [1,3,2];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),0,Leaf ()) -> [2,3,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,3];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [3,3,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Leaf ()) -> [1];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

2.4529 true

Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,1,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,0,1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,3];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [3,0,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [2,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [3,3,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,1,0];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match append (f (Un_Node x . 0)) (f (Un_Node x . 2)) with
                     | Nil _ -> Cons (Un_Node x . 1, Nil)
                     | Cons _ -> append
                                   (append (f (Un_Node x . 0))
                                      (f (Un_Node x . 2)))
                                   Cons (Un_Node x . 1, Nil))

6.1038 true

Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Leaf () -> [];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,3,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,1,1];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,2];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,0,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [1,2,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,2,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,3,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [3,1,2];
Leaf () -> [];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [1,2,3];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [0,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [0,0,1];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,1];
Leaf () -> [];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,2,3];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,0];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [1,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [1,0,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> [2,2,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [2,1,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,3,0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,0];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,3];
Leaf () -> [];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,2];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [1,1,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> [0,3,2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,2,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [2,1,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,1];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [1,2,3];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [2,0,3];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [1,0,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,2];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,3,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [1,2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [1,1,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [3,0];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Leaf () -> [];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [3,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [3,3,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,0];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [3,3,2];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [1,3,3];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [3,0,2];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

5.5405 true

Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> [0,1,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [3,3,1];
Leaf () -> [];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [3,3,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [3,0,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [0,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [2,0,0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,1];

=================================
None
