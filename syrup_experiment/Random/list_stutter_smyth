[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (0, xs) in list_stutter) : NatList -> NatList)
0.00356600000009 false false

[0,1] -> [0,0,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [0, 0, 1, 1] in list_stutter) : NatList -> NatList)
0.00401800000009 false false

[2,0,3] -> [2,2,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [2, 2, 0, 0, 3, 3] in list_stutter) : NatList -> NatList)
0.00478199999998 false false

[1,1,0] -> [1,1,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [1, 1, 1, 1, 0, 0] in list_stutter) : NatList -> NatList)
0.00489399999992 false false

[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (2, xs) in list_stutter) : NatList -> NatList)
0.00424999999996 false false

[2,0] -> [2,2,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [2, 2, 0, 0] in list_stutter) : NatList -> NatList)
0.00477799999999 false false

[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (0, xs) in list_stutter) : NatList -> NatList)
0.00680299999999 false false

[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> Cons (2, xs) in list_stutter) : NatList -> NatList)
0.00476099999992 false false

[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [] in list_stutter) : NatList -> NatList)
0.00395400000002 false false

[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_stutter = \xs -> [] in list_stutter) : NatList -> NatList)
0.00442199999998 false false

[] -> [];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.014291 true true

[3,2] -> [3,3,2,2];
[0] -> [0,0];

=================================
NOSOL

[1,1] -> [1,1,1,1];
[2,3,3] -> [2,2,3,3,3,3];

=================================
NOSOL

[] -> [];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00375600000007 false true

[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (0, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( 0
        , Cons (0, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00333500000011 false false

[0,0] -> [0,0,0,0];
[1,1] -> [1,1,1,1];

=================================
NOSOL

[3,3] -> [3,3,3,3];
[2,1] -> [2,2,1,1];

=================================
NOSOL

[1,1,3] -> [1,1,1,1,3,3];
[1,2] -> [1,1,2,2];

=================================
NOSOL

[3] -> [3,3];
[2,3] -> [2,2,3,3];

=================================
NOSOL

[] -> [];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00338600000009 false true

[0] -> [0,0];
[] -> [];
[0,2,3] -> [0,0,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00348099999997 true true

[2] -> [2,2];
[] -> [];
[0,0,3] -> [0,0,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00310100000002 true true

[1] -> [1,1];
[1,2] -> [1,1,2,2];
[0,1,1] -> [0,0,1,1,1,1];

=================================
NOSOL

[1,3] -> [1,1,3,3];
[2,0] -> [2,2,0,0];
[1,2] -> [1,1,2,2];

=================================
NOSOL

[1,3,1] -> [1,1,3,3,1,1];
[1,2,2] -> [1,1,2,2,2,2];
[2,0] -> [2,2,0,0];

=================================
NOSOL

[1,1] -> [1,1,1,1];
[3] -> [3,3];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00448200000005 true true

[1] -> [1,1];
[0,0] -> [0,0,0,0];
[3,2,3] -> [3,3,2,2,3,3];

=================================
NOSOL

[3,1] -> [3,3,1,1];
[0,2] -> [0,0,2,2];
[1] -> [1,1];

=================================
NOSOL

[0] -> [0,0];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00352599999997 false true

[] -> [];
[0,2,2] -> [0,0,2,2,2,2];
[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00282599999991 true true

[3,0,0] -> [3,3,0,0,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[2,3,0] -> [2,2,3,3,0,0];
[2,3] -> [2,2,3,3];

=================================
NOSOL

[2] -> [2,2];
[] -> [];
[3,0,2] -> [3,3,0,0,2,2];
[0,3,1] -> [0,0,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00323600000002 true true

[0,2] -> [0,0,2,2];
[1,3] -> [1,1,3,3];
[] -> [];
[0,1,0] -> [0,0,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003557 true true

[0] -> [0,0];
[3] -> [3,3];
[] -> [];
[1] -> [1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons (#2.1 y1, xs) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00369000000001 false true

[] -> [];
[1,1] -> [1,1,1,1];
[1] -> [1,1];
[0,3] -> [0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00346500000001 true true

[1,1,1] -> [1,1,1,1,1,1];
[0] -> [0,0];
[] -> [];
[2,1,3] -> [2,2,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00328800000011 true true

[2,1] -> [2,2,1,1];
[2,0] -> [2,2,0,0];
[2] -> [2,2];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00400599999989 true true

[3,1,3] -> [3,3,1,1,3,3];
[0,2,2] -> [0,0,2,2,2,2];
[0,0,0] -> [0,0,0,0,0,0];
[3,1] -> [3,3,1,1];

=================================
NOSOL

[2] -> [2,2];
[] -> [];
[3,2,3] -> [3,3,2,2,3,3];
[0,1,2] -> [0,0,1,1,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00407799999994 true true

[0,1,0] -> [0,0,1,1,0,0];
[] -> [];
[1,3,0] -> [1,1,3,3,0,0];
[1,3,1] -> [1,1,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00359299999991 true true

[3] -> [3,3];
[0,2] -> [0,0,2,2];
[0,0,2] -> [0,0,0,0,2,2];
[3,0,2] -> [3,3,0,0,2,2];
[3,0] -> [3,3,0,0];

=================================
NOSOL

[] -> [];
[2,0] -> [2,2,0,0];
[2,2] -> [2,2,2,2];
[3] -> [3,3];
[3,0] -> [3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0036520000001 true true

[2,2,1] -> [2,2,2,2,1,1];
[2,1] -> [2,2,1,1];
[3] -> [3,3];
[0] -> [0,0];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00297599999999 true true

[1,0] -> [1,1,0,0];
[0] -> [0,0];
[2] -> [2,2];
[2,2] -> [2,2,2,2];
[0,1,3] -> [0,0,1,1,3,3];

=================================
NOSOL

[1] -> [1,1];
[3] -> [3,3];
[2,3,2] -> [2,2,3,3,2,2];
[2,0,1] -> [2,2,0,0,1,1];
[0,3] -> [0,0,3,3];

=================================
NOSOL

[1,0,1] -> [1,1,0,0,1,1];
[] -> [];
[1,0] -> [1,1,0,0];
[1,1] -> [1,1,1,1];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00437299999999 true true

[0,0,0] -> [0,0,0,0,0,0];
[2] -> [2,2];
[1] -> [1,1];
[] -> [];
[1,0,2] -> [1,1,0,0,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00318500000003 true true

[] -> [];
[1,3,3] -> [1,1,3,3,3,3];
[0,1] -> [0,0,1,1];
[3] -> [3,3];
[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00324000000001 true true

[1,0] -> [1,1,0,0];
[2,1,0] -> [2,2,1,1,0,0];
[] -> [];
[0] -> [0,0];
[3,2] -> [3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003197 true true

[2] -> [2,2];
[] -> [];
[0,3,3] -> [0,0,3,3,3,3];
[3,0,3] -> [3,3,0,0,3,3];
[1,0,3] -> [1,1,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334100000009 true true

[0] -> [0,0];
[] -> [];
[0,2] -> [0,0,2,2];
[1,1,3] -> [1,1,1,1,3,3];
[1,3] -> [1,1,3,3];
[1,3,1] -> [1,1,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0034290000001 true true

[1] -> [1,1];
[] -> [];
[2,1] -> [2,2,1,1];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[0,0] -> [0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00302000000011 true true

[2,0] -> [2,2,0,0];
[1,3,1] -> [1,1,3,3,1,1];
[0] -> [0,0];
[2,1] -> [2,2,1,1];
[] -> [];
[0,0,0] -> [0,0,0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00320600000009 true true

[3] -> [3,3];
[0,2,0] -> [0,0,2,2,0,0];
[3,3] -> [3,3,3,3];
[2,2,2] -> [2,2,2,2,2,2];
[] -> [];
[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00343500000008 true true

[1,0] -> [1,1,0,0];
[] -> [];
[1,3] -> [1,1,3,3];
[2,0,1] -> [2,2,0,0,1,1];
[1,3,2] -> [1,1,3,3,2,2];
[3,2] -> [3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00374299999999 true true

[] -> [];
[0,0] -> [0,0,0,0];
[2,0,2] -> [2,2,0,0,2,2];
[2,3] -> [2,2,3,3];
[0] -> [0,0];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00339600000007 true true

[] -> [];
[1,1,1] -> [1,1,1,1,1,1];
[3] -> [3,3];
[2] -> [2,2];
[1] -> [1,1];
[1,3] -> [1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00372599999992 true true

[] -> [];
[2,2] -> [2,2,2,2];
[2] -> [2,2];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[1,2,2] -> [1,1,2,2,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00316900000007 true true

[0,2,2] -> [0,0,2,2,2,2];
[2] -> [2,2];
[2,2] -> [2,2,2,2];
[] -> [];
[3] -> [3,3];
[0,2,3] -> [0,0,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00336599999991 true true

[0,1,0] -> [0,0,1,1,0,0];
[0] -> [0,0];
[1,1,2] -> [1,1,1,1,2,2];
[3] -> [3,3];
[1] -> [1,1];
[] -> [];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00306099999989 true true

[2,0,1] -> [2,2,0,0,1,1];
[0,1,3] -> [0,0,1,1,3,3];
[3,2] -> [3,3,2,2];
[1,3] -> [1,1,3,3];
[1,1] -> [1,1,1,1];
[0,0,1] -> [0,0,0,0,1,1];
[1,0] -> [1,1,0,0];

=================================
NOSOL

[0] -> [0,0];
[] -> [];
[3,2,2] -> [3,3,2,2,2,2];
[2,2] -> [2,2,2,2];
[3,2] -> [3,3,2,2];
[1,2,0] -> [1,1,2,2,0,0];
[0,0,3] -> [0,0,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00411600000007 true true

[0,3] -> [0,0,3,3];
[1,3,0] -> [1,1,3,3,0,0];
[] -> [];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[0] -> [0,0];
[2,1] -> [2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325399999997 true true

[1] -> [1,1];
[0] -> [0,0];
[1,0,2] -> [1,1,0,0,2,2];
[2,1,0] -> [2,2,1,1,0,0];
[] -> [];
[1,2,1] -> [1,1,2,2,1,1];
[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00405099999989 true true

[3,1] -> [3,3,1,1];
[] -> [];
[3,3,3] -> [3,3,3,3,3,3];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[0,3,0] -> [0,0,3,3,0,0];
[2,3] -> [2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00350299999991 true true

[] -> [];
[0,1,3] -> [0,0,1,1,3,3];
[1,0] -> [1,1,0,0];
[3] -> [3,3];
[0,0] -> [0,0,0,0];
[1,2] -> [1,1,2,2];
[2] -> [2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.0033699999999 true true

[] -> [];
[0] -> [0,0];
[0,3,1] -> [0,0,3,3,1,1];
[2] -> [2,2];
[3] -> [3,3];
[0,1,0] -> [0,0,1,1,0,0];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00377299999991 true true

[1] -> [1,1];
[] -> [];
[2,2,2] -> [2,2,2,2,2,2];
[0] -> [0,0];
[1,0] -> [1,1,0,0];
[0,2,0] -> [0,0,2,2,0,0];
[3,0,3] -> [3,3,0,0,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00375400000007 true true

[2] -> [2,2];
[3,1] -> [3,3,1,1];
[1,1] -> [1,1,1,1];
[0] -> [0,0];
[2,2,0] -> [2,2,2,2,0,0];
[1,2,2] -> [1,1,2,2,2,2];
[0,2,2] -> [0,0,2,2,2,2];

=================================
NOSOL

[] -> [];
[2,0,1] -> [2,2,0,0,1,1];
[3] -> [3,3];
[0,1,1] -> [0,0,1,1,1,1];
[0] -> [0,0];
[0,3,0] -> [0,0,3,3,0,0];
[1,3,3] -> [1,1,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00351799999999 true true

[3,0,2] -> [3,3,0,0,2,2];
[2] -> [2,2];
[3,2] -> [3,3,2,2];
[3,1,3] -> [3,3,1,1,3,3];
[1,3] -> [1,1,3,3];
[3,1] -> [3,3,1,1];
[] -> [];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.004099 true true

[0,2] -> [0,0,2,2];
[1] -> [1,1];
[3,3] -> [3,3,3,3];
[] -> [];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[3,1,3] -> [3,3,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00351599999999 true true

[1,1] -> [1,1,1,1];
[] -> [];
[1] -> [1,1];
[0,0,0] -> [0,0,0,0,0,0];
[3,2] -> [3,3,2,2];
[0,1] -> [0,0,1,1];
[2,2] -> [2,2,2,2];
[3,1,0] -> [3,3,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00328100000002 true true

[1,0] -> [1,1,0,0];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[1] -> [1,1];
[] -> [];
[0,2] -> [0,0,2,2];
[0,3] -> [0,0,3,3];
[2,1] -> [2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00392299999999 true true

[3,1,0] -> [3,3,1,1,0,0];
[0,0] -> [0,0,0,0];
[3,0] -> [3,3,0,0];
[] -> [];
[2] -> [2,2];
[2,0,2] -> [2,2,0,0,2,2];
[1,3] -> [1,1,3,3];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00415700000008 true true

[3,3] -> [3,3,3,3];
[0] -> [0,0];
[0,1,2] -> [0,0,1,1,2,2];
[3,3,0] -> [3,3,3,3,0,0];
[] -> [];
[1] -> [1,1];
[2,2] -> [2,2,2,2];
[0,1,0] -> [0,0,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00338800000009 true true

[2] -> [2,2];
[1] -> [1,1];
[3,2,2] -> [3,3,2,2,2,2];
[0] -> [0,0];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[] -> [];
[1,2,3] -> [1,1,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00401699999998 true true

[0] -> [0,0];
[0,0,0] -> [0,0,0,0,0,0];
[3] -> [3,3];
[0,0] -> [0,0,0,0];
[0,2,3] -> [0,0,2,2,3,3];
[] -> [];
[0,2] -> [0,0,2,2];
[0,1,3] -> [0,0,1,1,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00370100000009 true true

[] -> [];
[2] -> [2,2];
[3,2,0] -> [3,3,2,2,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[3,2] -> [3,3,2,2];
[0] -> [0,0];
[1] -> [1,1];
[1,3,0] -> [1,1,3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00323299999991 true true

[2,2,3] -> [2,2,2,2,3,3];
[0,1] -> [0,0,1,1];
[2] -> [2,2];
[1,1] -> [1,1,1,1];
[0,2] -> [0,0,2,2];
[3,0] -> [3,3,0,0];
[0] -> [0,0];
[1,0] -> [1,1,0,0];

=================================
NOSOL

[3] -> [3,3];
[] -> [];
[3,2,2] -> [3,3,2,2,2,2];
[1,3,0] -> [1,1,3,3,0,0];
[1] -> [1,1];
[0] -> [0,0];
[1,0] -> [1,1,0,0];
[0,2,1] -> [0,0,2,2,1,1];
[2,1] -> [2,2,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00361900000007 true true

[0] -> [0,0];
[2,3] -> [2,2,3,3];
[0,0] -> [0,0,0,0];
[1,2,2] -> [1,1,2,2,2,2];
[2] -> [2,2];
[] -> [];
[3] -> [3,3];
[3,3,0] -> [3,3,3,3,0,0];
[1,3,3] -> [1,1,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00362300000006 true true

[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[2] -> [2,2];
[3,2,1] -> [3,3,2,2,1,1];
[2,1] -> [2,2,1,1];
[] -> [];
[2,2] -> [2,2,2,2];
[3] -> [3,3];
[1,0,1] -> [1,1,0,0,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00360500000011 true true

[] -> [];
[2] -> [2,2];
[3] -> [3,3];
[0] -> [0,0];
[1,2,3] -> [1,1,2,2,3,3];
[0,3,3] -> [0,0,3,3,3,3];
[0,2] -> [0,0,2,2];
[1,3,3] -> [1,1,3,3,3,3];
[1,0] -> [1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00366899999995 true true

[3,2,0] -> [3,3,2,2,0,0];
[1,0] -> [1,1,0,0];
[3,3,1] -> [3,3,3,3,1,1];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[] -> [];
[2,1,3] -> [2,2,1,1,3,3];
[3,1] -> [3,3,1,1];
[0,0,1] -> [0,0,0,0,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00345300000004 true true

[2,0,0] -> [2,2,0,0,0,0];
[1,3,3] -> [1,1,3,3,3,3];
[3,3] -> [3,3,3,3];
[0] -> [0,0];
[3] -> [3,3];
[3,0] -> [3,3,0,0];
[1,2] -> [1,1,2,2];
[2,0] -> [2,2,0,0];
[2] -> [2,2];

=================================
NOSOL

[] -> [];
[0,3] -> [0,0,3,3];
[3,2,2] -> [3,3,2,2,2,2];
[2,2,3] -> [2,2,2,2,3,3];
[1] -> [1,1];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[0] -> [0,0];
[1,2,3] -> [1,1,2,2,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00343399999997 true true

[] -> [];
[0,3,3] -> [0,0,3,3,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[3,1,0] -> [3,3,1,1,0,0];
[3] -> [3,3];
[0] -> [0,0];
[1,1] -> [1,1,1,1];
[3,2] -> [3,3,2,2];
[2,1,0] -> [2,2,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00334700000008 true true

[] -> [];
[2,1,2] -> [2,2,1,1,2,2];
[2,1,3] -> [2,2,1,1,3,3];
[3] -> [3,3];
[1] -> [1,1];
[2,3] -> [2,2,3,3];
[3,3] -> [3,3,3,3];
[2,3,3] -> [2,2,3,3,3,3];
[0,3,0] -> [0,0,3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00368299999991 true true

[0,0,1] -> [0,0,0,0,1,1];
[1,2,0] -> [1,1,2,2,0,0];
[1] -> [1,1];
[1,0] -> [1,1,0,0];
[2,2,0] -> [2,2,2,2,0,0];
[3] -> [3,3];
[] -> [];
[0,1,1] -> [0,0,1,1,1,1];
[2,1,0] -> [2,2,1,1,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00368800000001 true true

[2,2,1] -> [2,2,2,2,1,1];
[2,1] -> [2,2,1,1];
[2] -> [2,2];
[1,2,2] -> [1,1,2,2,2,2];
[3,1,1] -> [3,3,1,1,1,1];
[0,3] -> [0,0,3,3];
[3] -> [3,3];
[3,1,3] -> [3,3,1,1,3,3];
[1] -> [1,1];
[0,3,1] -> [0,0,3,3,1,1];

=================================
NOSOL

[0,0,0] -> [0,0,0,0,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[0,1,2] -> [0,0,1,1,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[2,3,0] -> [2,2,3,3,0,0];
[3] -> [3,3];
[1,3,1] -> [1,1,3,3,1,1];
[] -> [];
[2,1] -> [2,2,1,1];
[1,3,3] -> [1,1,3,3,3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00476499999991 true true

[2,1] -> [2,2,1,1];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[] -> [];
[1,3,1] -> [1,1,3,3,1,1];
[0,1] -> [0,0,1,1];
[2,2] -> [2,2,2,2];
[1,2] -> [1,1,2,2];
[1] -> [1,1];
[0,3,2] -> [0,0,3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00345199999992 true true

[] -> [];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[2,0,3] -> [2,2,0,0,3,3];
[0] -> [0,0];
[1,3] -> [1,1,3,3];
[2,0,1] -> [2,2,0,0,1,1];
[0,3] -> [0,0,3,3];
[1,1,0] -> [1,1,1,1,0,0];
[1,0,0] -> [1,1,0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00376499999993 true true

[2,1] -> [2,2,1,1];
[0,1] -> [0,0,1,1];
[1] -> [1,1];
[2] -> [2,2];
[] -> [];
[3] -> [3,3];
[1,0] -> [1,1,0,0];
[1,2] -> [1,1,2,2];
[3,1] -> [3,3,1,1];
[0] -> [0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00325900000007 true true

[] -> [];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[2,2,0] -> [2,2,2,2,0,0];
[1,0] -> [1,1,0,0];
[0] -> [0,0];
[3,2,2] -> [3,3,2,2,2,2];
[1,2] -> [1,1,2,2];
[1] -> [1,1];
[0,0] -> [0,0,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003377 true true

[] -> [];
[1,1,0] -> [1,1,1,1,0,0];
[3] -> [3,3];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[1,0,1] -> [1,1,0,0,1,1];
[2] -> [2,2];
[2,2,1] -> [2,2,2,2,1,1];
[1,2] -> [1,1,2,2];
[3,3,1] -> [3,3,3,3,1,1];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00409100000002 true true

[] -> [];
[0,0,0] -> [0,0,0,0,0,0];
[1,1,0] -> [1,1,1,1,0,0];
[1,0] -> [1,1,0,0];
[2] -> [2,2];
[3,1,3] -> [3,3,1,1,3,3];
[0,2,0] -> [0,0,2,2,0,0];
[2,0] -> [2,2,0,0];
[1,1,1] -> [1,1,1,1,1,1];
[3] -> [3,3];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.003829 true true

[3,0,0] -> [3,3,0,0,0,0];
[0,1,1] -> [0,0,1,1,1,1];
[] -> [];
[3,2,1] -> [3,3,2,2,1,1];
[3,0] -> [3,3,0,0];
[3,3] -> [3,3,3,3];
[0,1,3] -> [0,0,1,1,3,3];
[3,2] -> [3,3,2,2];
[2,0,0] -> [2,2,0,0,0,0];
[1,3,0] -> [1,1,3,3,0,0];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00403800000004 true true

[3,1,0] -> [3,3,1,1,0,0];
[] -> [];
[0] -> [0,0];
[3] -> [3,3];
[2,0,3] -> [2,2,0,0,3,3];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[2,2,0] -> [2,2,2,2,0,0];
[2,3,2] -> [2,2,3,3,2,2];
[1,3,2] -> [1,1,3,3,2,2];

=================================
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
(\list_stutter -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_stutter = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      Cons
        ( #2.1 y1
        , Cons (#2.1 y1, list_stutter (#2.2 y1))
        ) in list_stutter) : NatList -> NatList)
0.00381500000003 true true

