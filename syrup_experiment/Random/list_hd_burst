[2] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0028 false

[2,3] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0056 false

[2,0,0] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0086 false

[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[0] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[2,3,3] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0167 false

[0,3] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[3] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0031 false

[] -> 0;
[3,0,1] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0189 true

[2,0] -> 2;
[3,3,0] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0049 false

[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0084 true

[1,2,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0228 true

[] -> 0;
[2,3,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0267 true

[1,3] -> 1;
[3,1] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0053 false

[] -> 0;
[0] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[3,0,1] -> 3;
[2,0] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0105 false

[3,0] -> 3;
[2] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0046 false

[] -> 0;
[0,3] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[2] -> 2;
[3,1] -> 3;
[1,0] -> 1;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0028 false

[3,0] -> 3;
[0,3,1] -> 0;
[0,3,2] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0044 false

[] -> 0;
[3] -> 3;
[1,1,2] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[3,3,0] -> 3;
[2,0] -> 2;
[0,3,0] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0213 false

[2] -> 2;
[3,2,1] -> 3;
[0,0,1] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0031 false

[] -> 0;
[2] -> 2;
[1,1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0041 true

[1,0] -> 1;
[2,2] -> 2;
[2,2,3] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0043 false

[] -> 0;
[1] -> 1;
[3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0039 true

[] -> 0;
[1] -> 1;
[2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0038 true

[0] -> 0;
[] -> 0;
[1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0038 true

[3,2,2] -> 3;
[1,2,2] -> 1;
[1] -> 1;
[0,0] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0143 false

[1,3] -> 1;
[2] -> 2;
[0,3] -> 0;
[0,2] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0054 false

[2] -> 2;
[] -> 0;
[3] -> 3;
[2,3,3] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[] -> 0;
[0,3] -> 0;
[0,0] -> 0;
[3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[3] -> 3;
[3,2] -> 3;
[] -> 0;
[1,3] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[3,3] -> 3;
[3,0] -> 3;
[2,1,3] -> 2;
[2,3,0] -> 2;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0060 false

[] -> 0;
[3,0,2] -> 3;
[2] -> 2;
[1,3] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0179 true

[] -> 0;
[0,2] -> 0;
[1] -> 1;
[3,3,3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0038 true

[2] -> 2;
[] -> 0;
[1,1,1] -> 1;
[2,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[] -> 0;
[1,1,1] -> 1;
[2,1,0] -> 2;
[2,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0194 true

[2,1,0] -> 2;
[0] -> 0;
[] -> 0;
[3,2,1] -> 3;
[1,3,1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0157 true

[1] -> 1;
[] -> 0;
[1,1,0] -> 1;
[2,2] -> 2;
[2,1,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0041 true

[] -> 0;
[2,1] -> 2;
[0,2,3] -> 0;
[0,1,2] -> 0;
[2,2,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0093 true

[0,1] -> 0;
[0,0,2] -> 0;
[2] -> 2;
[1,1,3] -> 1;
[3,0] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0028 false

[2,1,2] -> 2;
[1,0,3] -> 1;
[3,2] -> 3;
[2,1,1] -> 2;
[3,1,2] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0135 false

[1,1,0] -> 1;
[2,3,0] -> 2;
[2] -> 2;
[1] -> 1;
[3,3] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0095 false

[3,1] -> 3;
[3] -> 3;
[] -> 0;
[2] -> 2;
[3,0,2] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0106 true

[3,3] -> 3;
[1,0] -> 1;
[1,2] -> 1;
[] -> 0;
[3,0,2] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0134 true

[1,2,1] -> 1;
[2] -> 2;
[0,3,3] -> 0;
[] -> 0;
[0] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0233 true

[2,2,1] -> 2;
[1,1,1] -> 1;
[2,3,1] -> 2;
[] -> 0;
[3,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0237 true

[3,3] -> 3;
[] -> 0;
[3,0] -> 3;
[3,2,1] -> 3;
[0,2,1] -> 0;
[0,3,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0147 true

[3,3,0] -> 3;
[2,1,0] -> 2;
[2] -> 2;
[] -> 0;
[1,0] -> 1;
[1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0256 true

[2] -> 2;
[2,3] -> 2;
[] -> 0;
[0,0,0] -> 0;
[0,3] -> 0;
[3,1] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0047 true

[0,2,3] -> 0;
[3,2,0] -> 3;
[0] -> 0;
[3] -> 3;
[] -> 0;
[3,2,2] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0214 true

[0,1,2] -> 0;
[] -> 0;
[3,0] -> 3;
[0,3,1] -> 0;
[2,2,2] -> 2;
[1,0] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0101 true

[] -> 0;
[1] -> 1;
[3,0] -> 3;
[1,3,1] -> 1;
[1,1] -> 1;
[1,2,0] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0041 true

[] -> 0;
[2] -> 2;
[3,1] -> 3;
[1,0] -> 1;
[3] -> 3;
[2,1] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0044 true

[3] -> 3;
[1] -> 1;
[2,0] -> 2;
[] -> 0;
[3,0] -> 3;
[1,1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0050 true

[] -> 0;
[2,3,2] -> 2;
[1,2,1] -> 1;
[3,1] -> 3;
[1,1] -> 1;
[3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0464 true

[] -> 0;
[0,1] -> 0;
[2] -> 2;
[3,2,1] -> 3;
[1,0,3] -> 1;
[2,0,0] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[1,3] -> 1;
[0,2] -> 0;
[0,3,0] -> 0;
[3,0,2] -> 3;
[3] -> 3;
[3,2,2] -> 3;
[3,3,2] -> 3;

=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0048 false

[3,3,2] -> 3;
[] -> 0;
[2,1,0] -> 2;
[3] -> 3;
[1,1] -> 1;
[2,0] -> 2;
[0,3,1] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0301 true

[3,1] -> 3;
[0,2,3] -> 0;
[0] -> 0;
[] -> 0;
[3,0] -> 3;
[0,1] -> 0;
[3,3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0098 true

[] -> 0;
[1] -> 1;
[2,0] -> 2;
[1,0,1] -> 1;
[0] -> 0;
[2,0,2] -> 2;
[0,0] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[1] -> 1;
[3] -> 3;
[] -> 0;
[2] -> 2;
[0] -> 0;
[0,3,2] -> 0;
[3,3,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[] -> 0;
[1,0] -> 1;
[0] -> 0;
[2,3,2] -> 2;
[3,3] -> 3;
[2,2] -> 2;
[2,0,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0074 true

[0,1] -> 0;
[] -> 0;
[1,1,0] -> 1;
[1,2] -> 1;
[0,0,0] -> 0;
[2] -> 2;
[1,0,1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0194 true

[0,0] -> 0;
[] -> 0;
[1] -> 1;
[3,0] -> 3;
[1,0,3] -> 1;
[2,2,2] -> 2;
[0,0,1] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[2,3,2] -> 2;
[3,3,3] -> 3;
[0] -> 0;
[0,0] -> 0;
[] -> 0;
[1,1] -> 1;
[1,2,0] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0293 true

[1,2,0] -> 1;
[0,1] -> 0;
[0] -> 0;
[1,1] -> 1;
[3] -> 3;
[1,0,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0288 true

[3] -> 3;
[2] -> 2;
[0] -> 0;
[] -> 0;
[0,2] -> 0;
[0,1] -> 0;
[3,3,0] -> 3;
[2,1,0] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0051 true

[1] -> 1;
[0] -> 0;
[2] -> 2;
[1,3] -> 1;
[] -> 0;
[0,0] -> 0;
[2,3] -> 2;
[0,3,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0046 true

[3,3,2] -> 3;
[2] -> 2;
[] -> 0;
[0,0] -> 0;
[0,3] -> 0;
[1] -> 1;
[3,0,1] -> 3;
[2,3] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0310 true

[3] -> 3;
[2] -> 2;
[] -> 0;
[1,3] -> 1;
[2,1,2] -> 2;
[0] -> 0;
[0,2] -> 0;
[0,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0048 true

[] -> 0;
[2,1] -> 2;
[2] -> 2;
[3,1] -> 3;
[2,2] -> 2;
[3] -> 3;
[2,1,3] -> 2;
[2,0] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0109 true

[] -> 0;
[3,0,1] -> 3;
[0] -> 0;
[1,2,1] -> 1;
[3,2] -> 3;
[3,1,1] -> 3;
[1,0] -> 1;
[2,3,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0205 true

[] -> 0;
[0] -> 0;
[2] -> 2;
[1] -> 1;
[0,0] -> 0;
[2,0,1] -> 2;
[2,0,2] -> 2;
[2,0] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[1,3] -> 1;
[3,0,3] -> 3;
[2,3] -> 2;
[2,2] -> 2;
[1,1] -> 1;
[3,2,0] -> 3;
[1,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0113 true

[3,3] -> 3;
[1,3] -> 1;
[2] -> 2;
[] -> 0;
[2,1] -> 2;
[0,2] -> 0;
[1,0,0] -> 1;
[0,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0135 true

[0,3,1] -> 0;
[2,3,2] -> 2;
[] -> 0;
[3] -> 3;
[3,2,0] -> 3;
[2,2,0] -> 2;
[3,2,1] -> 3;
[0,1] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0283 true

[] -> 0;
[2,1,3] -> 2;
[1,3,0] -> 1;
[2] -> 2;
[3,1,2] -> 3;
[0] -> 0;
[1,3,1] -> 1;
[1] -> 1;
[3,1,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0279 true

[0] -> 0;
[] -> 0;
[2] -> 2;
[1] -> 1;
[3,2] -> 3;
[3] -> 3;
[1,2,0] -> 1;
[1,1,0] -> 1;
[3,3,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0075 true

[1] -> 1;
[] -> 0;
[3,3] -> 3;
[0,2,2] -> 0;
[1,0] -> 1;
[1,2] -> 1;
[1,2,1] -> 1;
[2] -> 2;
[0,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[3,0] -> 3;
[2] -> 2;
[] -> 0;
[1] -> 1;
[0,0] -> 0;
[3,2,1] -> 3;
[3,2] -> 3;
[0,3,1] -> 0;
[0,1] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0102 true

[] -> 0;
[0] -> 0;
[1] -> 1;
[1,3] -> 1;
[0,1] -> 0;
[2] -> 2;
[0,3] -> 0;
[2,0,3] -> 2;
[2,0,2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[3,3] -> 3;
[2,2] -> 2;
[3,2] -> 3;
[0,3] -> 0;
[1] -> 1;
[] -> 0;
[3] -> 3;
[1,2,2] -> 1;
[2,2,0] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0178 true

[0,0] -> 0;
[] -> 0;
[3,1,2] -> 3;
[1] -> 1;
[3,0,1] -> 3;
[0] -> 0;
[2,0] -> 2;
[1,2,0] -> 1;
[1,3,3] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0266 true

[3,2,2] -> 3;
[0,0,1] -> 0;
[3,3] -> 3;
[1] -> 1;
[3,1,2] -> 3;
[3] -> 3;
[1,1,1] -> 1;
[1,3,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0290 true

[2,1] -> 2;
[3,1] -> 3;
[0,2] -> 0;
[] -> 0;
[0] -> 0;
[3,1,2] -> 3;
[1,0] -> 1;
[2,0,0] -> 2;
[2] -> 2;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0106 true

[0,1] -> 0;
[1,0,2] -> 1;
[2] -> 2;
[2,1] -> 2;
[1,2] -> 1;
[1] -> 1;
[] -> 0;
[0] -> 0;
[1,3] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0176 true

[] -> 0;
[2] -> 2;
[0] -> 0;
[0,0] -> 0;
[2,2] -> 2;
[0,1] -> 0;
[3,1] -> 3;
[3] -> 3;
[1,2] -> 1;
[1] -> 1;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0045 true

[2,3,1] -> 2;
[] -> 0;
[0] -> 0;
[2] -> 2;
[3,3,2] -> 3;
[1,0] -> 1;
[2,1,2] -> 2;
[3] -> 3;
[1,3,3] -> 1;
[3,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0271 true

[] -> 0;
[1,3] -> 1;
[3] -> 3;
[1,2,3] -> 1;
[0,2,1] -> 0;
[2,1,1] -> 2;
[1,0] -> 1;
[3,3] -> 3;
[2] -> 2;
[3,0,1] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0106 true

[] -> 0;
[2,2,0] -> 2;
[2] -> 2;
[3,3] -> 3;
[1] -> 1;
[1,2] -> 1;
[2,0,0] -> 2;
[1,0,3] -> 1;
[0,1] -> 0;
[3,3,3] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0196 true

[0] -> 0;
[2,2,3] -> 2;
[] -> 0;
[2,1,2] -> 2;
[1,1] -> 1;
[3] -> 3;
[2] -> 2;
[3,2] -> 3;
[2,1,0] -> 2;
[0,2,0] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0260 true

[1] -> 1;
[0,2,1] -> 0;
[] -> 0;
[0,1,3] -> 0;
[3,0,3] -> 3;
[1,3,3] -> 1;
[2,1,3] -> 2;
[2,0,3] -> 2;
[2] -> 2;
[3,0,1] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[2,1,1] -> 2;
[] -> 0;
[2] -> 2;
[0,1,3] -> 0;
[0] -> 0;
[3,3] -> 3;
[2,1] -> 2;
[3] -> 3;
[0,2] -> 0;
[0,1,2] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0233 true

[2,2] -> 2;
[] -> 0;
[3] -> 3;
[1] -> 1;
[0,0] -> 0;
[3,0] -> 3;
[3,2] -> 3;
[1,3,2] -> 1;
[2,1] -> 2;
[3,3,0] -> 3;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0121 true

[2,2] -> 2;
[] -> 0;
[2] -> 2;
[3,3,3] -> 3;
[1,1] -> 1;
[1] -> 1;
[0] -> 0;
[0,0,0] -> 0;
[3] -> 3;
[0,2,3] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0095 true

[] -> 0;
[3,3] -> 3;
[3,1] -> 3;
[1,0,1] -> 1;
[3,2,0] -> 3;
[1,1] -> 1;
[3] -> 3;
[1,1,2] -> 1;
[2,3] -> 2;
[0] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0122 true

