(add,1,[3]) -> 4;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (x . 2) . 0) (x . 1)

0.0490 false

(countOdd,0,[2,0,2]) -> 0;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> 0

0.0002 false

(add,3,[]) -> 3;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0759 false

(countOdd,3,[3,0]) -> 4;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> S (x . 1)

0.2836 false

(add,3,[]) -> 3;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0746 false

(add,0,[1,3,2]) -> 6;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (Un_Cons (x . 2) . 1) . 0)
      (Un_Cons (Un_Cons (x . 2) . 1) . 0)

0.6528 false

(countOdd,3,[0,2,0]) -> 3;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.5076 false

(countOdd,0,[1,2,1]) -> 2;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    Un_Cons (Un_Cons (x . 2) . 1) . 0

0.0600 false

(countOdd,1,[]) -> 1;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0174 false

(countOdd,3,[3,3,3]) -> 6;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> add (x . 1) (x . 1)

1.2152 false

(countOdd,0,[1,2,2]) -> 1;
(add,0,[3,3,0]) -> 6;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (x . 2) . 0) (Un_Cons (Un_Cons (x . 2) . 1) . 0)

3.5048 false

(add,1,[]) -> 1;
(countOdd,1,[1,1]) -> 3;

=================================
None
(add,3,[]) -> 3;
(add,2,[]) -> 2;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 1

0.0739 false

(countOdd,2,[2,3]) -> 3;
(countOdd,2,[1,1]) -> 4;

=================================
None
(add,1,[3,3]) -> 7;
(add,0,[]) -> 0;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (x . 1)
      (x . 0 (x . 0 (x . 1) (x . 1))
         (x . 0 (x . 0 (x . 1) (x . 1)) (x . 0 (x . 1) (x . 1))))

1.4531 false

(add,0,[2,2,2]) -> 6;
(countOdd,2,[2,3,1]) -> 4;

=================================
None
(add,2,[0,3]) -> 5;
(countOdd,1,[1]) -> 2;

=================================
None
(countOdd,1,[1]) -> 2;
(countOdd,0,[]) -> 0;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> x . 0 (x . 1) (x . 1)

0.1193 false

(countOdd,0,[2,0,0]) -> 0;
(add,2,[3,2,0]) -> 7;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (x . 1) (x . 0 (x . 1) (Un_Cons (x . 2) . 0))

15.2823 false

(add,2,[3,0,2]) -> 7;
(add,2,[2,0]) -> 4;

=================================
None
(add,3,[0,0]) -> 3;
(countOdd,0,[]) -> 0;
(countOdd,3,[1,3,3]) -> 6;

=================================
None
(add,3,[1,3,2]) -> 9;
(countOdd,0,[2]) -> 0;
(add,1,[2]) -> 3;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (x . 1) (x . 0 (x . 1) (x . 1))

4.4692 false

(add,0,[1]) -> 1;
(countOdd,3,[3]) -> 4;
(add,0,[]) -> 0;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> S (x . 1)

3.5180 false

(countOdd,3,[1,2,1]) -> 5;
(add,0,[0,2]) -> 2;
(countOdd,3,[3,1]) -> 5;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) -> S (S (x . 1))

0.6506 false

(countOdd,0,[3,0,1]) -> 2;
(countOdd,0,[1,2]) -> 1;
(countOdd,3,[1]) -> 4;

=================================
None
(add,2,[]) -> 2;
(countOdd,0,[0,3]) -> 1;
(add,2,[2,2]) -> 6;

=================================
None
(add,0,[2]) -> 2;
(add,1,[]) -> 1;
(add,2,[0,2,2]) -> 6;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    Un_S (x . 0 (countOdd (countOdd (x . 1) S (x . 1)) S (x . 1))
            (countOdd (x . 1) S (x . 1)))

47.5199 false

(add,1,[0,1]) -> 2;
(add,1,[0,0]) -> 1;
(countOdd,2,[]) -> 2;

=================================
None
(add,2,[]) -> 2;
(countOdd,3,[2]) -> 3;
(add,1,[0,1]) -> 2;

=================================
None
(add,1,[2]) -> 3;
(countOdd,3,[1]) -> 4;
(add,1,[]) -> 1;

=================================
None
(add,2,[1,0,1]) -> 4;
(add,2,[]) -> 2;
(add,2,[2,1]) -> 5;
(add,3,[]) -> 3;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,3,[2,2,3]) -> 4;
(add,2,[1]) -> 3;
(add,1,[]) -> 1;

=================================
None
(countOdd,0,[0,1,3]) -> 2;
(countOdd,1,[3,0,1]) -> 3;
(countOdd,1,[1,3,0]) -> 3;
(countOdd,0,[3,1,3]) -> 3;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    countOdd (x . 0 S (x . 1) S (x . 1)) (Un_Cons (x . 2) . 0)

2.5779 false

(add,2,[0]) -> 2;
(add,1,[3,0]) -> 4;
(countOdd,2,[2]) -> 2;
(add,1,[0]) -> 1;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (Un_Cons (x . 2) . 0) (x . 1)

0.3618 false

(add,0,[1,3]) -> 4;
(countOdd,1,[1,0,1]) -> 3;
(add,2,[0]) -> 2;
(add,1,[0,3]) -> 4;

=================================
None
(countOdd,3,[3]) -> 4;
(countOdd,2,[2,0]) -> 2;
(countOdd,1,[3]) -> 2;
(add,1,[0]) -> 1;

=================================
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    x . 0 (x . 1) (Un_Cons (x . 2) . 0)

42.0286 false

(countOdd,2,[2]) -> 2;
(countOdd,1,[0,0]) -> 1;
(add,3,[]) -> 3;
(add,2,[3,1]) -> 6;

=================================
None
(countOdd,0,[0]) -> 0;
(countOdd,3,[1,0,1]) -> 5;
(countOdd,3,[]) -> 3;
(add,2,[]) -> 2;

=================================
None
(countOdd,3,[3,2,3]) -> 5;
(add,3,[2,2]) -> 7;
(countOdd,1,[2,1]) -> 2;
(add,1,[]) -> 1;

=================================
None
(countOdd,0,[0,3]) -> 1;
(add,2,[2,2]) -> 6;
(add,3,[0,3,2]) -> 8;
(countOdd,0,[0,2,1]) -> 1;

=================================
None
(countOdd,2,[3]) -> 3;
(add,0,[]) -> 0;
(countOdd,3,[]) -> 3;
(add,2,[3,2,0]) -> 7;
(countOdd,2,[]) -> 2;

=================================
None
(countOdd,2,[2,2,1]) -> 3;
(countOdd,3,[]) -> 3;
(add,3,[0,1]) -> 4;
(add,1,[]) -> 1;
(countOdd,0,[3,1,1]) -> 3;

=================================
None
(add,2,[0]) -> 2;
(countOdd,2,[]) -> 2;
(add,0,[0,1]) -> 1;
(add,2,[]) -> 2;
(countOdd,3,[0,3]) -> 4;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,2,[1]) -> 3;
(add,2,[3]) -> 5;
(countOdd,3,[0,3,3]) -> 5;
(countOdd,0,[2,0]) -> 0;

=================================
None
(countOdd,1,[1,3]) -> 3;
(add,2,[0]) -> 2;
(add,0,[]) -> 0;
(add,1,[0]) -> 1;
(add,2,[3,2,1]) -> 8;

=================================
None
(countOdd,1,[]) -> 1;
(add,1,[1,3,2]) -> 7;
(add,3,[1,3,3]) -> 10;
(add,2,[1]) -> 3;
(add,1,[3,1,2]) -> 7;

=================================
None
(add,3,[]) -> 3;
(add,3,[1]) -> 4;
(countOdd,2,[1,1,3]) -> 5;
(countOdd,0,[3,3,2]) -> 2;
(add,2,[0,1]) -> 3;

=================================
None
(countOdd,2,[]) -> 2;
(add,0,[1,3]) -> 4;
(countOdd,2,[1,0]) -> 3;
(countOdd,2,[1]) -> 3;
(countOdd,2,[1,1]) -> 4;

=================================
None
(add,3,[2,3]) -> 8;
(add,1,[]) -> 1;
(add,0,[2,3,1]) -> 6;
(add,3,[0]) -> 3;
(countOdd,3,[0]) -> 3;

=================================
None
(countOdd,1,[3,0]) -> 2;
(add,2,[0]) -> 2;
(add,0,[3,3,1]) -> 7;
(countOdd,0,[1,0]) -> 1;
(countOdd,2,[0]) -> 2;

=================================
None
(countOdd,3,[2,1,3]) -> 5;
(countOdd,1,[]) -> 1;
(countOdd,1,[2]) -> 1;
(add,2,[0,1]) -> 3;
(add,3,[2,2]) -> 7;
(add,0,[3]) -> 3;

=================================
None
(add,2,[2]) -> 4;
(add,2,[3,3,0]) -> 8;
(add,0,[3,0]) -> 3;
(add,2,[]) -> 2;
(add,0,[2,1,0]) -> 3;
(countOdd,1,[]) -> 1;

=================================
None
(add,1,[1,3]) -> 5;
(add,1,[0,3]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,0,[1,0,2]) -> 1;
(countOdd,1,[3]) -> 2;
(countOdd,3,[1,1]) -> 5;

=================================
None
(add,2,[1,0,3]) -> 6;
(countOdd,2,[0,0,0]) -> 2;
(add,3,[1,3,2]) -> 9;
(add,2,[2]) -> 4;
(countOdd,1,[]) -> 1;
(add,0,[2]) -> 2;

=================================
None
(countOdd,2,[]) -> 2;
(add,3,[0,2]) -> 5;
(add,3,[]) -> 3;
(add,3,[1,3]) -> 7;
(countOdd,0,[]) -> 0;
(countOdd,0,[1]) -> 1;

=================================
None
(add,1,[1]) -> 2;
(countOdd,1,[]) -> 1;
(countOdd,1,[0,1]) -> 2;
(countOdd,0,[2,2]) -> 0;
(add,3,[2,1,3]) -> 9;
(countOdd,1,[3,3]) -> 3;

=================================
None
(add,2,[]) -> 2;
(add,3,[3,0]) -> 6;
(add,3,[]) -> 3;
(countOdd,0,[3]) -> 1;
(add,2,[3]) -> 5;
(countOdd,2,[]) -> 2;

=================================
None
(countOdd,2,[]) -> 2;
(add,3,[2,2,2]) -> 9;
(add,2,[1,3,1]) -> 7;
(countOdd,3,[]) -> 3;
(countOdd,3,[0,2]) -> 3;
(countOdd,0,[1]) -> 1;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,0,[1,3]) -> 2;
(countOdd,0,[0,0,0]) -> 0;
(add,0,[0]) -> 0;
(countOdd,1,[1,3]) -> 3;
(countOdd,3,[3]) -> 4;

=================================
None
(countOdd,3,[]) -> 3;
(countOdd,3,[1,1]) -> 5;
(add,2,[1,2,3]) -> 8;
(add,2,[]) -> 2;
(add,3,[]) -> 3;
(add,3,[0,3]) -> 6;

=================================
None
(countOdd,2,[]) -> 2;
(add,2,[]) -> 2;
(add,3,[2,3,0]) -> 8;
(countOdd,1,[]) -> 1;
(countOdd,0,[0,1]) -> 1;
(add,1,[1,2]) -> 4;
(add,0,[1]) -> 1;

=================================
None
(countOdd,3,[2,0]) -> 3;
(add,0,[]) -> 0;
(countOdd,3,[1]) -> 4;
(add,3,[1]) -> 4;
(countOdd,1,[1,2,0]) -> 2;
(countOdd,0,[3]) -> 1;
(add,3,[]) -> 3;

=================================
None
(add,1,[1,0]) -> 2;
(add,2,[3]) -> 5;
(add,0,[1]) -> 1;
(add,3,[3,0]) -> 6;
(countOdd,3,[1,0]) -> 4;
(add,0,[]) -> 0;
(countOdd,3,[2,2]) -> 3;

=================================
None
(add,2,[3,0]) -> 5;
(add,3,[1]) -> 4;
(add,1,[0,2,0]) -> 3;
(countOdd,3,[2,2,2]) -> 3;
(countOdd,1,[3,1]) -> 3;
(add,3,[3,3]) -> 9;
(countOdd,3,[2,3,0]) -> 4;

=================================
None
(add,2,[3,0,1]) -> 6;
(countOdd,1,[1,2]) -> 2;
(add,3,[1,1,1]) -> 6;
(add,0,[2,1,1]) -> 4;
(countOdd,3,[3,1,2]) -> 5;
(add,2,[2,3,1]) -> 8;
(add,1,[2]) -> 3;

=================================
None
(add,0,[1,1,0]) -> 2;
(add,1,[]) -> 1;
(countOdd,1,[3,2,3]) -> 3;
(countOdd,2,[2]) -> 2;
(add,3,[]) -> 3;
(add,3,[1,2]) -> 6;
(add,2,[1,3,3]) -> 9;

=================================
None
(countOdd,3,[]) -> 3;
(add,3,[1,1,3]) -> 8;
(add,1,[3,1]) -> 5;
(countOdd,1,[2,3]) -> 2;
(add,3,[]) -> 3;
(countOdd,1,[3]) -> 2;
(countOdd,0,[3,1,1]) -> 3;

=================================
None
(countOdd,1,[1,2]) -> 2;
(add,1,[1]) -> 2;
(add,2,[2,3]) -> 7;
(add,2,[]) -> 2;
(add,2,[3]) -> 5;
(countOdd,1,[2]) -> 1;
(countOdd,3,[0,0]) -> 3;

=================================
None
(add,1,[3]) -> 4;
(add,3,[1,1,3]) -> 8;
(countOdd,3,[0]) -> 3;
(countOdd,2,[]) -> 2;
(add,1,[2,1,1]) -> 5;
(add,0,[2,3]) -> 5;
(add,1,[1,0]) -> 2;

=================================
None
(countOdd,2,[]) -> 2;
(add,0,[]) -> 0;
(add,0,[1]) -> 1;
(add,1,[1,0,0]) -> 2;
(countOdd,3,[1,3]) -> 5;
(countOdd,3,[3]) -> 4;
(countOdd,3,[3,3]) -> 5;

=================================
None
(add,1,[]) -> 1;
(add,2,[3,3,1]) -> 9;
(countOdd,3,[0,3,1]) -> 5;
(add,0,[3]) -> 3;
(add,3,[3,0,2]) -> 8;
(countOdd,0,[1,0]) -> 1;
(countOdd,1,[2]) -> 1;
(countOdd,2,[1,0,2]) -> 3;

=================================
None
(countOdd,2,[0]) -> 2;
(add,3,[3,3]) -> 9;
(add,3,[]) -> 3;
(add,2,[]) -> 2;
(add,2,[1,1,1]) -> 5;
(add,0,[]) -> 0;
(add,3,[3]) -> 6;
(countOdd,3,[3,3,1]) -> 6;

=================================
None
(add,1,[1,0]) -> 2;
(add,2,[2]) -> 4;
(add,1,[]) -> 1;
(countOdd,3,[]) -> 3;
(countOdd,0,[2]) -> 0;
(countOdd,1,[0,2]) -> 1;
(countOdd,3,[2,0,3]) -> 4;
(add,0,[2,0,3]) -> 5;

=================================
None
(add,2,[2]) -> 4;
(add,1,[0]) -> 1;
(countOdd,1,[2,2]) -> 1;
(countOdd,1,[2,3]) -> 2;
(add,0,[3,1,0]) -> 4;
(add,0,[2,2]) -> 4;
(add,3,[2,2]) -> 7;
(add,0,[]) -> 0;

=================================
None
(add,0,[2,2]) -> 4;
(add,2,[3,0]) -> 5;
(countOdd,3,[]) -> 3;
(countOdd,2,[1,0,0]) -> 3;
(countOdd,3,[0,2]) -> 3;
(countOdd,2,[1,1]) -> 4;
(countOdd,3,[0,3]) -> 4;
(add,2,[]) -> 2;

=================================
None
(add,1,[2]) -> 3;
(add,1,[2,3]) -> 6;
(add,0,[]) -> 0;
(countOdd,1,[]) -> 1;
(countOdd,0,[0,2,1]) -> 1;
(add,0,[3,0]) -> 3;
(countOdd,0,[1]) -> 1;
(countOdd,0,[2]) -> 0;

=================================
None
(add,1,[]) -> 1;
(countOdd,3,[1]) -> 4;
(add,3,[0,2,0]) -> 5;
(add,1,[1]) -> 2;
(countOdd,1,[1,0,2]) -> 2;
(add,3,[0,3,3]) -> 9;
(countOdd,1,[]) -> 1;
(countOdd,3,[0,3,3]) -> 5;

=================================
None
(add,0,[0,3]) -> 3;
(countOdd,2,[2]) -> 2;
(add,0,[0]) -> 0;
(add,3,[1,0,0]) -> 4;
(add,3,[2]) -> 5;
(countOdd,2,[0,0,2]) -> 2;
(add,1,[1]) -> 2;
(countOdd,0,[0,2,2]) -> 0;

=================================
None
(countOdd,3,[2,1]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,1,[2,0]) -> 1;
(add,2,[0,3,2]) -> 7;
(countOdd,1,[3,1,2]) -> 3;
(add,3,[1,3,2]) -> 9;
(add,0,[2,0]) -> 2;
(countOdd,3,[1,2,2]) -> 4;

=================================
None
(add,0,[3,1]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,1,[]) -> 1;
(countOdd,3,[1,0]) -> 4;
(countOdd,3,[]) -> 3;
(add,0,[2]) -> 2;
(add,0,[0]) -> 0;
(add,1,[0,0]) -> 1;

=================================
None
(countOdd,3,[0,1]) -> 4;
(countOdd,1,[]) -> 1;
(add,3,[]) -> 3;
(countOdd,3,[]) -> 3;
(add,0,[2,2,2]) -> 6;
(add,1,[3,0]) -> 4;
(countOdd,2,[0,3]) -> 3;
(countOdd,0,[1,3,3]) -> 3;
(add,2,[0,2,1]) -> 5;

=================================
None
(add,3,[0,1]) -> 4;
(countOdd,2,[]) -> 2;
(add,0,[1,3,0]) -> 4;
(add,0,[3]) -> 3;
(add,2,[]) -> 2;
(add,0,[]) -> 0;
(countOdd,2,[1,3]) -> 4;
(add,0,[0]) -> 0;
(add,3,[1,2,0]) -> 6;

=================================
None
(add,2,[1,0]) -> 3;
(add,3,[2,1,2]) -> 8;
(countOdd,1,[]) -> 1;
(countOdd,0,[2]) -> 0;
(add,3,[0,3,1]) -> 7;
(add,3,[0,1,0]) -> 4;
(add,1,[3]) -> 4;
(add,0,[0,0,1]) -> 1;
(add,1,[2]) -> 3;

=================================
None
(add,1,[2,0,1]) -> 4;
(add,2,[2,3,0]) -> 7;
(countOdd,0,[0]) -> 0;
(add,2,[1]) -> 3;
(add,3,[0,2]) -> 5;
(add,2,[0]) -> 2;
(add,2,[3,1]) -> 6;
(countOdd,2,[]) -> 2;
(add,3,[]) -> 3;

=================================
None
(add,2,[1,0,2]) -> 5;
(add,3,[3]) -> 6;
(add,1,[1,2]) -> 4;
(add,1,[3,3]) -> 7;
(add,3,[3,3,3]) -> 12;
(add,2,[2,3]) -> 7;
(countOdd,0,[1,1]) -> 2;
(add,0,[0,2,0]) -> 2;
(countOdd,1,[2,1]) -> 2;

=================================
None
(countOdd,0,[3,1,1]) -> 3;
(countOdd,0,[]) -> 0;
(add,0,[2]) -> 2;
(add,3,[3]) -> 6;
(countOdd,1,[0,3,3]) -> 3;
(countOdd,1,[3,3,2]) -> 3;
(countOdd,1,[0,0]) -> 1;
(add,3,[1,0,0]) -> 4;
(add,3,[2,3,2]) -> 10;

=================================
None
(add,1,[1]) -> 2;
(countOdd,2,[3,3]) -> 4;
(countOdd,2,[3,0,2]) -> 3;
(add,0,[3]) -> 3;
(countOdd,2,[1,2,1]) -> 4;
(add,0,[1]) -> 1;
(countOdd,1,[]) -> 1;
(countOdd,0,[0]) -> 0;
(add,0,[2,1,0]) -> 3;

=================================
None
(countOdd,3,[0]) -> 3;
(add,0,[0]) -> 0;
(add,2,[2]) -> 4;
(countOdd,2,[3]) -> 3;
(add,0,[2,2,2]) -> 6;
(add,2,[1,0]) -> 3;
(add,3,[1]) -> 4;
(add,1,[]) -> 1;
(add,1,[3,0,3]) -> 7;

=================================
None
(add,3,[0]) -> 3;
(countOdd,2,[1,1,3]) -> 5;
(add,2,[]) -> 2;
(add,0,[0,0]) -> 0;
(countOdd,1,[0,2]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,2,[1]) -> 3;
(countOdd,1,[2,0,1]) -> 2;
(countOdd,2,[2,1]) -> 3;

=================================
None
(add,3,[0]) -> 3;
(countOdd,1,[2,1]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,1,[2]) -> 1;
(countOdd,1,[1]) -> 2;
(countOdd,2,[2,0,1]) -> 3;
(countOdd,2,[1,2,1]) -> 4;
(add,1,[]) -> 1;
(countOdd,3,[3,0]) -> 4;

=================================
None
(countOdd,3,[0]) -> 3;
(countOdd,0,[0,3,2]) -> 1;
(add,0,[2,2]) -> 4;
(add,2,[3,0,1]) -> 6;
(countOdd,0,[]) -> 0;
(add,0,[]) -> 0;
(add,1,[0,2]) -> 3;
(countOdd,0,[2]) -> 0;
(add,0,[0,0,2]) -> 2;
(add,1,[1,2]) -> 4;

=================================
None
(add,2,[]) -> 2;
(countOdd,2,[1,3]) -> 4;
(add,1,[3,0]) -> 4;
(countOdd,2,[3,1,1]) -> 5;
(add,0,[0]) -> 0;
(countOdd,3,[0,2,0]) -> 3;
(add,3,[0,2,1]) -> 6;
(countOdd,0,[]) -> 0;
(countOdd,1,[3,1,0]) -> 3;
(add,3,[3,3,3]) -> 12;

=================================
None
(add,3,[]) -> 3;
(add,2,[3,2,3]) -> 10;
(add,0,[]) -> 0;
(add,3,[3]) -> 6;
(add,3,[1,2,3]) -> 9;
(add,3,[3,0]) -> 6;
(countOdd,1,[0,0]) -> 1;
(countOdd,3,[0,1]) -> 4;
(add,1,[3,2,0]) -> 6;
(countOdd,1,[1,3,1]) -> 4;

=================================
None
(countOdd,3,[]) -> 3;
(countOdd,3,[1,0]) -> 4;
(add,2,[3,3]) -> 8;
(add,3,[]) -> 3;
(countOdd,1,[1,1,1]) -> 4;
(countOdd,1,[1,2]) -> 2;
(countOdd,1,[1]) -> 2;
(add,0,[2,3,1]) -> 6;
(countOdd,0,[3,2]) -> 1;
(add,3,[3]) -> 6;

=================================
None
(countOdd,3,[1,1,0]) -> 5;
(add,3,[1,3,1]) -> 8;
(countOdd,1,[2]) -> 1;
(countOdd,0,[0,2]) -> 0;
(add,2,[]) -> 2;
(countOdd,2,[3,2]) -> 3;
(add,0,[1]) -> 1;
(countOdd,0,[3,2,2]) -> 1;
(add,1,[0,1]) -> 2;
(countOdd,0,[0,2,3]) -> 1;

=================================
None
(add,2,[0,3]) -> 5;
(countOdd,2,[]) -> 2;
(add,1,[2,1]) -> 4;
(countOdd,3,[0]) -> 3;
(countOdd,0,[2]) -> 0;
(add,0,[1,1]) -> 2;
(countOdd,3,[]) -> 3;
(countOdd,3,[3,2,3]) -> 5;
(add,2,[2]) -> 4;
(countOdd,0,[3]) -> 1;

=================================
None
(add,3,[2,0]) -> 5;
(add,0,[2,2]) -> 4;
(countOdd,3,[0,3,3]) -> 5;
(add,0,[0]) -> 0;
(add,2,[]) -> 2;
(countOdd,2,[]) -> 2;
(countOdd,2,[2]) -> 2;
(add,2,[1,2,0]) -> 5;
(add,2,[3]) -> 5;
(add,3,[3,2,0]) -> 8;

=================================
None
(countOdd,2,[0]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,3,[2,0,0]) -> 3;
(countOdd,3,[3,2,3]) -> 5;
(countOdd,1,[1]) -> 2;
(add,0,[2]) -> 2;
(add,3,[2,2,2]) -> 9;
(countOdd,2,[]) -> 2;
(add,3,[3,3,3]) -> 12;
(add,3,[]) -> 3;

=================================
None
(add,3,[0]) -> 3;
(countOdd,2,[0,3,1]) -> 4;
(add,3,[2,2,2]) -> 9;
(add,3,[]) -> 3;
(countOdd,3,[1]) -> 4;
(add,2,[]) -> 2;
(countOdd,0,[0,1,2]) -> 1;
(countOdd,0,[1,1]) -> 2;
(countOdd,2,[3,2]) -> 3;
(countOdd,0,[2,2]) -> 0;

=================================
None
(add,1,[3]) -> 4;
(countOdd,2,[1]) -> 3;
(countOdd,2,[0]) -> 2;
(add,0,[]) -> 0;
(countOdd,2,[]) -> 2;
(add,3,[]) -> 3;
(add,3,[3]) -> 6;
(add,1,[0,3,3]) -> 7;
(countOdd,3,[1,0,3]) -> 5;
(add,1,[2,2]) -> 5;

=================================
None
(countOdd,0,[2,0,1]) -> 1;
(countOdd,3,[3,2,3]) -> 5;
(countOdd,0,[]) -> 0;
(add,3,[]) -> 3;
(add,2,[]) -> 2;
(add,1,[1]) -> 2;
(add,3,[3,1]) -> 7;
(countOdd,3,[2]) -> 3;
(add,0,[]) -> 0;
(add,3,[3]) -> 6;
(countOdd,2,[]) -> 2;

=================================
None
(countOdd,0,[]) -> 0;
(add,3,[]) -> 3;
(countOdd,3,[0,3]) -> 4;
(add,1,[3,0]) -> 4;
(add,0,[3]) -> 3;
(add,1,[]) -> 1;
(countOdd,3,[]) -> 3;
(add,2,[]) -> 2;
(countOdd,1,[3,1,3]) -> 4;
(add,2,[0,1,0]) -> 3;
(countOdd,0,[1,0]) -> 1;

=================================
None
(add,1,[1]) -> 2;
(add,1,[0,0]) -> 1;
(countOdd,2,[2]) -> 2;
(countOdd,1,[1,1,0]) -> 3;
(countOdd,0,[1]) -> 1;
(add,2,[3,2]) -> 7;
(countOdd,2,[0,3]) -> 3;
(add,0,[2,1,3]) -> 6;
(countOdd,2,[2,0]) -> 2;
(countOdd,3,[2,0,3]) -> 4;
(add,2,[0]) -> 2;

=================================
None
(countOdd,3,[0]) -> 3;
(add,2,[0,0,1]) -> 3;
(countOdd,2,[2,3]) -> 3;
(countOdd,1,[3,3,1]) -> 4;
(add,1,[]) -> 1;
(add,2,[2]) -> 4;
(add,1,[2,3,2]) -> 8;
(countOdd,2,[2,1,0]) -> 3;
(countOdd,1,[0,2]) -> 1;
(countOdd,2,[]) -> 2;
(add,2,[3]) -> 5;

=================================
None
(countOdd,1,[1,1,0]) -> 3;
(add,0,[2,1,0]) -> 3;
(add,3,[]) -> 3;
(countOdd,1,[]) -> 1;
(add,0,[]) -> 0;
(countOdd,0,[3,3,2]) -> 2;
(add,0,[0]) -> 0;
(add,3,[2,1]) -> 6;
(countOdd,2,[3,3]) -> 4;
(add,1,[2]) -> 3;
(add,1,[2,0]) -> 3;

=================================
None
(countOdd,0,[2,0]) -> 0;
(add,2,[1,2]) -> 5;
(add,1,[0,3]) -> 4;
(add,1,[0]) -> 1;
(countOdd,0,[3,1,1]) -> 3;
(add,1,[2]) -> 3;
(add,0,[]) -> 0;
(countOdd,3,[0,2]) -> 3;
(add,3,[]) -> 3;
(countOdd,2,[2]) -> 2;
(countOdd,0,[]) -> 0;

=================================
None
(countOdd,2,[2]) -> 2;
(countOdd,0,[2,1,0]) -> 1;
(countOdd,0,[2,1]) -> 1;
(add,1,[2,0]) -> 3;
(countOdd,3,[1,3,2]) -> 5;
(add,2,[3,3,3]) -> 11;
(add,1,[1,2,3]) -> 7;
(countOdd,1,[1,2,0]) -> 2;
(add,2,[3,2]) -> 7;
(add,2,[]) -> 2;
(add,3,[2,1,0]) -> 6;

=================================
None
(countOdd,1,[]) -> 1;
(add,1,[3,2]) -> 6;
(countOdd,2,[1]) -> 3;
(countOdd,2,[2,2]) -> 2;
(countOdd,1,[2]) -> 1;
(add,1,[]) -> 1;
(countOdd,2,[3]) -> 3;
(add,0,[1,1]) -> 2;
(countOdd,1,[3,2,2]) -> 2;
(add,0,[1]) -> 1;
(add,0,[0,1,1]) -> 2;

=================================
None
(add,3,[]) -> 3;
(countOdd,1,[2]) -> 1;
(add,3,[0]) -> 3;
(add,3,[3]) -> 6;
(countOdd,0,[0]) -> 0;
(add,1,[2,3]) -> 6;
(countOdd,2,[]) -> 2;
(countOdd,0,[2]) -> 0;
(add,2,[2]) -> 4;
(add,3,[3,2,3]) -> 11;
(countOdd,1,[0,0,0]) -> 1;

=================================
None
(countOdd,0,[2,1,1]) -> 2;
(countOdd,1,[]) -> 1;
(add,0,[1,1]) -> 2;
(countOdd,3,[]) -> 3;
(add,1,[1]) -> 2;
(add,1,[]) -> 1;
(countOdd,1,[1,0]) -> 2;
(add,0,[3,2]) -> 5;
(countOdd,1,[1,3,0]) -> 3;
(add,0,[3,1,1]) -> 5;
(add,2,[]) -> 2;

=================================
None
(add,0,[2,2,3]) -> 7;
(add,0,[1]) -> 1;
(countOdd,1,[]) -> 1;
(countOdd,2,[3]) -> 3;
(add,1,[1,2]) -> 4;
(countOdd,1,[1]) -> 2;
(countOdd,2,[3,2,1]) -> 4;
(add,3,[1,3,1]) -> 8;
(countOdd,0,[3]) -> 1;
(add,0,[2]) -> 2;
(add,3,[0]) -> 3;
(add,1,[0]) -> 1;

=================================
None
(add,1,[]) -> 1;
(countOdd,0,[1]) -> 1;
(add,0,[]) -> 0;
(add,2,[0,3]) -> 5;
(countOdd,2,[0,1,3]) -> 4;
(countOdd,1,[2,1,1]) -> 3;
(countOdd,2,[2,0,2]) -> 2;
(add,3,[]) -> 3;
(countOdd,1,[2]) -> 1;
(countOdd,0,[0]) -> 0;
(add,2,[1,1]) -> 4;
(add,1,[0,3]) -> 4;

=================================
None
(countOdd,2,[3]) -> 3;
(countOdd,1,[2]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,2,[0]) -> 2;
(countOdd,2,[3,3]) -> 4;
(countOdd,3,[]) -> 3;
(add,3,[1,3]) -> 7;
(countOdd,1,[0,1,1]) -> 3;
(add,1,[1,2,2]) -> 6;
(countOdd,3,[3,1,2]) -> 5;
(add,1,[2,2]) -> 5;
(add,0,[3,0]) -> 3;

=================================
None
(countOdd,3,[3]) -> 4;
(countOdd,1,[0,2,3]) -> 2;
(countOdd,0,[3,0]) -> 1;
(add,2,[0,1,0]) -> 3;
(add,2,[3,2,3]) -> 10;
(add,1,[1,2]) -> 4;
(countOdd,3,[2]) -> 3;
(countOdd,0,[]) -> 0;
(add,0,[3]) -> 3;
(countOdd,3,[3,0]) -> 4;
(countOdd,3,[0,2]) -> 3;
(add,1,[3]) -> 4;

=================================
None
(add,0,[]) -> 0;
(add,3,[1,2,0]) -> 6;
(countOdd,2,[1,0,0]) -> 3;
(countOdd,2,[0]) -> 2;
(countOdd,3,[3,2]) -> 4;
(add,2,[2,0,0]) -> 4;
(add,1,[]) -> 1;
(countOdd,3,[1,3,0]) -> 5;
(countOdd,2,[0,1,0]) -> 3;
(add,3,[]) -> 3;
(add,3,[0,2]) -> 5;
(countOdd,1,[2]) -> 1;

=================================
None
(add,3,[]) -> 3;
(add,1,[1]) -> 2;
(countOdd,2,[3]) -> 3;
(countOdd,1,[3,2,0]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,3,[]) -> 3;
(countOdd,0,[0,2]) -> 0;
(add,0,[0]) -> 0;
(countOdd,1,[3,2]) -> 2;
(countOdd,1,[1,3,2]) -> 3;
(countOdd,0,[0,0,2]) -> 0;
(add,0,[]) -> 0;

=================================
None
(countOdd,1,[]) -> 1;
(add,0,[]) -> 0;
(countOdd,1,[1,2]) -> 2;
(add,2,[1]) -> 3;
(add,2,[]) -> 2;
(countOdd,2,[0]) -> 2;
(countOdd,0,[0,3,2]) -> 1;
(countOdd,1,[0,3]) -> 2;
(countOdd,2,[1,0]) -> 3;
(add,1,[1,0]) -> 2;
(countOdd,2,[]) -> 2;
(add,3,[]) -> 3;

=================================
None
(add,3,[1,1,2]) -> 7;
(countOdd,0,[]) -> 0;
(add,2,[0,1,1]) -> 4;
(countOdd,3,[3]) -> 4;
(countOdd,0,[2,0]) -> 0;
(countOdd,3,[]) -> 3;
(add,0,[2]) -> 2;
(add,3,[]) -> 3;
(add,1,[2,0,2]) -> 5;
(add,0,[1,2,2]) -> 5;
(add,2,[]) -> 2;
(countOdd,3,[2,3]) -> 4;

=================================
None
(countOdd,2,[0,0]) -> 2;
(countOdd,2,[2,3,0]) -> 3;
(add,0,[3]) -> 3;
(countOdd,0,[1]) -> 1;
(countOdd,1,[0,3,1]) -> 3;
(add,3,[1,0]) -> 4;
(add,0,[2,3,1]) -> 6;
(add,1,[]) -> 1;
(add,3,[]) -> 3;
(add,3,[3,1,2]) -> 9;
(add,3,[0,3,1]) -> 7;
(countOdd,3,[3,3]) -> 5;

=================================
None
(countOdd,3,[0]) -> 3;
(countOdd,3,[1]) -> 4;
(add,2,[0,0]) -> 2;
(add,0,[2]) -> 2;
(countOdd,3,[2,3]) -> 4;
(countOdd,0,[0]) -> 0;
(countOdd,0,[]) -> 0;
(countOdd,2,[3,1]) -> 4;
(countOdd,0,[2,3,1]) -> 2;
(countOdd,2,[1,2]) -> 3;
(countOdd,2,[3,3,0]) -> 4;
(add,0,[0,2,1]) -> 3;

=================================
None
(add,0,[2,1]) -> 3;
(add,2,[]) -> 2;
(countOdd,0,[3]) -> 1;
(add,2,[1]) -> 3;
(countOdd,1,[3,3]) -> 3;
(add,0,[]) -> 0;
(add,1,[]) -> 1;
(add,0,[3,2]) -> 5;
(add,1,[3,1]) -> 5;
(countOdd,2,[2]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,0,[1,3,1]) -> 3;
(add,2,[3]) -> 5;

=================================
None
(countOdd,0,[1]) -> 1;
(add,0,[3]) -> 3;
(add,0,[2,2]) -> 4;
(add,3,[0,3]) -> 6;
(countOdd,0,[]) -> 0;
(add,1,[1,0]) -> 2;
(countOdd,3,[]) -> 3;
(countOdd,2,[1,1,3]) -> 5;
(add,1,[2,0]) -> 3;
(countOdd,3,[2,0]) -> 3;
(countOdd,2,[3,3,3]) -> 5;
(add,1,[0,1,0]) -> 2;
(countOdd,2,[3,2]) -> 3;

=================================
None
(add,2,[2,2,3]) -> 9;
(add,0,[3,2,3]) -> 8;
(countOdd,3,[]) -> 3;
(add,0,[3,3]) -> 6;
(countOdd,3,[3,3]) -> 5;
(countOdd,1,[0]) -> 1;
(add,3,[0,0]) -> 3;
(add,2,[3,2,2]) -> 9;
(countOdd,2,[1,2,2]) -> 3;
(add,1,[2]) -> 3;
(add,1,[2,1,2]) -> 6;
(countOdd,2,[2,0]) -> 2;
(add,0,[]) -> 0;

=================================
None
(add,2,[]) -> 2;
(countOdd,1,[3]) -> 2;
(countOdd,3,[]) -> 3;
(add,1,[1]) -> 2;
(countOdd,2,[]) -> 2;
(add,0,[3,2,3]) -> 8;
(add,3,[]) -> 3;
(countOdd,2,[3,2]) -> 3;
(add,2,[0,3]) -> 5;
(countOdd,1,[1,3,1]) -> 4;
(add,0,[0]) -> 0;
(countOdd,0,[3,3,0]) -> 2;
(add,1,[2,0]) -> 3;

=================================
None
(add,2,[2,1,2]) -> 7;
(countOdd,3,[2,0,3]) -> 4;
(add,0,[2,3]) -> 5;
(add,1,[1,3]) -> 5;
(add,0,[3,1,2]) -> 6;
(countOdd,0,[]) -> 0;
(add,2,[]) -> 2;
(add,2,[1,2]) -> 5;
(add,2,[1,2,0]) -> 5;
(countOdd,2,[]) -> 2;
(countOdd,2,[2]) -> 2;
(add,1,[2,1]) -> 4;
(countOdd,1,[3,0,0]) -> 2;

=================================
None
(add,0,[1,0]) -> 1;
(countOdd,2,[]) -> 2;
(add,0,[]) -> 0;
(countOdd,1,[1]) -> 2;
(countOdd,3,[3,2]) -> 4;
(countOdd,1,[3,2,1]) -> 3;
(countOdd,0,[]) -> 0;
(countOdd,1,[1,2,0]) -> 2;
(add,3,[2]) -> 5;
(countOdd,3,[]) -> 3;
(countOdd,0,[2,3,3]) -> 2;
(add,2,[0]) -> 2;
(add,2,[]) -> 2;

=================================
None
(countOdd,0,[1,1]) -> 2;
(add,2,[2,3]) -> 7;
(countOdd,3,[1,1,0]) -> 5;
(add,3,[2,1]) -> 6;
(countOdd,3,[3,3,0]) -> 5;
(add,3,[]) -> 3;
(countOdd,1,[3,0]) -> 2;
(countOdd,1,[3]) -> 2;
(countOdd,3,[2,0]) -> 3;
(add,2,[3]) -> 5;
(countOdd,0,[1,0]) -> 1;
(countOdd,3,[2,1,2]) -> 4;
(countOdd,1,[0,2,2]) -> 1;

=================================
None
(countOdd,2,[]) -> 2;
(add,0,[1,1]) -> 2;
(add,1,[1]) -> 2;
(countOdd,1,[]) -> 1;
(countOdd,3,[3,3,1]) -> 6;
(countOdd,0,[0,1,3]) -> 2;
(add,2,[2,0,2]) -> 6;
(add,0,[1,3]) -> 4;
(add,2,[2,2,3]) -> 9;
(add,2,[1]) -> 3;
(countOdd,2,[1,1]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,0,[2,2,3]) -> 1;

=================================
None
(add,3,[2]) -> 5;
(add,0,[2]) -> 2;
(add,3,[2,0]) -> 5;
(add,0,[1,2,1]) -> 4;
(countOdd,3,[0,0]) -> 3;
(add,0,[]) -> 0;
(add,1,[]) -> 1;
(countOdd,0,[2,2]) -> 0;
(add,2,[1,1]) -> 4;
(countOdd,1,[]) -> 1;
(countOdd,0,[3,3]) -> 2;
(countOdd,2,[2,1,0]) -> 3;
(add,2,[0,2,0]) -> 4;

=================================
None
(add,0,[2]) -> 2;
(add,2,[1]) -> 3;
(countOdd,0,[2]) -> 0;
(countOdd,1,[3,2,2]) -> 2;
(add,3,[]) -> 3;
(countOdd,1,[3]) -> 2;
(countOdd,3,[3,1,2]) -> 5;
(add,2,[]) -> 2;
(countOdd,2,[]) -> 2;
(add,2,[3]) -> 5;
(add,3,[0]) -> 3;
(countOdd,1,[]) -> 1;
(countOdd,3,[2]) -> 3;

=================================
None
(countOdd,1,[1]) -> 2;
(countOdd,3,[0]) -> 3;
(countOdd,3,[1,1]) -> 5;
(countOdd,2,[1,1]) -> 4;
(add,0,[2,2,1]) -> 5;
(countOdd,3,[2,1]) -> 4;
(countOdd,1,[1,1,0]) -> 3;
(countOdd,0,[2,3,1]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,2,[]) -> 2;
(add,2,[3,2,1]) -> 8;
(countOdd,3,[1]) -> 4;
(add,1,[]) -> 1;
(add,0,[3]) -> 3;

=================================
None
(countOdd,1,[1,2]) -> 2;
(add,0,[1,0,2]) -> 3;
(add,0,[0]) -> 0;
(countOdd,3,[2,3]) -> 4;
(countOdd,0,[3]) -> 1;
(countOdd,3,[]) -> 3;
(add,3,[1,1]) -> 5;
(countOdd,0,[2]) -> 0;
(countOdd,0,[]) -> 0;
(countOdd,3,[0]) -> 3;
(countOdd,1,[3,3,0]) -> 3;
(add,1,[1,1,3]) -> 6;
(add,3,[2]) -> 5;
(countOdd,0,[0,1,0]) -> 1;

=================================
None
(add,3,[3,3]) -> 9;
(countOdd,3,[]) -> 3;
(add,2,[3]) -> 5;
(countOdd,0,[1]) -> 1;
(add,1,[]) -> 1;
(countOdd,0,[0]) -> 0;
(add,2,[2,1]) -> 5;
(add,2,[2]) -> 4;
(countOdd,2,[1,0,3]) -> 4;
(countOdd,1,[0,2,2]) -> 1;
(countOdd,0,[3]) -> 1;
(countOdd,1,[]) -> 1;
(add,3,[2,1,0]) -> 6;
(add,3,[3,0]) -> 6;

=================================
None
(countOdd,0,[0,2]) -> 0;
(add,3,[1,0,3]) -> 7;
(countOdd,2,[2,1,0]) -> 3;
(add,1,[2,1]) -> 4;
(add,2,[]) -> 2;
(countOdd,0,[0]) -> 0;
(countOdd,2,[0]) -> 2;
(add,2,[2]) -> 4;
(countOdd,1,[3]) -> 2;
(add,2,[1,3,3]) -> 9;
(countOdd,1,[1]) -> 2;
(countOdd,0,[2]) -> 0;
(add,2,[0]) -> 2;
(countOdd,1,[]) -> 1;

=================================
None
(add,2,[]) -> 2;
(add,3,[2,0]) -> 5;
(add,1,[]) -> 1;
(add,0,[0,2]) -> 2;
(countOdd,1,[3,2]) -> 2;
(add,2,[1,1,2]) -> 6;
(countOdd,0,[3,2,1]) -> 2;
(add,2,[1]) -> 3;
(add,1,[0,0]) -> 1;
(countOdd,1,[0,2,0]) -> 1;
(add,1,[3,2]) -> 6;
(countOdd,2,[3,3]) -> 4;
(countOdd,1,[]) -> 1;
(add,1,[0]) -> 1;

=================================
None
(add,0,[3,3]) -> 6;
(add,3,[2,0]) -> 5;
(countOdd,3,[0,0]) -> 3;
(countOdd,2,[]) -> 2;
(add,3,[]) -> 3;
(add,1,[2,0]) -> 3;
(countOdd,1,[1,1]) -> 3;
(add,1,[3]) -> 4;
(add,3,[1,2]) -> 6;
(countOdd,0,[2,3,0]) -> 1;
(countOdd,0,[0,2,3]) -> 1;
(countOdd,3,[1]) -> 4;
(countOdd,3,[]) -> 3;
(countOdd,0,[2,1]) -> 1;

=================================
None
(countOdd,1,[]) -> 1;
(add,0,[]) -> 0;
(countOdd,3,[0,1,3]) -> 5;
(add,0,[2,2]) -> 4;
(countOdd,2,[]) -> 2;
(add,3,[2,0]) -> 5;
(add,3,[1,3]) -> 7;
(add,1,[3,1,3]) -> 8;
(countOdd,2,[0,3]) -> 3;
(countOdd,3,[2]) -> 3;
(countOdd,2,[0]) -> 2;
(add,3,[]) -> 3;
(countOdd,2,[3,0,2]) -> 3;
(add,1,[1,3,3]) -> 8;

=================================
None
(countOdd,3,[]) -> 3;
(add,2,[3,0]) -> 5;
(add,3,[]) -> 3;
(add,2,[1,0,1]) -> 4;
(countOdd,2,[3,2,3]) -> 4;
(add,0,[1]) -> 1;
(countOdd,0,[2,2]) -> 0;
(add,0,[0,3,0]) -> 3;
(add,1,[1,0]) -> 2;
(countOdd,3,[0,1]) -> 4;
(countOdd,2,[2]) -> 2;
(add,2,[0]) -> 2;
(countOdd,0,[]) -> 0;
(add,2,[2,1,1]) -> 6;

=================================
None
(add,3,[]) -> 3;
(add,2,[1,3,3]) -> 9;
(add,3,[3,2,1]) -> 9;
(countOdd,0,[]) -> 0;
(countOdd,1,[]) -> 1;
(countOdd,3,[0,2,0]) -> 3;
(add,2,[1,1]) -> 4;
(add,0,[2,0]) -> 2;
(add,0,[3]) -> 3;
(countOdd,0,[1,2]) -> 1;
(add,2,[2]) -> 4;
(add,0,[0,3,2]) -> 5;
(countOdd,2,[]) -> 2;
(countOdd,2,[1,0]) -> 3;

=================================
None
(countOdd,3,[3,1]) -> 5;
(add,0,[1,1]) -> 2;
(add,1,[0,2]) -> 3;
(add,2,[]) -> 2;
(countOdd,0,[3]) -> 1;
(countOdd,2,[3,2,0]) -> 3;
(countOdd,2,[1,0]) -> 3;
(countOdd,3,[0]) -> 3;
(add,3,[1,0,1]) -> 5;
(add,1,[3,3,2]) -> 9;
(countOdd,3,[]) -> 3;
(countOdd,0,[0,3]) -> 1;
(countOdd,1,[]) -> 1;
(add,2,[2]) -> 4;

=================================
None
(countOdd,3,[]) -> 3;
(add,1,[1]) -> 2;
(add,1,[3]) -> 4;
(countOdd,1,[2]) -> 1;
(countOdd,1,[]) -> 1;
(add,3,[2,3,3]) -> 11;
(add,3,[1]) -> 4;
(add,0,[2]) -> 2;
(add,2,[]) -> 2;
(countOdd,3,[0,2]) -> 3;
(add,1,[]) -> 1;
(add,0,[1,0,0]) -> 1;
(add,2,[2,2]) -> 6;
(add,2,[1,1]) -> 4;
(countOdd,0,[2]) -> 0;

=================================
None
(add,3,[3,3,2]) -> 11;
(countOdd,3,[3]) -> 4;
(countOdd,2,[]) -> 2;
(countOdd,1,[0,2]) -> 1;
(add,3,[]) -> 3;
(countOdd,0,[2,1]) -> 1;
(countOdd,1,[2,3,3]) -> 3;
(countOdd,0,[1,0]) -> 1;
(countOdd,1,[0,1,3]) -> 3;
(add,0,[3,0,1]) -> 4;
(countOdd,3,[]) -> 3;
(countOdd,1,[]) -> 1;
(add,0,[]) -> 0;
(add,2,[0,1,3]) -> 6;
(add,1,[2,1]) -> 4;

=================================
None
(countOdd,2,[3,3,2]) -> 4;
(countOdd,3,[2]) -> 3;
(countOdd,2,[]) -> 2;
(countOdd,3,[3,0,0]) -> 4;
(add,1,[0,0]) -> 1;
(add,0,[0,0,2]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,3,[]) -> 3;
(add,2,[2,1,1]) -> 6;
(countOdd,3,[3,0]) -> 4;
(add,3,[0,0,3]) -> 6;
(countOdd,2,[0,1]) -> 3;
(countOdd,0,[2]) -> 0;
(countOdd,3,[2,2,0]) -> 3;
(add,0,[2,2]) -> 4;

=================================
None
(add,2,[]) -> 2;
(add,0,[0]) -> 0;
(add,0,[3,0]) -> 3;
(countOdd,0,[1,0,1]) -> 2;
(add,1,[1,2,0]) -> 4;
(countOdd,0,[2,3,0]) -> 1;
(add,0,[]) -> 0;
(countOdd,0,[]) -> 0;
(countOdd,2,[0]) -> 2;
(countOdd,0,[2,1,3]) -> 2;
(countOdd,2,[0,0,2]) -> 2;
(countOdd,1,[]) -> 1;
(add,1,[3,2,1]) -> 7;
(add,1,[1,2]) -> 4;
(countOdd,1,[0,3]) -> 2;

=================================
None
(add,1,[2]) -> 3;
(countOdd,0,[2,1]) -> 1;
(add,1,[0,2,3]) -> 6;
(add,3,[3,2,1]) -> 9;
(countOdd,0,[3,0,3]) -> 2;
(countOdd,2,[3]) -> 3;
(add,2,[1,2,3]) -> 8;
(countOdd,3,[0,3]) -> 4;
(countOdd,1,[3,3,1]) -> 4;
(countOdd,3,[3,2]) -> 4;
(countOdd,0,[3,2]) -> 1;
(add,1,[0,1,2]) -> 4;
(countOdd,3,[]) -> 3;
(add,3,[]) -> 3;
(countOdd,1,[3,2]) -> 2;

=================================
None
(countOdd,0,[2]) -> 0;
(add,3,[2]) -> 5;
(add,0,[]) -> 0;
(add,3,[1,1,0]) -> 5;
(countOdd,1,[1,2]) -> 2;
(countOdd,3,[2,2,1]) -> 4;
(add,1,[0,1,1]) -> 3;
(countOdd,3,[0]) -> 3;
(countOdd,2,[0,0]) -> 2;
(countOdd,1,[2,3]) -> 2;
(countOdd,3,[1,1]) -> 5;
(countOdd,1,[]) -> 1;
(countOdd,0,[]) -> 0;
(add,2,[0,3,1]) -> 6;
(add,3,[3]) -> 6;

=================================
None
(add,3,[2]) -> 5;
(add,0,[0]) -> 0;
(add,3,[1]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,3,[1,2]) -> 4;
(countOdd,0,[0,1]) -> 1;
(add,2,[2,3]) -> 7;
(countOdd,3,[1,1]) -> 5;
(countOdd,0,[3]) -> 1;
(add,3,[3,3]) -> 9;
(countOdd,2,[1,1,1]) -> 5;
(countOdd,1,[1,0]) -> 2;
(countOdd,3,[1,3]) -> 5;
(add,2,[0,2]) -> 4;
(add,2,[3,1,0]) -> 6;

=================================
None
(add,1,[2,2,1]) -> 6;
(add,0,[]) -> 0;
(countOdd,0,[3,1]) -> 2;
(countOdd,2,[0,3]) -> 3;
(add,3,[0,0,3]) -> 6;
(countOdd,3,[0,3,1]) -> 5;
(countOdd,2,[]) -> 2;
(countOdd,3,[2]) -> 3;
(countOdd,2,[3]) -> 3;
(add,2,[3]) -> 5;
(add,0,[0,3]) -> 3;
(countOdd,3,[]) -> 3;
(add,1,[2,1]) -> 4;
(add,3,[3,2,0]) -> 8;
(add,3,[1,1]) -> 5;

=================================
None
(countOdd,3,[0]) -> 3;
(add,3,[3,0]) -> 6;
(countOdd,0,[3]) -> 1;
(add,2,[]) -> 2;
(add,3,[0]) -> 3;
(add,0,[1]) -> 1;
(countOdd,3,[0,1]) -> 4;
(add,2,[1,0,1]) -> 4;
(countOdd,2,[1,0]) -> 3;
(countOdd,1,[3,3,2]) -> 3;
(countOdd,1,[1,2,3]) -> 3;
(add,0,[2,2,0]) -> 4;
(countOdd,1,[2,2,2]) -> 1;
(countOdd,2,[0,3]) -> 3;
(countOdd,2,[]) -> 2;

=================================
None
(add,0,[0,3,1]) -> 4;
(add,0,[]) -> 0;
(add,2,[2,3,0]) -> 7;
(add,0,[1,0,3]) -> 4;
(countOdd,3,[0]) -> 3;
(add,3,[2,0,3]) -> 8;
(countOdd,0,[]) -> 0;
(add,3,[2,1,1]) -> 7;
(countOdd,1,[]) -> 1;
(countOdd,2,[1]) -> 3;
(add,1,[3,2]) -> 6;
(add,0,[3,0]) -> 3;
(add,3,[]) -> 3;
(countOdd,1,[3,1,1]) -> 4;
(countOdd,2,[1,3,0]) -> 4;

=================================
None
(add,3,[2]) -> 5;
(add,1,[2,3,3]) -> 9;
(add,0,[3]) -> 3;
(add,1,[3]) -> 4;
(countOdd,0,[2,1]) -> 1;
(add,2,[0,3]) -> 5;
(add,0,[1,2,3]) -> 6;
(add,2,[0,0,2]) -> 4;
(countOdd,3,[1,3]) -> 5;
(countOdd,0,[0,0,3]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,0,[3,0]) -> 1;
(add,2,[2,2,0]) -> 6;
(countOdd,2,[3,1]) -> 4;
(countOdd,3,[1]) -> 4;
(countOdd,1,[]) -> 1;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,2,[2,3,2]) -> 3;
(add,1,[2]) -> 3;
(countOdd,2,[]) -> 2;
(add,2,[]) -> 2;
(add,0,[1]) -> 1;
(countOdd,1,[3,1,2]) -> 3;
(add,1,[0]) -> 1;
(add,0,[3,0]) -> 3;
(add,0,[2,1,0]) -> 3;
(add,0,[0,1,1]) -> 2;
(countOdd,3,[0]) -> 3;
(add,3,[1,3]) -> 7;
(add,2,[0,1,0]) -> 3;
(countOdd,0,[3]) -> 1;
(add,1,[]) -> 1;

=================================
None
(countOdd,1,[1,2]) -> 2;
(countOdd,0,[0]) -> 0;
(add,2,[2]) -> 4;
(countOdd,1,[1,3]) -> 3;
(add,3,[3,0,1]) -> 7;
(add,3,[1,2,1]) -> 7;
(countOdd,3,[]) -> 3;
(add,0,[2,0]) -> 2;
(add,1,[0,3,0]) -> 4;
(countOdd,2,[]) -> 2;
(add,2,[3,0]) -> 5;
(countOdd,3,[2]) -> 3;
(countOdd,2,[2,1,0]) -> 3;
(add,1,[1,2]) -> 4;
(add,1,[2,0,2]) -> 5;
(countOdd,1,[1]) -> 2;

=================================
None
(add,3,[1]) -> 4;
(add,3,[]) -> 3;
(add,3,[3,1]) -> 7;
(add,0,[2,1]) -> 3;
(countOdd,0,[2]) -> 0;
(add,0,[0,2]) -> 2;
(add,2,[3,0]) -> 5;
(add,3,[1,0,0]) -> 4;
(add,0,[2,3,1]) -> 6;
(add,1,[1,3,0]) -> 5;
(add,2,[3,1,1]) -> 7;
(countOdd,3,[2]) -> 3;
(countOdd,2,[2]) -> 2;
(countOdd,1,[3]) -> 2;
(add,0,[]) -> 0;
(add,1,[3,3,2]) -> 9;

=================================
None
(countOdd,0,[3,0,2]) -> 1;
(countOdd,2,[0,0]) -> 2;
(countOdd,1,[1,3,0]) -> 3;
(add,2,[]) -> 2;
(countOdd,0,[0,1]) -> 1;
(countOdd,3,[1]) -> 4;
(countOdd,3,[3,2,2]) -> 4;
(add,2,[2,3,0]) -> 7;
(countOdd,0,[2,1,3]) -> 2;
(countOdd,1,[1]) -> 2;
(countOdd,3,[]) -> 3;
(countOdd,2,[1,1]) -> 4;
(add,1,[]) -> 1;
(add,1,[2,2,2]) -> 7;
(add,0,[3,1,3]) -> 7;
(countOdd,1,[]) -> 1;

=================================
None
(countOdd,1,[1,3]) -> 3;
(add,1,[2,2]) -> 5;
(add,3,[0,3,3]) -> 9;
(countOdd,0,[2,3,0]) -> 1;
(countOdd,3,[2,3,2]) -> 4;
(add,0,[]) -> 0;
(add,3,[1]) -> 4;
(countOdd,1,[]) -> 1;
(add,1,[2]) -> 3;
(countOdd,3,[3,1]) -> 5;
(countOdd,2,[2]) -> 2;
(add,2,[1,2]) -> 5;
(countOdd,2,[]) -> 2;
(countOdd,3,[1]) -> 4;
(add,3,[1,1]) -> 5;
(add,2,[1,0]) -> 3;

=================================
None
(add,3,[2,3,2]) -> 10;
(add,3,[3]) -> 6;
(countOdd,3,[3]) -> 4;
(countOdd,1,[1]) -> 2;
(add,0,[1]) -> 1;
(countOdd,1,[3,1,3]) -> 4;
(add,3,[3,0,3]) -> 9;
(add,3,[2,2,0]) -> 7;
(add,2,[1,3]) -> 6;
(countOdd,1,[3]) -> 2;
(countOdd,0,[0]) -> 0;
(countOdd,2,[2,2]) -> 2;
(countOdd,3,[2]) -> 3;
(add,3,[1]) -> 4;
(add,1,[1]) -> 2;
(countOdd,3,[1]) -> 4;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,0,[0]) -> 0;
(add,0,[]) -> 0;
(add,3,[]) -> 3;
(add,1,[3]) -> 4;
(countOdd,0,[3]) -> 1;
(countOdd,1,[0,3]) -> 2;
(add,1,[]) -> 1;
(countOdd,2,[0,0,1]) -> 3;
(countOdd,2,[1,1]) -> 4;
(countOdd,1,[3]) -> 2;
(add,1,[1]) -> 2;
(countOdd,3,[3]) -> 4;
(add,1,[0]) -> 1;
(add,3,[0]) -> 3;
(countOdd,1,[2]) -> 1;

=================================
None
(countOdd,0,[2]) -> 0;
(add,0,[0]) -> 0;
(countOdd,0,[0,2]) -> 0;
(countOdd,2,[0]) -> 2;
(countOdd,3,[1]) -> 4;
(add,3,[3]) -> 6;
(add,2,[1,3,2]) -> 8;
(countOdd,0,[0]) -> 0;
(countOdd,3,[2,2,3]) -> 4;
(countOdd,3,[2,0,3]) -> 4;
(add,2,[]) -> 2;
(add,0,[3,2,1]) -> 6;
(countOdd,1,[]) -> 1;
(countOdd,2,[]) -> 2;
(countOdd,3,[3,2]) -> 4;
(add,1,[1,3,0]) -> 5;

=================================
None
(add,3,[2]) -> 5;
(countOdd,3,[2,0]) -> 3;
(countOdd,2,[3]) -> 3;
(add,3,[2,3,3]) -> 11;
(countOdd,2,[]) -> 2;
(countOdd,3,[]) -> 3;
(countOdd,2,[2,0,3]) -> 3;
(add,2,[3,1,0]) -> 6;
(countOdd,1,[]) -> 1;
(countOdd,1,[0]) -> 1;
(add,0,[2,1,0]) -> 3;
(countOdd,2,[2,3,0]) -> 3;
(countOdd,0,[3,2]) -> 1;
(countOdd,2,[0]) -> 2;
(countOdd,3,[0,3,3]) -> 5;
(countOdd,2,[0,3]) -> 3;

=================================
None
(add,1,[]) -> 1;
(countOdd,3,[1,3]) -> 5;
(countOdd,2,[0]) -> 2;
(add,3,[3,2,0]) -> 8;
(add,2,[0,3]) -> 5;
(countOdd,3,[]) -> 3;
(countOdd,1,[1,1,3]) -> 4;
(add,0,[1,2]) -> 3;
(add,3,[0,2,3]) -> 8;
(add,3,[2,3]) -> 8;
(countOdd,2,[3]) -> 3;
(countOdd,0,[2,1]) -> 1;
(add,2,[2,2,1]) -> 7;
(add,2,[]) -> 2;
(add,2,[0,1]) -> 3;
(add,3,[0,0]) -> 3;
(countOdd,2,[0,0,3]) -> 3;

=================================
None
(countOdd,2,[]) -> 2;
(add,0,[2,3]) -> 5;
(countOdd,0,[1,2]) -> 1;
(countOdd,2,[1]) -> 3;
(add,2,[0,0]) -> 2;
(add,0,[2,0,3]) -> 5;
(countOdd,1,[]) -> 1;
(countOdd,0,[2,0]) -> 0;
(add,1,[1]) -> 2;
(add,0,[1,3]) -> 4;
(add,3,[]) -> 3;
(add,3,[0]) -> 3;
(countOdd,2,[0,3,0]) -> 3;
(countOdd,0,[0,0,1]) -> 1;
(add,0,[]) -> 0;
(add,3,[0,2,1]) -> 6;
(countOdd,2,[0]) -> 2;

=================================
None
(add,2,[2]) -> 4;
(add,0,[2]) -> 2;
(countOdd,3,[]) -> 3;
(add,2,[0,1,3]) -> 6;
(countOdd,1,[]) -> 1;
(add,1,[]) -> 1;
(add,3,[2]) -> 5;
(countOdd,1,[2]) -> 1;
(add,3,[3,2]) -> 8;
(add,0,[]) -> 0;
(countOdd,0,[]) -> 0;
(countOdd,3,[2,1,1]) -> 5;
(add,3,[0,2,3]) -> 8;
(countOdd,1,[2,0]) -> 1;
(add,2,[3]) -> 5;
(add,2,[1,0]) -> 3;
(add,1,[3,0,2]) -> 6;

=================================
None
(countOdd,1,[0]) -> 1;
(add,1,[1]) -> 2;
(add,3,[]) -> 3;
(countOdd,0,[0]) -> 0;
(add,0,[0,0]) -> 0;
(add,2,[1]) -> 3;
(countOdd,1,[2]) -> 1;
(countOdd,3,[3]) -> 4;
(add,3,[0,2,0]) -> 5;
(countOdd,2,[]) -> 2;
(countOdd,0,[2]) -> 0;
(add,0,[2]) -> 2;
(add,1,[2,0]) -> 3;
(add,1,[2,3,3]) -> 9;
(add,2,[0,0]) -> 2;
(add,1,[]) -> 1;
(add,3,[3,1,2]) -> 9;

=================================
None
(add,0,[2,3,2]) -> 7;
(add,1,[]) -> 1;
(add,2,[1]) -> 3;
(add,0,[3]) -> 3;
(add,1,[3,0,3]) -> 7;
(add,1,[0]) -> 1;
(countOdd,2,[0,0]) -> 2;
(countOdd,0,[]) -> 0;
(countOdd,1,[1]) -> 2;
(countOdd,0,[3,3,0]) -> 2;
(countOdd,3,[1,0]) -> 4;
(add,0,[1,2,3]) -> 6;
(add,2,[2,1,2]) -> 7;
(add,0,[0,0]) -> 0;
(countOdd,2,[1,3,1]) -> 5;
(add,0,[2,3]) -> 5;
(add,2,[2,3,3]) -> 10;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,0,[1,3]) -> 2;
(add,2,[0,0]) -> 2;
(countOdd,1,[0,3,0]) -> 2;
(add,0,[2,1]) -> 3;
(add,0,[3,3]) -> 6;
(countOdd,2,[3]) -> 3;
(add,2,[]) -> 2;
(countOdd,3,[2,0,2]) -> 3;
(add,0,[1,0]) -> 1;
(add,3,[]) -> 3;
(countOdd,0,[2,1]) -> 1;
(countOdd,3,[]) -> 3;
(add,3,[2,0,3]) -> 8;
(add,1,[]) -> 1;
(countOdd,0,[0,1,3]) -> 2;
(add,3,[0,3,0]) -> 6;

=================================
None
(countOdd,3,[3,2]) -> 4;
(add,3,[2]) -> 5;
(countOdd,3,[3]) -> 4;
(countOdd,2,[1,1,0]) -> 4;
(add,3,[3,0,2]) -> 8;
(add,1,[0,3,0]) -> 4;
(add,2,[1,0,3]) -> 6;
(add,2,[]) -> 2;
(countOdd,0,[1,2]) -> 1;
(add,1,[3,1,2]) -> 7;
(countOdd,0,[]) -> 0;
(add,3,[1]) -> 4;
(add,1,[0]) -> 1;
(add,3,[]) -> 3;
(add,1,[2,1]) -> 4;
(countOdd,0,[2,2,0]) -> 0;
(add,1,[]) -> 1;

=================================
None
(add,1,[]) -> 1;
(add,1,[3,0]) -> 4;
(add,0,[0]) -> 0;
(add,2,[3]) -> 5;
(add,0,[0,2,1]) -> 3;
(countOdd,2,[1,3,2]) -> 4;
(add,0,[0,3]) -> 3;
(countOdd,2,[3,0,3]) -> 4;
(add,1,[2,1,0]) -> 4;
(add,2,[2,2,1]) -> 7;
(add,1,[2,0]) -> 3;
(countOdd,1,[3]) -> 2;
(countOdd,2,[0,2,0]) -> 2;
(add,3,[3,1]) -> 7;
(countOdd,3,[0]) -> 3;
(countOdd,3,[0,1,0]) -> 4;
(countOdd,1,[1,2]) -> 2;

=================================
None
(countOdd,2,[]) -> 2;
(countOdd,1,[3]) -> 2;
(countOdd,1,[3,3,3]) -> 4;
(countOdd,3,[1,2]) -> 4;
(countOdd,2,[1,0]) -> 3;
(add,1,[1,2]) -> 4;
(countOdd,3,[]) -> 3;
(add,1,[3,1]) -> 5;
(add,2,[2,3]) -> 7;
(countOdd,2,[1]) -> 3;
(countOdd,1,[]) -> 1;
(add,0,[3]) -> 3;
(add,0,[1,1,3]) -> 5;
(countOdd,1,[1]) -> 2;
(add,1,[3,0]) -> 4;
(add,1,[]) -> 1;
(add,1,[0,3,0]) -> 4;

=================================
None
(add,3,[]) -> 3;
(countOdd,1,[1,2]) -> 2;
(add,1,[3]) -> 4;
(countOdd,0,[]) -> 0;
(add,0,[]) -> 0;
(countOdd,3,[0,2,3]) -> 4;
(countOdd,2,[]) -> 2;
(countOdd,3,[]) -> 3;
(add,2,[]) -> 2;
(add,2,[1]) -> 3;
(add,3,[1,0,3]) -> 7;
(add,1,[2,2,1]) -> 6;
(add,2,[3,2]) -> 7;
(countOdd,2,[3,0]) -> 3;
(add,1,[1,2,2]) -> 6;
(add,3,[1,3]) -> 7;
(add,1,[0]) -> 1;

=================================
None
(countOdd,1,[]) -> 1;
(countOdd,0,[3,3,3]) -> 3;
(add,1,[1]) -> 2;
(countOdd,1,[2,0,2]) -> 1;
(add,3,[3,1]) -> 7;
(add,2,[3]) -> 5;
(add,1,[2]) -> 3;
(add,2,[3,0,2]) -> 7;
(countOdd,2,[]) -> 2;
(add,3,[2,2,3]) -> 10;
(countOdd,1,[1]) -> 2;
(countOdd,2,[3,3,2]) -> 4;
(countOdd,1,[0,0]) -> 1;
(countOdd,3,[0,2,3]) -> 4;
(countOdd,2,[0,3,0]) -> 3;
(countOdd,0,[]) -> 0;
(add,2,[2,3,2]) -> 9;
(add,1,[2,0]) -> 3;

=================================
None
(add,1,[0,2,2]) -> 5;
(add,2,[1]) -> 3;
(add,2,[3,3]) -> 8;
(add,3,[]) -> 3;
(countOdd,3,[0,2,3]) -> 4;
(countOdd,1,[0,3]) -> 2;
(add,2,[2,1]) -> 5;
(add,3,[0]) -> 3;
(add,1,[]) -> 1;
(countOdd,2,[2,3,1]) -> 4;
(countOdd,0,[3,0,1]) -> 2;
(add,1,[2,0,2]) -> 5;
(countOdd,0,[]) -> 0;
(add,0,[]) -> 0;
(add,0,[3,0]) -> 3;
(countOdd,2,[]) -> 2;
(countOdd,2,[0,0]) -> 2;
(add,2,[3]) -> 5;

=================================
None
(countOdd,1,[0]) -> 1;
(add,2,[1,1,3]) -> 7;
(add,2,[2,0]) -> 4;
(countOdd,0,[]) -> 0;
(add,1,[]) -> 1;
(add,2,[1,1,2]) -> 6;
(countOdd,3,[1,3]) -> 5;
(add,0,[]) -> 0;
(countOdd,2,[1,1]) -> 4;
(add,0,[1,0,2]) -> 3;
(countOdd,3,[1,0]) -> 4;
(add,3,[3,0]) -> 6;
(countOdd,2,[1]) -> 3;
(countOdd,0,[3,3,2]) -> 2;
(countOdd,0,[3,3]) -> 2;
(add,1,[3,1,2]) -> 7;
(add,3,[3]) -> 6;
(add,1,[3]) -> 4;

=================================
None
(add,3,[1]) -> 4;
(countOdd,2,[]) -> 2;
(countOdd,1,[0,2]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,3,[3]) -> 4;
(add,2,[1,0,2]) -> 5;
(countOdd,0,[3,3]) -> 2;
(countOdd,0,[0,0,1]) -> 1;
(countOdd,3,[]) -> 3;
(add,3,[]) -> 3;
(add,0,[1,2]) -> 3;
(countOdd,1,[0,2,1]) -> 2;
(add,3,[3,2,0]) -> 8;
(countOdd,0,[0]) -> 0;
(countOdd,1,[0,1,2]) -> 2;
(add,3,[0,2,0]) -> 5;
(add,3,[2,2]) -> 7;
(countOdd,0,[1,0,2]) -> 1;

=================================
None
(add,0,[3,3]) -> 6;
(add,1,[0]) -> 1;
(countOdd,0,[0,3]) -> 1;
(add,2,[]) -> 2;
(add,1,[3,3]) -> 7;
(countOdd,1,[1,3,2]) -> 3;
(countOdd,3,[1,0]) -> 4;
(add,2,[0,3,0]) -> 5;
(add,1,[0,2,1]) -> 4;
(countOdd,3,[]) -> 3;
(countOdd,3,[2]) -> 3;
(countOdd,1,[]) -> 1;
(countOdd,0,[]) -> 0;
(add,3,[]) -> 3;
(countOdd,0,[0]) -> 0;
(add,1,[2,0]) -> 3;
(add,0,[0,3,0]) -> 3;
(countOdd,2,[]) -> 2;

=================================
None
(add,3,[3,1]) -> 7;
(countOdd,1,[0,1,2]) -> 2;
(countOdd,2,[2,2]) -> 2;
(countOdd,1,[3,0,0]) -> 2;
(countOdd,3,[1,1]) -> 5;
(add,0,[]) -> 0;
(countOdd,1,[0]) -> 1;
(countOdd,3,[1]) -> 4;
(countOdd,0,[1,1]) -> 2;
(add,1,[3]) -> 4;
(add,0,[0,0,2]) -> 2;
(add,3,[1,2]) -> 6;
(countOdd,1,[]) -> 1;
(countOdd,1,[0,1,0]) -> 2;
(countOdd,3,[]) -> 3;
(add,3,[3,0,2]) -> 8;
(countOdd,0,[2,3,3]) -> 2;
(countOdd,0,[]) -> 0;

=================================
None
(countOdd,2,[0,3,2]) -> 3;
(add,3,[3]) -> 6;
(add,0,[3]) -> 3;
(countOdd,1,[1]) -> 2;
(add,3,[3,1,0]) -> 7;
(countOdd,2,[3]) -> 3;
(countOdd,1,[3,2]) -> 2;
(add,2,[3,2,1]) -> 8;
(add,1,[]) -> 1;
(add,0,[2]) -> 2;
(countOdd,0,[3]) -> 1;
(countOdd,3,[]) -> 3;
(countOdd,2,[1]) -> 3;
(countOdd,2,[3,1,2]) -> 4;
(countOdd,1,[]) -> 1;
(add,3,[2,0,0]) -> 5;
(countOdd,2,[]) -> 2;
(add,0,[2,1,2]) -> 5;

=================================
None
(add,0,[2,0]) -> 2;
(countOdd,1,[2,2]) -> 1;
(add,1,[1]) -> 2;
(add,0,[1,2,0]) -> 3;
(countOdd,3,[1,3,3]) -> 6;
(add,0,[2]) -> 2;
(add,2,[0,0]) -> 2;
(add,2,[]) -> 2;
(countOdd,1,[0]) -> 1;
(add,1,[]) -> 1;
(add,3,[1,3]) -> 7;
(countOdd,1,[]) -> 1;
(countOdd,1,[3]) -> 2;
(countOdd,0,[3,1]) -> 2;
(add,3,[0,0,0]) -> 3;
(countOdd,2,[]) -> 2;
(add,1,[3,3]) -> 7;
(add,2,[0]) -> 2;

=================================
None
(add,1,[3,3,2]) -> 9;
(add,0,[2]) -> 2;
(add,3,[3]) -> 6;
(add,3,[1,2,1]) -> 7;
(add,2,[1,3]) -> 6;
(add,2,[2,0]) -> 4;
(countOdd,2,[1]) -> 3;
(add,3,[1]) -> 4;
(add,0,[2,1,1]) -> 4;
(countOdd,0,[1,0,2]) -> 1;
(countOdd,3,[0,0]) -> 3;
(add,2,[0,2,3]) -> 7;
(countOdd,2,[1,3]) -> 4;
(countOdd,0,[1]) -> 1;
(add,2,[2]) -> 4;
(add,2,[1,2,1]) -> 6;
(countOdd,2,[3,0,0]) -> 3;
(countOdd,0,[3,3,1]) -> 3;

=================================
None
(add,3,[3,0]) -> 6;
(add,0,[2,3,0]) -> 5;
(countOdd,1,[0]) -> 1;
(countOdd,2,[3,3,1]) -> 5;
(add,2,[0]) -> 2;
(countOdd,0,[]) -> 0;
(add,1,[2,3,0]) -> 6;
(countOdd,2,[3]) -> 3;
(countOdd,3,[3,2,3]) -> 5;
(add,1,[]) -> 1;
(add,0,[2]) -> 2;
(countOdd,0,[1,3]) -> 2;
(countOdd,1,[2]) -> 1;
(add,0,[3,2]) -> 5;
(add,3,[]) -> 3;
(add,3,[1]) -> 4;
(countOdd,2,[]) -> 2;
(add,0,[]) -> 0;

=================================
None
(add,3,[0]) -> 3;
(countOdd,0,[]) -> 0;
(add,3,[]) -> 3;
(add,3,[3]) -> 6;
(countOdd,2,[]) -> 2;
(countOdd,2,[2]) -> 2;
(add,1,[]) -> 1;
(countOdd,1,[3,2]) -> 2;
(add,1,[1]) -> 2;
(countOdd,2,[1]) -> 3;
(countOdd,3,[]) -> 3;
(countOdd,3,[3,0,0]) -> 4;
(countOdd,0,[1,3,3]) -> 3;
(countOdd,0,[0]) -> 0;
(add,0,[]) -> 0;
(countOdd,2,[3,0,1]) -> 4;
(add,2,[2]) -> 4;
(add,3,[2]) -> 5;
(countOdd,1,[1,2,1]) -> 3;

=================================
None
(countOdd,0,[3,3,1]) -> 3;
(add,0,[2]) -> 2;
(countOdd,0,[]) -> 0;
(add,3,[2,0]) -> 5;
(countOdd,0,[1]) -> 1;
(countOdd,2,[0,2]) -> 2;
(add,2,[]) -> 2;
(add,3,[]) -> 3;
(countOdd,1,[3,1]) -> 3;
(countOdd,1,[0,1]) -> 2;
(add,1,[2]) -> 3;
(countOdd,2,[0,0,2]) -> 2;
(countOdd,1,[3]) -> 2;
(countOdd,2,[2]) -> 2;
(countOdd,3,[]) -> 3;
(countOdd,3,[3,3]) -> 5;
(add,0,[3,0,0]) -> 3;
(add,0,[]) -> 0;
(countOdd,0,[2]) -> 0;

=================================
None
(add,1,[1,0]) -> 2;
(add,0,[]) -> 0;
(countOdd,2,[2]) -> 2;
(add,3,[]) -> 3;
(add,2,[0]) -> 2;
(add,2,[3]) -> 5;
(countOdd,2,[3,2,3]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,1,[]) -> 1;
(add,3,[1,1]) -> 5;
(countOdd,3,[]) -> 3;
(add,0,[3,1]) -> 4;
(add,3,[2]) -> 5;
(add,1,[]) -> 1;
(countOdd,3,[0,0,3]) -> 4;
(countOdd,0,[2,1,1]) -> 2;
(countOdd,2,[1,3]) -> 4;
(add,3,[1]) -> 4;
(countOdd,3,[1,2]) -> 4;

=================================
None
(countOdd,2,[3,0]) -> 3;
(countOdd,3,[2]) -> 3;
(add,0,[]) -> 0;
(countOdd,1,[]) -> 1;
(add,3,[1,2]) -> 6;
(add,2,[3,2,1]) -> 8;
(countOdd,0,[0]) -> 0;
(add,1,[0,1]) -> 2;
(countOdd,2,[]) -> 2;
(add,3,[2,3]) -> 8;
(countOdd,2,[0,2]) -> 2;
(countOdd,2,[1,0,3]) -> 4;
(add,0,[3,3,2]) -> 8;
(add,0,[3]) -> 3;
(countOdd,3,[3,1,2]) -> 5;
(add,2,[1,3]) -> 6;
(countOdd,1,[2,2,3]) -> 2;
(countOdd,0,[3,2,1]) -> 2;
(add,2,[3]) -> 5;

=================================
None
(countOdd,3,[]) -> 3;
(add,0,[2,1]) -> 3;
(add,0,[0,0]) -> 0;
(add,1,[1]) -> 2;
(add,2,[0]) -> 2;
(add,1,[0,2]) -> 3;
(add,1,[3]) -> 4;
(countOdd,3,[1,3]) -> 5;
(countOdd,1,[1,3]) -> 3;
(countOdd,2,[3]) -> 3;
(countOdd,0,[2,3,0]) -> 1;
(countOdd,2,[]) -> 2;
(countOdd,1,[2,3,1]) -> 3;
(add,0,[1]) -> 1;
(countOdd,3,[2,1,3]) -> 5;
(add,3,[0,3,3]) -> 9;
(add,0,[3,3]) -> 6;
(add,1,[]) -> 1;
(countOdd,2,[0]) -> 2;

=================================
None
(countOdd,3,[]) -> 3;
(add,0,[2,2]) -> 4;
(countOdd,0,[0,1]) -> 1;
(countOdd,3,[0,0]) -> 3;
(add,3,[1,1]) -> 5;
(countOdd,2,[0]) -> 2;
(countOdd,0,[3,0,3]) -> 2;
(countOdd,3,[2,2]) -> 3;
(add,3,[1]) -> 4;
(countOdd,1,[0,2]) -> 1;
(add,0,[1,3]) -> 4;
(add,3,[3]) -> 6;
(countOdd,3,[3,0]) -> 4;
(countOdd,1,[0]) -> 1;
(add,2,[0,3,0]) -> 5;
(add,1,[2,1,0]) -> 4;
(add,0,[0,0]) -> 0;
(countOdd,1,[0,1]) -> 2;
(add,3,[3,0,3]) -> 9;

=================================
None
(countOdd,1,[3,1]) -> 3;
(add,1,[2]) -> 3;
(add,0,[1,3,0]) -> 4;
(add,2,[0,1]) -> 3;
(add,2,[]) -> 2;
(countOdd,2,[3]) -> 3;
(countOdd,3,[2,3,1]) -> 5;
(countOdd,3,[1,2,3]) -> 5;
(add,1,[0,0,1]) -> 2;
(add,0,[0,2,1]) -> 3;
(countOdd,3,[1,0,1]) -> 5;
(countOdd,1,[1,1]) -> 3;
(add,1,[1,0,2]) -> 4;
(countOdd,2,[1]) -> 3;
(add,2,[2,3]) -> 7;
(add,1,[3,2]) -> 6;
(countOdd,1,[0]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,0,[3]) -> 1;

=================================
None
(add,0,[]) -> 0;
(add,2,[3,3,3]) -> 11;
(add,2,[0]) -> 2;
(add,0,[0]) -> 0;
(countOdd,0,[2,2]) -> 0;
(add,3,[1,2,0]) -> 6;
(countOdd,3,[0,1]) -> 4;
(countOdd,3,[1]) -> 4;
(add,1,[0,0,3]) -> 4;
(countOdd,2,[1,1,1]) -> 5;
(add,3,[1,3]) -> 7;
(countOdd,1,[2]) -> 1;
(add,2,[]) -> 2;
(countOdd,1,[1,1,1]) -> 4;
(countOdd,0,[3]) -> 1;
(countOdd,2,[2,2]) -> 2;
(add,3,[3,2,1]) -> 9;
(countOdd,0,[2]) -> 0;
(countOdd,2,[]) -> 2;

=================================
None
(countOdd,1,[0,0,0]) -> 1;
(add,1,[0,1]) -> 2;
(add,3,[2]) -> 5;
(add,3,[0,1]) -> 4;
(countOdd,2,[2,0,2]) -> 2;
(countOdd,1,[0,0,3]) -> 2;
(add,3,[3,0,0]) -> 6;
(add,3,[1,2]) -> 6;
(add,2,[1,0,2]) -> 5;
(add,3,[]) -> 3;
(add,2,[2]) -> 4;
(countOdd,1,[2]) -> 1;
(add,1,[0]) -> 1;
(add,3,[3,2,3]) -> 11;
(add,2,[]) -> 2;
(countOdd,1,[2,1]) -> 2;
(countOdd,3,[]) -> 3;
(add,2,[1,1,1]) -> 5;
(countOdd,1,[]) -> 1;

=================================
None
(add,0,[1,2,2]) -> 5;
(countOdd,3,[]) -> 3;
(add,0,[1,3]) -> 4;
(countOdd,3,[2,0]) -> 3;
(add,2,[]) -> 2;
(add,2,[2,2,0]) -> 6;
(countOdd,0,[]) -> 0;
(countOdd,2,[]) -> 2;
(add,3,[0,1,2]) -> 6;
(add,1,[2,0]) -> 3;
(add,3,[2,0,3]) -> 8;
(countOdd,3,[2]) -> 3;
(countOdd,3,[2,3,1]) -> 5;
(countOdd,2,[2]) -> 2;
(countOdd,3,[3]) -> 4;
(add,3,[]) -> 3;
(countOdd,3,[1]) -> 4;
(countOdd,3,[3,3]) -> 5;
(add,0,[1,2,1]) -> 4;

=================================
None
(countOdd,1,[]) -> 1;
(countOdd,3,[2,1]) -> 4;
(add,1,[3,0]) -> 4;
(add,0,[1,0,0]) -> 1;
(add,3,[1]) -> 4;
(countOdd,0,[]) -> 0;
(countOdd,1,[1,0]) -> 2;
(add,0,[1,2]) -> 3;
(add,2,[3,1]) -> 6;
(add,2,[3,3]) -> 8;
(countOdd,3,[0]) -> 3;
(add,0,[1,1,0]) -> 2;
(countOdd,2,[0,3,0]) -> 3;
(add,1,[0,1,2]) -> 4;
(add,1,[]) -> 1;
(add,2,[2,1,1]) -> 6;
(countOdd,1,[0]) -> 1;
(countOdd,3,[1,0]) -> 4;
(countOdd,0,[1,1]) -> 2;
(add,3,[0]) -> 3;

=================================
None
(countOdd,0,[2,2,1]) -> 1;
(countOdd,3,[0,1,1]) -> 5;
(add,2,[2]) -> 4;
(add,1,[1,2]) -> 4;
(add,2,[]) -> 2;
(add,3,[0,1]) -> 4;
(countOdd,1,[0,3]) -> 2;
(add,1,[2]) -> 3;
(add,0,[3,0]) -> 3;
(countOdd,1,[]) -> 1;
(countOdd,1,[3,1]) -> 3;
(add,2,[0,1,2]) -> 5;
(countOdd,2,[0,2]) -> 2;
(countOdd,2,[0]) -> 2;
(add,0,[1]) -> 1;
(countOdd,0,[2]) -> 0;
(countOdd,0,[0]) -> 0;
(countOdd,0,[3,0]) -> 1;
(add,2,[3,3]) -> 8;
(countOdd,3,[0]) -> 3;

=================================
None
(add,0,[2,1,2]) -> 5;
(add,1,[]) -> 1;
(countOdd,0,[0]) -> 0;
(countOdd,0,[]) -> 0;
(countOdd,2,[1]) -> 3;
(countOdd,0,[1]) -> 1;
(add,3,[0,3,0]) -> 6;
(countOdd,1,[0]) -> 1;
(countOdd,3,[2,3,2]) -> 4;
(countOdd,3,[]) -> 3;
(countOdd,3,[1]) -> 4;
(add,2,[1]) -> 3;
(countOdd,3,[0]) -> 3;
(add,2,[3]) -> 5;
(countOdd,3,[2]) -> 3;
(add,3,[0]) -> 3;
(add,3,[1,0,1]) -> 5;
(countOdd,3,[3,3,3]) -> 6;
(add,1,[2,0]) -> 3;
(add,3,[3,1,1]) -> 8;

=================================
None
(add,2,[3,2,0]) -> 7;
(countOdd,1,[3]) -> 2;
(add,1,[1,0]) -> 2;
(countOdd,1,[1,2]) -> 2;
(countOdd,0,[2,2,3]) -> 1;
(add,1,[3]) -> 4;
(countOdd,1,[2]) -> 1;
(add,0,[2,0]) -> 2;
(countOdd,1,[1]) -> 2;
(add,2,[0,0]) -> 2;
(countOdd,2,[]) -> 2;
(add,2,[3,1,1]) -> 7;
(countOdd,2,[1,3]) -> 4;
(add,0,[1]) -> 1;
(countOdd,1,[1,1,2]) -> 3;
(countOdd,1,[2,1,1]) -> 3;
(add,3,[1]) -> 4;
(add,2,[1]) -> 3;
(add,2,[0]) -> 2;
(add,1,[2]) -> 3;

=================================
None
(add,0,[3,0,0]) -> 3;
(countOdd,1,[]) -> 1;
(countOdd,1,[1,1]) -> 3;
(countOdd,0,[3]) -> 1;
(countOdd,1,[3]) -> 2;
(countOdd,3,[2,1]) -> 4;
(countOdd,0,[2,2,3]) -> 1;
(add,2,[]) -> 2;
(add,2,[1]) -> 3;
(add,3,[]) -> 3;
(add,3,[1,1,0]) -> 5;
(add,2,[0]) -> 2;
(countOdd,2,[1]) -> 3;
(add,0,[1,3,0]) -> 4;
(add,3,[1,1]) -> 5;
(countOdd,3,[2,0,2]) -> 3;
(add,0,[]) -> 0;
(countOdd,0,[2,3,2]) -> 1;
(countOdd,3,[]) -> 3;
(add,0,[0]) -> 0;

=================================
None
(countOdd,0,[]) -> 0;
(countOdd,3,[0]) -> 3;
(countOdd,1,[]) -> 1;
(add,3,[1,3,1]) -> 8;
(add,0,[0]) -> 0;
(add,3,[1,3,3]) -> 10;
(add,2,[2,1,3]) -> 8;
(add,1,[]) -> 1;
(add,1,[0,2]) -> 3;
(add,3,[3,2,0]) -> 8;
(countOdd,0,[2,3]) -> 1;
(add,3,[]) -> 3;
(add,2,[2]) -> 4;
(add,2,[]) -> 2;
(countOdd,2,[2]) -> 2;
(countOdd,3,[1,0]) -> 4;
(add,0,[]) -> 0;
(add,1,[0]) -> 1;
(add,1,[1,1,1]) -> 4;
(countOdd,0,[2,2,1]) -> 1;

=================================
None
(add,0,[]) -> 0;
(add,3,[3,3,3]) -> 12;
(add,2,[]) -> 2;
(add,3,[0]) -> 3;
(countOdd,3,[]) -> 3;
(add,0,[0,1]) -> 1;
(countOdd,1,[1]) -> 2;
(countOdd,1,[]) -> 1;
(add,3,[]) -> 3;
(add,1,[]) -> 1;
(countOdd,0,[1]) -> 1;
(countOdd,2,[3,3]) -> 4;
(add,3,[2]) -> 5;
(add,0,[2,2]) -> 4;
(countOdd,1,[1,2]) -> 2;
(add,0,[1,0]) -> 1;
(countOdd,1,[2,3,1]) -> 3;
(countOdd,0,[]) -> 0;
(countOdd,1,[0,0]) -> 1;
(countOdd,3,[3,0]) -> 4;

=================================
None
(add,1,[2]) -> 3;
(countOdd,0,[1,2]) -> 1;
(countOdd,3,[0,2,0]) -> 3;
(add,3,[3,3]) -> 9;
(add,0,[1,2,0]) -> 3;
(add,0,[3,1]) -> 4;
(add,1,[3]) -> 4;
(add,0,[1,2]) -> 3;
(countOdd,3,[0]) -> 3;
(countOdd,2,[1]) -> 3;
(countOdd,1,[0]) -> 1;
(countOdd,0,[]) -> 0;
(add,0,[0]) -> 0;
(add,3,[]) -> 3;
(countOdd,0,[2,2,0]) -> 0;
(add,1,[3,2,1]) -> 7;
(countOdd,3,[2,0]) -> 3;
(countOdd,0,[0,1]) -> 1;
(countOdd,1,[3,2]) -> 2;
(countOdd,1,[2,2]) -> 1;

=================================
None
(add,3,[2,3,0]) -> 8;
(add,0,[0]) -> 0;
(countOdd,1,[]) -> 1;
(add,2,[2]) -> 4;
(countOdd,3,[3]) -> 4;
(add,1,[1]) -> 2;
(add,1,[]) -> 1;
(add,0,[3]) -> 3;
(countOdd,0,[2,2,3]) -> 1;
(countOdd,0,[]) -> 0;
(countOdd,2,[]) -> 2;
(countOdd,1,[0]) -> 1;
(countOdd,1,[2,0,3]) -> 2;
(add,0,[3,3]) -> 6;
(add,1,[1,0,2]) -> 4;
(add,0,[1]) -> 1;
(add,0,[1,2,3]) -> 6;
(countOdd,2,[0,2]) -> 2;
(add,2,[1,1,2]) -> 6;
(add,3,[0,2]) -> 5;

=================================
None
(countOdd,2,[]) -> 2;
(add,2,[0,2]) -> 4;
(add,3,[]) -> 3;
(add,3,[1]) -> 4;
(countOdd,2,[0,1]) -> 3;
(add,3,[0,0,2]) -> 5;
(countOdd,2,[3,3]) -> 4;
(add,3,[2,1]) -> 6;
(countOdd,3,[3,2]) -> 4;
(countOdd,0,[2,2,3]) -> 1;
(countOdd,2,[2,3,3]) -> 4;
(add,1,[0,2,1]) -> 4;
(add,1,[2,3]) -> 6;
(countOdd,1,[1,2,1]) -> 3;
(countOdd,0,[]) -> 0;
(countOdd,2,[1,0,3]) -> 4;
(countOdd,0,[2,3,3]) -> 2;
(add,2,[]) -> 2;
(countOdd,0,[1,1]) -> 2;
(countOdd,0,[3,0]) -> 1;

=================================
None
