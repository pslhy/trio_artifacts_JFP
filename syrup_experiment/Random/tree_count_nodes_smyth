Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00903900000003 false false

Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00793599999997 false false

Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 2 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00882700000011 false false

Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00896699999998 false false

Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 2 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00888400000008 false false

Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00905200000011 false false

Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00822900000003 false false

Node (Leaf (),3,Leaf ()) -> 1;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 1 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00843800000007 false false

Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00898099999995 false false

Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00885599999992 false false

Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      #3.2 y1

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (S (S (tree_count_nodes (#3.1 y1))))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.016901 false false

Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;

=================================
NOSOL

Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00986899999998 false false

Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;

=================================
NOSOL

Leaf () -> 0;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (#3.2 y1)

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (S (S (tree_count_nodes (#3.1 y1))))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0133599999999 false false

Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.00962699999991 false false

Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0337460000001 false false

Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;

=================================
NOSOL

Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
NOSOL

Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0106920000001 false false

Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;

=================================
NOSOL

Leaf () -> 0;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (tree_count_nodes (#3.3 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0349229999999 false false

Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
NOSOL

Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (S (#3.2 y1))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0273970000001 false false

Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      sum (tree_count_nodes (#3.1 y1)) (#3.2 y1)

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.046161 false false

Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      sum (tree_count_nodes (#3.3 y1)) (#3.2 y1)

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      sum (tree_count_nodes (#3.3 y1)) (#3.2 y1)

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0337039999999 false false

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
NOSOL

Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Leaf () -> 0;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0364509999999 false false

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),0,Leaf ()) -> 1;

=================================
NOSOL

Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.666218 true true

Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;

=================================
NOSOL

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0367180000001 false false

Leaf () -> 0;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.817781 true true

Leaf () -> 0;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.80004 true true

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
NOSOL

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.081598 true true

Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;

=================================
NOSOL

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Leaf () -> 0;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.15083 true true

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;

=================================
NOSOL

Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;

=================================
NOSOL

Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;

=================================
NOSOL

Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0123980000001 false false

Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;

=================================
NOSOL

Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.723331 true true

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_count_nodes = \tree -> 3 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0149180000001 false false

Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0536689999999 false false

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.245465 true true

Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;

=================================
NOSOL

Leaf () -> 0;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.839894 true true

Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      3

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.057004 false false

Leaf () -> 0;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.896316 true true

Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.900745 true true

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
NOSOL

Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.914152 true true

Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.283525 true true

Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;
Leaf () -> 0;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.182791 true true

Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;

=================================
NOSOL

Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.547384 true true

Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.48561 true true

Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;

=================================
NOSOL

Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.252902 true true

Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> 2;

=================================
NOSOL

Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.951465 true true

Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.266629 true true

Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.039423 true true

Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;

=================================
NOSOL

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.634005 true true

Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.482322 true true

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.686976 true true

Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.139669 true true

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.018884 true true

Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;

=================================
NOSOL

Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;

=================================
NOSOL

Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.031626 true true

Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Leaf () -> 0;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.838114 true true

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.632172 true true

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.757461 true true

Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.282255 true true

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.39345 true true

Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;

=================================
NOSOL

Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.250003 true true

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.869159 true true

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.66581 true true

Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
7.171658 true true

Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
6.58544 true true

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.767773 true true

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.52616 true true

Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;

=================================
NOSOL

Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.556706 true true

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Leaf () -> 0;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.468292 true true

Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.314525 true true

Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Leaf () -> 0;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.539948 true true

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.289326 true true

Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Leaf () -> 0;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.356788 true true

Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.556136 true true

Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;

=================================
NOSOL

Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.771356 true true

Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.869215 true true

Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.408568 true true

Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.454517 true true

Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Leaf () -> 0;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.041498 true true

Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;

=================================
NOSOL

Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
6.086442 true true

Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
8.306542 true true

Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.127535 true true

Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.498219 true true

Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> 3;

=================================
NOSOL

Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.298944 true true

Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Leaf () -> 0;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.487774 true true

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Leaf () -> 0;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.274376 true true

Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.106433 true true

Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.012858 true true

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> 3;
Leaf () -> 0;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
7.956836 true true

Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Leaf () -> 0;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.162254 true true

Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> 3;
Leaf () -> 0;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.665996 true true

Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
8.397926 true true

Leaf () -> 0;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.041298 true true

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.406526 true true

Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> 3;
Leaf () -> 0;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
8.605037 true true

Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),3,Leaf ()) -> 1;
Leaf () -> 0;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
6.143398 true true

Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.131375 true true

Leaf () -> 0;
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> 3;
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> 3;
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> 2;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
8.609736 true true

Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;

=================================
NOSOL

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> 3;
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> 3;
Leaf () -> 0;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> 2;
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> 3;
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> 2;
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
6.116319 true true

Leaf () -> 0;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> 3;
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),0,Leaf ()) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),3,Leaf ()) -> 1;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.828621 true true

Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> 3;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> 3;
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> 3;
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Leaf () -> 0;
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> 2;
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
4.267236 true true

Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> 2;
Leaf () -> 0;
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> 2;
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),1,Leaf ()) -> 1;
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> 2;
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> 2;
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> 3;
Node (Leaf (),0,Leaf ()) -> 1;
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> 3;
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> 2;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.912906 true true

Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> 3;
Node (Leaf (),2,Leaf ()) -> 1;
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> 2;
Leaf () -> 0;
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> 3;
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> 3;
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> 2;
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> 3;
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),2,Leaf ()) -> 3;
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> 3;
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> 3;
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> 2;
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> 3;

=================================
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_count_nodes -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_count_nodes = \tree -> case tree of
    Node y1 -> 
      S (sum (tree_count_nodes (#3.1 y1)) (tree_count_nodes (#3.3 y1)))

    Leaf y1 -> 
      0 in tree_count_nodes) : NatTree -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
5.532163 true true

