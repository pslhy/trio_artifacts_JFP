 ([], 0) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00365899999997 false false

 ([], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00366499999996 false false

 ([0], 0) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00416599999994 false false

 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00358800000004 false false

 ([1], 0) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00385499999993 false false

 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00358200000005 false false

 ([1, 0], 0) -> [1, 0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00404800000001 false false

 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [0] in list_drop) : NatList -> Nat -> NatList)
0.00419699999998 false false

 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00421800000004 false false

 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [n] in list_drop) : NatList -> Nat -> NatList)
0.00425399999995 false false

 ([0], 0) -> [0];
 ([1], 0) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00411800000006 false false

 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.00747799999999 false false

 ([], 0) -> [];
 ([0], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [] in list_drop) : NatList -> Nat -> NatList)
0.00360300000011 false false

 ([], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.00673600000005 false false

 ([0], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00356299999999 false false

 ([0], 0) -> [0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [n] in list_drop) : NatList -> Nat -> NatList)
0.0063439999999 false false

 ([0], 0) -> [0];
 ([0], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00888099999997 false false

 ([0], 0) -> [0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> [0] in list_drop) : NatList -> Nat -> NatList)
0.00415500000008 false false

 ([0], 0) -> [0];
 ([1, 0], 0) -> [1, 0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.00422499999991 false false

 ([], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, #2.2 y1)

        S y2 -> 
          [0] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          [0] in list_drop) : NatList -> Nat -> NatList)
0.0154669999999 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00691800000004 false false

 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00581299999999 false false

 ([], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (0, #2.2 y1)

        S y2 -> 
          [1] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (0, list_drop (#2.2 y1) (S n))

        S y2 -> 
          [1] in list_drop) : NatList -> Nat -> NatList)
0.0172339999999 false false

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1, 0], 1) -> [0];
=================================
NOSOL

 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00564499999996 false false

 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00594700000011 false false

 ([], 0) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_drop = \xs -> \n -> xs in list_drop) : NatList -> Nat -> NatList)
0.0038320000001 false false

 ([], 1) -> [];
 ([0], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00704500000006 false false

 ([0], 0) -> [0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00717899999995 false false

 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00687100000005 false false

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [0] in list_drop) : NatList -> Nat -> NatList)
0.0061290000001 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          []

        S y2 -> 
          [0] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          []

        S y2 -> 
          Cons (0, list_drop (#2.2 y1) n) in list_drop) : NatList -> Nat -> NatList)
0.0256710000001 false false

 ([], 0) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [n] in list_drop) : NatList -> Nat -> NatList)
0.00772800000004 false false

 ([0], 1) -> [];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 0) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0113289999999 false false

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.011489 false false

 ([0], 0) -> [0];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, #2.2 y1)

        S y2 -> 
          [0] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          [0] in list_drop) : NatList -> Nat -> NatList)
0.099604 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [0]

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (0, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.036212 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.013997 false false

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.0123799999999 false false

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          [1] in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          [n] in list_drop) : NatList -> Nat -> NatList)
0.0441080000001 false false

 ([], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.038648 true true

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0647710000001 true true

 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0413599999999 false true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0346050000001 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0855019999999 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0837899999999 false true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0787210000001 true true

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
NOSOL

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          []

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          list_drop (#2.2 y1) n

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0464300000001 false false

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00860699999998 false false

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0403470000001 true true

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0366979999999 true true

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.107078 true true

 ([], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.034715 true true

 ([], 0) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0325230000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0642029999999 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00717800000007 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0574469999999 true true

 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0300319999999 false true

 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0253 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0323840000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.054523 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0828939999999 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0308199999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          [#2.1 y1]

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0494289999999 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0856779999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          Cons (#2.1 y1, list_drop (#2.2 y1) n)

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
0.0565919999999 false false

 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
NOSOL

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.029366 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0553749999999 false true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0970030000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0854019999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.102775 true true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.037141 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case n of
    Z y1 -> 
      xs

    S y1 -> 
      [] in list_drop) : NatList -> Nat -> NatList)
0.00747500000011 false false

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0917910000001 true true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.031099 false true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0322960000001 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.100556 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0688009999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          #2.2 y1 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          []

        S y2 -> 
          []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.06203 false true

 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.037276 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0979649999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.103795 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0711819999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.0989139999999 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.106704 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.103258 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.094726 true true

 ([], 0) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.037844 true true

 ([], 0) -> [];
 ([], 1) -> [];
 ([0], 0) -> [0];
 ([0], 1) -> [];
 ([1], 0) -> [1];
 ([1], 1) -> [];
 ([1, 0], 0) -> [1, 0];
 ([1, 0], 1) -> [0];
 ([0, 1], 0) -> [0, 1];
 ([0, 1], 1) -> [1];
 ([0, 1], 2) -> [];
=================================
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
(\list_drop -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_drop = \xs -> \n -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case n of
        Z y2 -> 
          xs

        S y2 -> 
          list_drop (#2.2 y1) y2 in list_drop) : NatList -> Nat -> NatList)
0.104376 true true

