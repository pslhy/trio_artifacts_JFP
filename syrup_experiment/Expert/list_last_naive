[] -> None;
=================================
fix f0.fun x0. ( None )
0.0003 false

[1] -> Some 1;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some hd1 )
  
0.0005 false

[2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some hd1 )
  
0.0006 false

[2, 1] -> Some 1;
=================================
fix f0.fun x0.
  ( Some
    ( Succ ( Zero ) ) )
0.0008 false

[1, 2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some ( Succ hd1 ) )
  
0.0006 false

[3, 2, 1] -> Some 1;
=================================
fix f0.fun x0.
  ( Some
    ( Succ ( Zero ) ) )
0.0007 false

[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some
      ( Succ
        ( Succ ( Zero ) )
        ) )
  
0.0005 false

[] -> None;
[2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some hd1 )
  
0.0003 false

[] -> None;
[2, 1] -> Some 1;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some
      ( Succ ( Zero ) ) )
  
0.0008 false

[] -> None;
[1, 2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some ( Succ hd1 ) )
  
0.0008 false

[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0088 false

[1] -> Some 1;
[2] -> Some 2;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some hd1 )
  
0.0010 false

[1] -> Some 1;
[2, 1] -> Some 1;
=================================
fix f0.fun x0.
  ( Some
    ( Succ ( Zero ) ) )
0.0008 false

[1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0049 false

[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( None )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0065 false

[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Some
      ( Succ ( Zero ) ) )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0075 false

[1] -> Some 1;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0090 false

[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0432 true

[1] -> Some 1;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix f0.fun x0.
  ( Some
    ( Succ ( Zero ) ) )
0.0009 false

[] -> None;
[1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some
      ( Succ ( Zero ) ) )
  
0.0009 false

[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Some
      ( Succ ( Zero ) ) )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0085 false

[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0064 false

[] -> None;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0065 false

[] -> None;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( None )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0057 false

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0055 false

[] -> None;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0223 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0067 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0070 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0079 false

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0078 false

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    ( Some
      ( Succ ( Zero ) ) )
  
0.0012 false

[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0576 true

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0087 false

[] -> None;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some
        ( Succ ( Zero ) )
        )
    
  
0.0066 false

[] -> None;
[2] -> Some 2;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0196 true

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Some
      ( Succ ( Zero ) ) )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      (f0 tl1)
    
  
0.0082 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some hd1 )
    
  
0.0111 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Some hd2 )
    | hd1::tl1 ->
      ( Some
        ( Succ ( Zero ) )
        )
    
  
0.0076 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0393 true

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0424 true

[] -> None;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0385 true

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0619 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( None )
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'2::tl'2 ->
        ( False )
    then ( Some hd1 )
      else (f0 tl1)
  
0.0648 true

