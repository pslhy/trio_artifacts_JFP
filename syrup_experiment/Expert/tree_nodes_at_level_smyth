(Leaf (), 0) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0174939999999 false false

(Leaf (), 1) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0179760000001 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0206229999999 false false

(Node (Leaf (), T (), Leaf ()), 1) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0178080000001 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0202650000001 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> n in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0231759999999 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0195650000001 false false

(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> n in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.020788 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0186209999999 false false

(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.018894 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.02538 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      1

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.1 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0227970000001 false false

(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.026482 false false

(Leaf (), 0) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      1

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.022489 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
=================================
NOSOL

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0254709999999 false false

(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0230770000001 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> S n in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0268599999999 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0239320000001 false false

(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0232679999999 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      case y1 of
        Z y2 -> 
          S n

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.107627 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.027576 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> 1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0307580000001 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_nodes_at_level = \tree -> \n -> S n in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0354789999999 false false

(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
NOSOL

(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      case y1 of
        Z y2 -> 
          1

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.102123 false false

(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.028703 false false

(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0267019999999 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.027507 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          0

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.1 y2) n)

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          0

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.927503 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      case y1 of
        Z y2 -> 
          S n

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.104503 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
=================================
NOSOL

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      case y1 of
        Z y2 -> 
          1

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.104228 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.989681 false false

(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0364999999999 false false

(Leaf (), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0315029999999 false false

(Leaf (), 0) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
None
(Leaf (), 0) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case y1 of
        Z y2 -> 
          1

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.1 y2) (S (S n)))

        Leaf y2 -> 
          0

    S y1 -> 
      case y1 of
        Z y2 -> 
          1

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
52.308054 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0523049999999 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0419039999999 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.044265 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      1

    S y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.035335 false false

(Leaf (), 0) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      1

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      tree_nodes_at_level (#3.1 y1) 1

    Leaf y1 -> 
      n in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0545990000001 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.039851 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
60.81642 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
99.610083 false false

(Leaf (), 0) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.143398 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
85.166295 false false

(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      1

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.040855 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.380463 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
NOSOL

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      S (tree_nodes_at_level (#3.3 y1) n)

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
0.0550780000001 false false

(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.662262 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.393764 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.3 y2) n)

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.3 y2) n)

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
3.17919 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case y1 of
        Z y2 -> 
          0

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.1 y2) (S n))

        Leaf y2 -> 
          0

    S y1 -> 
      case y1 of
        Z y2 -> 
          0

        S y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
1.725967 false false

(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case tree of
    Node y1 -> 
      case n of
        Z y2 -> 
          1

        S y2 -> 
          tree_nodes_at_level (#3.1 y1) y2

    Leaf y1 -> 
      0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.55435 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.271022 false false

(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
NOSOL

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.1 y2) (S (S n)))

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          y1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          S (tree_nodes_at_level (#3.1 y2) (S (S n)))

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          y1 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.114036 false false

(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.23651 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.146285 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
(\sum -> (\tree_nodes_at_level -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_nodes_at_level = \tree -> \n -> case n of
    Z y1 -> 
      case tree of
        Node y2 -> 
          1

        Leaf y2 -> 
          0

    S y1 -> 
      case tree of
        Node y2 -> 
          tree_nodes_at_level (#3.1 y2) y1

        Leaf y2 -> 
          0 in tree_nodes_at_level) : BooleanTree -> Nat -> Nat))
  ((let sum = \n1 -> \n2 -> case n1 of
    Z _ -> 
      n2

    S m -> 
      S (sum m n2) in sum) : Nat -> Nat -> Nat)
2.561669 false false

(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
(Leaf (), 0) -> 0;
(Leaf (), 1) -> 0;
(Node (Leaf (), T (), Leaf ()), 0) -> 1;
(Node (Leaf (), T (), Leaf ()), 1) -> 0;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Leaf ()), 1) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 0) -> 1;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 1) -> 2;
(Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), 2) -> 0;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 0) -> 1;
(Node (Node (Node (Leaf (), T (), Leaf ()), T (), Node (Leaf (), T (), Leaf ())), T (), Leaf ()), 1) -> 1;
=================================
None
