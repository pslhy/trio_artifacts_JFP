[] -> [];
=================================
fix f0.fun x0. x0
0.0003 false

[0] -> [0];
=================================
fix f0.fun x0. x0
0.0016 false

[1] -> [1];
=================================
fix f0.fun x0. x0
0.0017 false

[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0031 false

[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.1356 true

[] -> [];
[0] -> [0];
=================================
fix f0.fun x0. x0
0.0006 false

[] -> [];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0006 false

[] -> [];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0028 false

[] -> [];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0840 true

[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0026 false

[0] -> [0];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0035 false

[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.1463 true

[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0024 false

[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0473 true

[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0505 true

[] -> [];
[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0018 false

[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0031 false

[] -> [];
[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0856 true

[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0019 false

[] -> [];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0349 true

[] -> [];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0279 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0030 false

[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0571 true

[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0581 true

[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0229 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0026 false

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0371 true

[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0343 true

[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0076 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0296 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0086 true

