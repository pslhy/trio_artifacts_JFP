[] -> 0;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_length = \xs -> 0 in list_length) : NatList -> Nat)
0.00546000000008 false false

[0] -> 1;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_length = \xs -> 1 in list_length) : NatList -> Nat)
0.00495000000001 false false

[0, 0] -> 2;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_length = \xs -> 2 in list_length) : NatList -> Nat)
0.00427599999989 false false

[] -> 0;
[0] -> 1;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_length) : NatList -> Nat)
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_length (#2.2 y1)) in list_length) : NatList -> Nat)
0.0075690000001 false true

[] -> 0;
[0, 0] -> 2;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      2 in list_length) : NatList -> Nat)
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_length (#2.2 y1)) in list_length) : NatList -> Nat)
0.00703799999997 false true

[0] -> 1;
[0, 0] -> 2;
=================================
NOSOL

[] -> 0;
[0] -> 1;
[0, 0] -> 2;
=================================
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_length (#2.2 y1)) in list_length) : NatList -> Nat)
(\list_length -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_length = \xs -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_length (#2.2 y1)) in list_length) : NatList -> Nat)
0.00739199999998 true true

