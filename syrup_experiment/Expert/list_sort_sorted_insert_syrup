[] -> [];
=================================
fix f0.fun x0. x0
0.0003 false

[0] -> [0];
=================================
fix f0.fun x0. x0
0.0018 false

[1] -> [1];
=================================
fix f0.fun x0. x0
0.0019 false

[0, 0] -> [0];
=================================
fix f0.fun x0.
  (insert
    ( ( Nil ), ( Zero ) ))
0.0029 false

[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0033 false

[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> tl1
  
0.0029 false

[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1680 true

[0] -> [0];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1737 true

[] -> [];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0017 false

[] -> [];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0027 false

[] -> [];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0031 false

[1] -> [1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0029 false

[1] -> [1];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0037 false

[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0032 false

[0] -> [0];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  (insert
    ( ( Nil ), ( Zero ) ))
0.0028 false

[1] -> [1];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0036 false

[0, 0] -> [0];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0043 false

[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0036 false

[] -> [];
[0] -> [0];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0027 false

[] -> [];
[0] -> [0];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0027 false

[1] -> [1];
[1, 0] -> [0, 1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1861 true

[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0091 false

[] -> [];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0322 true

[1] -> [1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0339 true

[] -> [];
[0, 0] -> [0];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1226 true

[] -> [];
[1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0483 true

[] -> [];
[0, 0] -> [0];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0037 false

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0029 false

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0029 false

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0031 false

[] -> [];
[0, 0] -> [0];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0484 true

[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0037 false

[] -> [];
[1] -> [1];
[0, 0] -> [0];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0748 true

[] -> [];
[0] -> [0];
[0, 0] -> [0];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1136 true

[] -> [];
[1] -> [1];
[0, 0] -> [0];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0034 false

[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.2002 true

[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0054 false

[0] -> [0];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0751 true

[] -> [];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0899 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0614 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0033 false

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0555 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0147 true

[] -> [];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0049 false

[] -> [];
[0] -> [0];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.1126 true

[] -> [];
[0] -> [0];
[0, 0] -> [0];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0417 true

[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0473 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert ( tl1, hd1 ))
  
0.0037 false

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0591 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0195 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0183 true

[] -> [];
[0] -> [0];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0409 true

[] -> [];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0808 true

[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0551 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0] -> [0];
[1, 0] -> [0, 1];
[1, 1] -> [1];
[0, 1, 1] -> [0, 1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (insert
      ( (f0 tl1), hd1 ))
  
0.0247 true

