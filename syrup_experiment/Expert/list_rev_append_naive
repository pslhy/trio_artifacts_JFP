[] -> [];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> ( Nil )
  
0.0004 false

[0] -> [0];
=================================
fix f0.fun x0. x0
0.0018 false

[1] -> [1];
=================================
fix f0.fun x0.
  (append
    ( x0, ( Nil ) ))
0.0019 false

[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Succ hd1 )
      ( Cons hd1 ( Nil )
        ) )
  
0.0033 false

[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Succ hd1 )
      ( Cons hd1
        ( Cons hd1
          ( Nil ) ) ) )
  
0.2474 false

[] -> [];
[0] -> [0];
=================================
fix f0.fun x0.
  (append
    ( x0, ( Nil ) ))
0.0015 false

[] -> [];
[1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> x0
  
0.0015 false

[] -> [];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Succ hd1 )
      ( Cons hd1 ( Nil )
        ) )
  
0.0027 false

[] -> [];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Succ hd1 )
      ( Cons hd1
        ( Cons hd1
          ( Nil ) ) ) )
  
0.1299 false

[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0.
  (append
    ( x0, ( Nil ) ))
0.0028 false

[0] -> [0];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.1075 false

[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.0304 false

[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0.
  (append
    ( ( Nil ), x0 ))
0.0023 false

[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.0437 false

[] -> [];
[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.0079 false

[] -> [];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.0468 false

[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (append
      ( tl1,
        ( Cons hd1
          ( Nil ) ) ))
  
0.0104 false

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (append
      ( (f0 tl1),
        ( Cons hd1
          ( Nil ) ) ))
  
0.1286 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (append
      ( (f0 tl1),
        ( Cons hd1
          ( Nil ) ) ))
  
0.1611 true

