[] -> [];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> ( Nil )
  
0.0003 false

[0] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> x0
  
0.0018 false

[1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 (f0 tl1) )
  
0.0017 false

[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0029 false

[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.1358 true

[] -> [];
[0] -> [0];
=================================
fix f0.fun x0. x0
0.0007 false

[] -> [];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0006 false

[] -> [];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0029 false

[] -> [];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0836 true

[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 (f0 tl1) )
  
0.0028 false

[0] -> [0];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0034 false

[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.1508 true

[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0022 false

[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0454 true

[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0500 true

[] -> [];
[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> x0
  
0.0019 false

[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0043 false

[] -> [];
[0] -> [0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0846 true

[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0019 false

[] -> [];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0350 true

[] -> [];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0314 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0030 false

[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0520 true

[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0570 true

[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0209 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc ( tl1, hd1 ))
  
0.0029 false

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0410 true

[] -> [];
[0] -> [0];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0357 true

[] -> [];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0069 true

[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0295 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0, 1] -> [1, 0];
[0, 0, 1] -> [1, 0, 0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    (snoc
      ( (f0 tl1), hd1 ))
  
0.0079 true

