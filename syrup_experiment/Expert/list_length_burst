[] -> 0;
=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[0] -> 1;
=================================
fix (f : list -> nat) = fun (x:list) -> 1

0.0075 false

[0, 0] -> 2;
=================================
fix (f : list -> nat) = fun (x:list) -> 2

0.0793 false

[] -> 0;
[0] -> 1;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> S (Un_Cons x . 0)

0.0076 false

[] -> 0;
[0, 0] -> 2;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> S (f (Un_Cons x . 1))

0.0884 true

[0] -> 1;
[0, 0] -> 2;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> S (f (Un_Cons x . 1))

0.0290 true

[] -> 0;
[0] -> 1;
[0, 0] -> 2;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> S (f (Un_Cons x . 1))

0.0091 true

