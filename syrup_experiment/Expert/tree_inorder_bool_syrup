Leaf () -> [];
=================================
fix f0.fun x0. ( Nil )
0.0003 false

Node (Leaf (), T (), Leaf ()) -> [T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0016 false

Node (Leaf (), F (), Leaf ()) -> [F ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0015 false

Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf ->
    ( Cons ( False )
      ( Nil ) )
  | Node(v1,l1,r1) ->
    ( Cons ( True )
      (f0 r1) )
  
0.0028 false

Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf ->
    ( Cons ( True )
      ( Nil ) )
  | Node(v1,l1,r1) ->
    ( Cons ( False )
      (f0 r1) )
  
0.0041 false

Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.0031 false

Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 ( Nil ) )
  
0.0007 false

Leaf () -> [];
Node (Leaf (), F (), Leaf ()) -> [F ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 ( Nil ) )
  
0.0007 false

Leaf () -> [];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons ( True )
      ( Cons v1 ( Nil ) )
      )
  
0.0020 false

Leaf () -> [];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons ( False )
      ( Cons v1 ( Nil ) )
      )
  
0.0021 false

Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0026 false

Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.0037 false

Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
=================================
None
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.0030 false

Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.0019 false

Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 ( Nil )
          ) ))
  
0.0104 false

Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons ( False )
      ( Cons ( True )
        ( Nil ) ) )
  
0.0035 false

Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 ( Nil )
          ) ))
  
0.0133 false

Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 (f0 r1)
          ) ))
  
0.0149 true

Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 ( Nil )
          ) ))
  
0.0212 false

Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 (f0 r1)
          ) ))
  
0.0192 true

Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 (f0 r1)
          ) ))
  
0.0227 true

Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
None
Leaf () -> [];
Node (Leaf (), T (), Leaf ()) -> [T ()];
Node (Leaf (), F (), Leaf ()) -> [F ()];
Node (Node (Leaf (), T (), Leaf ()), F (), Leaf ()) -> [T (), F ()];
Node (Node (Leaf (), F (), Leaf ()), T (), Leaf ()) -> [F (), T ()];
Node (Leaf (), F (), Node (Leaf (), T (), Leaf ())) -> [F (), T ()];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append_bool
      ( (f0 l1),
        ( Cons v1 (f0 r1)
          ) ))
  
0.0309 true

