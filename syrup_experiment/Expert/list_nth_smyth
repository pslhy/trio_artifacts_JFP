([], 0) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00355800000011 false false

([], 1) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00506599999994 false false

([2], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00383299999999 false false

([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 1 in list_nth) : NatList -> Nat -> Nat)
0.00379199999998 false false

([1, 2], 0) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 1 in list_nth) : NatList -> Nat -> Nat)
0.0036090000001 false false

([1, 2], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.003874 false false

([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.00359000000003 false false

([1], 1) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 0 in list_nth) : NatList -> Nat -> Nat)
0.00380599999994 false false

([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00360599999999 false false

([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 3 in list_nth) : NatList -> Nat -> Nat)
0.00358499999993 false false

([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([2], 1) -> 0;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00467099999992 false false

([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([], 1) -> 0;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S n in list_nth) : NatList -> Nat -> Nat)
0.00555600000007 false false

([], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
0.00501099999997 false false

([2], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([2], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> 2 in list_nth) : NatList -> Nat -> Nat)
0.00357899999995 false false

([1, 2], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> S
    (case n of
      Z y1 -> 
        2

      S y1 -> 
        n) in list_nth) : NatList -> Nat -> Nat)
0.00980099999992 false false

([1, 2], 1) -> 2;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_nth = \xs -> \n -> S n in list_nth) : NatList -> Nat -> Nat)
0.00763000000006 false false

([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
=================================
NOSOL

([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 1) -> 1;
=================================
NOSOL

([2], 0) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
=================================
NOSOL

([], 0) -> 0;
([1, 2], 1) -> 2;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_nth (#2.2 y1) n) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      S (list_nth (#2.2 y1) n) in list_nth) : NatList -> Nat -> Nat)
0.0141080000001 false false

([1, 2], 1) -> 2;
([1], 0) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> S
    (case n of
      Z y1 -> 
        0

      S y1 -> 
        case y1 of
          Z y2 -> 
            n

          S y2 -> 
            0) in list_nth) : NatList -> Nat -> Nat)
0.0104470000001 false false

([1, 2], 1) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> S
    (case n of
      Z y1 -> 
        2

      S y1 -> 
        n) in list_nth) : NatList -> Nat -> Nat)
0.00924099999997 false false

([2], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
=================================
NOSOL

([], 0) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) 1 in list_nth) : NatList -> Nat -> Nat)
0.0126290000001 false false

([], 0) -> 0;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (#2.1 y2) in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          0

        Cons y2 -> 
          S (S (S (list_nth (#2.2 y2) n))) in list_nth) : NatList -> Nat -> Nat)
0.03369 false false

([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 1) -> 0;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      3

    S y1 -> 
      y1 in list_nth) : NatList -> Nat -> Nat)
0.0121790000001 false false

([], 0) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      n

    Cons y1 -> 
      list_nth (#2.2 y1) 1 in list_nth) : NatList -> Nat -> Nat)
0.008511 false false

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.047861 true true

([2], 0) -> 2;
([2], 1) -> 0;
([1], 1) -> 0;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case n of
    Z y1 -> 
      2

    S y1 -> 
      0 in list_nth) : NatList -> Nat -> Nat)
0.00884799999994 false false

([], 0) -> 0;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.052927 true true

([1, 2], 1) -> 2;
([1], 0) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          2

        S y2 -> 
          1 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      case n of
        Z y2 -> 
          0

        S y2 -> 
          0

    Cons y1 -> 
      case n of
        Z y2 -> 
          S (list_nth (#2.2 y1) n)

        S y2 -> 
          1 in list_nth) : NatList -> Nat -> Nat)
0.043328 false false

([], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.046437 true true

([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          #2.1 y1

        Cons y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.064167 false true

([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
NOSOL

([], 0) -> 0;
([2], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0424330000001 true true

([], 0) -> 0;
([], 1) -> 0;
([1], 0) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.141322 true true

([], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.033402 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.12225 true true

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([2], 0) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.089381 false true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0368080000001 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.102188 false true

([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0446219999999 true true

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([2], 0) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0590580000001 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0485329999999 true true

([2], 1) -> 0;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          0 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) n in list_nth) : NatList -> Nat -> Nat)
0.0759619999999 false false

([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.120592 true true

([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0581999999999 true true

([], 0) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.091862 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.130258 true true

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.157305 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.113045 true true

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
NOSOL

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.105615 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          S n in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.100658 false true

([], 0) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.060788 true true

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.240963 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.242211 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0791429999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0815379999999 true true

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.157564 true true

([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0650250000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.438968 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0658739999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.115536 true true

([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0339779999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.144176 true true

([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
NOSOL

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.157566 true true

([], 0) -> 0;
([], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.123425 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.067157 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.105855 true true

([], 0) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0584200000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.138879 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.117618 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0699199999999 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.161299 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.053418 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.061659 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.143613 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.118667 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.05206 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0626010000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.12057 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.154545 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.119654 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0704519999999 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.054292 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.121515 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.173546 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.196021 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.112669 true true

([], 0) -> 0;
([2], 0) -> 2;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0611180000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.153195 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.179037 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.187636 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.162578 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.149063 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.218647 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.201646 true true

([], 0) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0622860000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.160509 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.155106 true true

([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.0648020000001 true true

([], 0) -> 0;
([], 1) -> 0;
([2], 0) -> 2;
([2], 1) -> 0;
([1, 2], 0) -> 1;
([1, 2], 1) -> 2;
([1], 0) -> 1;
([1], 1) -> 0;
([2, 1], 0) -> 2;
([2, 1], 1) -> 1;
([3, 2, 1], 0) -> 3;
([3, 2, 1], 1) -> 2;
([3, 2, 1], 2) -> 1;
=================================
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
(\list_nth -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_nth = \xs -> \n -> case xs of
    Nil y1 -> 
      0

    Cons y1 -> 
      case n of
        Z y2 -> 
          #2.1 y1

        S y2 -> 
          list_nth (#2.2 y1) y2 in list_nth) : NatList -> Nat -> Nat)
0.156769 true true

