([], []) -> [];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> Nil

0.0000 false

([], [0]) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0034 false

([0], []) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0032 false

([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (Un_Cons (x . 0) . 0, x . 0)

0.0220 false

([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0058 false

([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    Cons (Un_Cons (x . 0) . 0,
           Cons (Un_Cons (x . 1) . 0, Un_Cons (x . 0) . 1))

0.1676 false

([], []) -> [];
([], [0]) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 1

0.0033 false

([], []) -> [];
([0], []) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0030 false

([], []) -> [];
([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 1)

0.0348 false

([], []) -> [];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0053 false

([0], []) -> [0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0899 true

([], [0]) -> [0];
([0], []) -> [0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> Cons (0, Nil)

0.0053 false

([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.1631 false

([], [0]) -> [0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 0 with
                           | Nil _ -> x . 1
                           | Cons _ -> x . 0

0.0087 false

([0], []) -> [0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0031 false

([0], []) -> [0];
([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> Cons (0, x . 1)

0.0221 false

([], [0]) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 0)

0.0382 false

([], []) -> [];
([], [0]) -> [0];
([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 0)

0.0249 false

([], []) -> [];
([], [0]) -> [0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) -> match x . 1 with
                           | Nil _ -> x . 0
                           | Cons _ -> x . 1

0.0094 false

([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 0)

0.0103 false

([], [0]) -> [0];
([0], []) -> [0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (x . 1, Un_Cons (x . 0) . 1))

0.0763 false

([], []) -> [];
([0], []) -> [0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) = fun (x:list * list) -> x . 0

0.0031 false

([], [0]) -> [0];
([0], [0]) -> [0, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0677 true

([], []) -> [];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 1)

0.0319 false

([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2292 true

([], []) -> [];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2051 true

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 0)

0.0143 false

([], [0]) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0889 true

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0661 true

([], []) -> [];
([], [0]) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 0)

0.0352 false

([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2644 true

([], []) -> [];
([], [0]) -> [0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0246 true

([], []) -> [];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 1)

0.0224 false

([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0391 true

([], []) -> [];
([0], []) -> [0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2021 true

([], []) -> [];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1479 true

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, x . 0)

0.0136 false

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0375 true

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0657 true

([], []) -> [];
([], [0]) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0576 true

([], []) -> [];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1341 true

([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (x . 1, Un_Cons (x . 0) . 1))

0.0372 false

([], []) -> [];
([], [0]) -> [0];
([0], []) -> [0];
([0], [0]) -> [0, 0];
([1, 0], []) -> [1, 0];
([1, 0], [0]) -> [1, 0, 0];
=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0335 true

