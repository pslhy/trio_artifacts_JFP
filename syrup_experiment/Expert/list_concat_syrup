[] -> [];
=================================
fix f0.fun x0. ( Nil )
0.0002 false

[[]] -> [];
=================================
fix f0.fun x0. ( Nil )
0.0004 false

[[0]] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Zero )
      (f0 tl1) )
  
0.0022 false

[[0],[0]] -> [0,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Zero )
      (f0 tl1) )
  
0.0029 false

[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons
      ( Succ ( Zero ) )
      (f0 tl1) )
  
0.0016 false

[[1],[1],[]] -> [1,1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0035 false

[[0],[0]] -> [0,0];
[[1]] -> [1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0857 true

[] -> [];
[[0]] -> [0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0005 false

[[0],[0]] -> [0,0];
[[1],[1],[]] -> [1,1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0045 false

[] -> [];
[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0006 false

[] -> [];
[[1],[1],[]] -> [1,1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0032 false

[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.1347 true

[[]] -> [];
[[0],[0]] -> [0,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0030 false

[[0]] -> [0];
[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0028 false

[[0]] -> [0];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.1280 true

[[0]] -> [0];
[[0],[0]] -> [0,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Zero )
      (f0 tl1) )
  
0.0020 false

[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0233 true

[[]] -> [];
[[0]] -> [0];
[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0028 false

[] -> [];
[[]] -> [];
[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0015 false

[] -> [];
[[]] -> [];
[[1],[1],[]] -> [1,1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0026 false

[] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons ( Zero )
      (f0 tl1) )
  
0.0025 false

[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.2290 true

[[]] -> [];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0463 true

[[]] -> [];
[[0]] -> [0];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0511 true

[] -> [];
[[0],[0]] -> [0,0];
[[1],[1],[]] -> [1,1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append ( hd1, hd1 ))
  
0.0037 false

[] -> [];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0738 true

[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0322 true

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[1]] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> hd1
  
0.0022 false

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0316 true

[] -> [];
[[]] -> [];
[[0],[0]] -> [0,0];
[[1]] -> [1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0331 true

[[]] -> [];
[[0]] -> [0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0568 true

[[]] -> [];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
None
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.1433 true

[] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0749 true

[] -> [];
[[0]] -> [0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0758 true

[] -> [];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.1010 true

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0055 true

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0328 true

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0326 true

[] -> [];
[[]] -> [];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0621 true

[] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0729 true

[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0586 true

[] -> [];
[[]] -> [];
[[0]] -> [0];
[[0],[0]] -> [0,0];
[[1]] -> [1];
[[1],[1],[]] -> [1,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    (append
      ( hd1, (f0 tl1) ))
  
0.0391 true

