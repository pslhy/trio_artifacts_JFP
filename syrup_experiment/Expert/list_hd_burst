[] -> 0;
=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0001 false

[0] -> 0;
=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0000 false

[1] -> 1;
=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0051 false

[] -> 0;
[0] -> 0;
=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0001 false

[] -> 0;
[1] -> 1;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0075 true

[0] -> 0;
[1] -> 1;
=================================
fix (f : list -> nat) = fun (x:list) -> Un_Cons x . 0

0.0035 false

[] -> 0;
[0] -> 0;
[1] -> 1;
=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0051 true

