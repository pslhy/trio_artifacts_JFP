[] -> [];
=================================
fix f0.fun x0. x0
0.0002 false

[0] -> [0];
=================================
fix f0.fun x0. x0
0.0014 false

[1] -> [1];
=================================
fix f0.fun x0. x0
0.0017 false

[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons ( Succ hd1 )
        ( Cons ( Zero )
          ( Nil ) ) ) )
  
0.1085 false

[1,1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> tl1
  
0.0037 false

[2,0] -> [2,0];
=================================
fix f0.fun x0. x0
0.0041 false

[2,2,0] -> [2,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> tl1
  
0.0041 false

[0,1,1] -> [0,1];
=================================
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons ( Succ hd1 )
        ( Nil ) ) )
  
0.0312 false

[2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons
        ( Succ ( Zero ) )
        ( Cons ( Zero )
          ( Nil ) ) ) )
  
0.1290 false

[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons
        ( Succ ( Zero ) )
        ( Cons ( Zero )
          ( Nil ) ) ) )
  
0.1793 false

[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons
        ( Succ ( Zero ) )
        ( Cons ( Zero )
          ( Nil ) ) ) )
  
0.1341 false

[] -> [];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0005 false

[0] -> [0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.3387 false

[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons ( Succ hd1 )
        (f0 tl1) )
    
  
0.1416 false

[1,1] -> [1];
[2,2,0] -> [2,0];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 -> tl1
  
0.0043 false

[0] -> [0];
[1] -> [1];
=================================
fix f0.fun x0. x0
0.0028 false

[1] -> [1];
[1,1] -> [1];
=================================
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd1::tl1 ->
    ( Cons hd1 ( Nil ) )
  
0.0027 false

[1] -> [1];
[2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons ( Succ hd1 )
        (f0 tl1) )
    
  
0.2768 false

[] -> [];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons
        ( Succ ( Zero ) )
        ( Cons ( Zero )
          ( Nil ) ) ) )
  
0.1148 false

[0,0] -> [0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.3850 false

[] -> [];
[2,0] -> [2,0];
[2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Nil )
        else (f0 tl1) )
  
0.9856 false

[] -> [];
[1,1] -> [1];
[2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then tl1
        else
          ( Cons hd1
            (f0 tl1) )
  else
    ( Cons ( Zero )
      ( Nil ) )
1.9521 false

[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
57.5067 true

[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, ( Zero ) ))
      then (f0 tl1)
      else
        ( Cons hd1
          ( Cons ( Zero )
            ( Nil ) ) )
  
0.5802 false

[0] -> [0];
[2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.1485 false

[0,1,1] -> [0,1];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
4.4287 true

[] -> [];
[0,0] -> [0];
[0,1,1] -> [0,1];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.1567 false

[1,1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
8.8861 false

[0] -> [0];
[1] -> [1];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.4964 false

[1] -> [1];
[0,0] -> [0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.1873 false

[1] -> [1];
[0,0] -> [0];
[0,1,1] -> [0,1];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
27.8454 true

[] -> [];
[0,0] -> [0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.6662 false

[0] -> [0];
[1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> ( Nil )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2
        ( Cons
          ( Succ ( Zero )
            )
          ( Cons ( Zero )
            ( Nil ) ) ) )
    
  
0.2520 false

[0,0] -> [0];
[2,0] -> [2,0];
[2,2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
49.1074 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Nil )
        else tl1 )
  
0.0798 false

[0] -> [0];
[0,0] -> [0];
[2,0] -> [2,0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
3.9753 false

[] -> [];
[1,1] -> [1];
[2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else
    ( Cons ( Zero )
      ( Nil ) )
56.3853 false

[0] -> [0];
[1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
19.4291 false

[1,1] -> [1];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
2.2889 true

[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.5300 false

[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
3.3925 false

[] -> [];
[1] -> [1];
[1,0,0] -> [1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else
    ( Cons ( Zero )
      ( Nil ) )
3.7087 false

[] -> [];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else
    ( Cons ( Zero )
      ( Nil ) )
9.0037 false

[] -> [];
[1] -> [1];
[0,0] -> [0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.2595 false

[1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
40.9818 true

[] -> [];
[0,0] -> [0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
3.1113 false

[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
27.9593 false

[0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1,
              ( Zero ) ))
      then
        ( Cons hd1
          (f0 tl1) )
        else (f0 tl1)
  else
    ( Cons ( Zero )
      ( Nil ) )
2.5956 false

[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.2494 false

[0] -> [0];
[1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] ->
    ( Cons ( Zero ) x0 )
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.4677 false

[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (less_than
            ( hd'1, hd1 ))
      then
        ( Cons hd1
          (f0 tl1) )
        else (f0 tl1)
  else
    ( Cons ( Zero )
      ( Nil ) )
5.2759 false

[] -> [];
[1] -> [1];
[2,0] -> [2,0];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
22.9995 true

[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[1] -> [1];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
8.7008 false

[0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
40.1281 true

[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
None
[0,0] -> [0];
[1,1] -> [1];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[0] -> [0];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
6.0161 true

[] -> [];
[1] -> [1];
[0,0] -> [0];
[0,1,1] -> [0,1];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
26.4157 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
14.1615 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
30.4430 true

[0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
31.3568 true

[0] -> [0];
[1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else
    ( Cons ( Zero )
      ( Nil ) )
6.0829 false

[] -> [];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
69.8720 false

[] -> [];
[0] -> [0];
[1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
47.3097 true

[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[0] -> [0];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
4.6720 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
66.2983 true

[] -> [];
[0] -> [0];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
52.0025 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
36.8082 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
9.0513 false

[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
36.3008 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2 (f0 tl1)
        )
    
  
0.6681 false

[] -> [];
[1] -> [1];
[0,0] -> [0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
111.8615 true

[] -> [];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
28.9337 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
6.0197 true

[] -> [];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
36.7086 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
23.2474 true

[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
39.6592 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
111.1812 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
8.6663 true

[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
78.3693 true

[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
101.9100 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
13.6468 true

[] -> [];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
86.0165 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
56.8423 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
None
[] -> [];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
107.0769 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
98.1811 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
29.2177 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
8.6615 false

[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
99.5742 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
119.8483 true

[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
72.0741 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
40.0370 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
90.3435 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
38.3085 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
58.8036 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
55.4649 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
100.6839 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
47.4184 true

[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
66.6745 true

[] -> [];
[0] -> [0];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
81.2601 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
44.1220 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
None
[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
107.4600 true

[] -> [];
[0] -> [0];
[1] -> [1];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
107.2808 true

[] -> [];
[0] -> [0];
[1] -> [1];
[0,0] -> [0];
[1,1] -> [1];
[2,0] -> [2,0];
[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[2,1,0,0] -> [2,1,0];
[2,2,1,0,0] -> [2,1,0];
[2,2,0] -> [2,0];
[2,2,2,0] -> [2,0];
[1,2,2,2,0] -> [1,2,0];
=================================
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fail to find a solution
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
112.6879 true

