[] -> None;
=================================
fix (f : list -> natopt) = fun (x:list) -> None

0.0000 false

[1] -> Some 1;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_Cons x . 0)

0.0090 false

[2] -> Some 2;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_Cons x . 0)

0.0053 false

[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_S (Un_Cons x . 0))

0.0406 false

[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_Cons (Un_Cons x . 1) . 0)

0.0215 false

[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some 1

0.1816 false

[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some 2

0.0106 false

[] -> None;
[2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) -> match x with
                    | Nil _ -> None
                    | Cons _ -> Some (Un_Cons x . 0)

0.0083 false

[] -> None;
[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> Some (Un_S (Un_Cons x . 0))

0.0300 false

[] -> None;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> Some (Un_Cons (Un_Cons x . 1) . 0)

0.0391 false

[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.2101 false

[1] -> Some 1;
[2] -> Some 2;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_Cons x . 0)

0.0084 false

[1] -> Some 1;
[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some 1

0.0209 false

[1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0467 false

[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some (Un_Cons (Un_Cons x . 1) . 0)

0.0577 false

[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0917 false

[1] -> Some 1;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0782 false

[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.1704 false

[1] -> Some 1;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) = fun (x:list) -> Some 1

0.0134 false

[] -> None;
[1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) -> match x with
                    | Nil _ -> None
                    | Cons _ -> Some 1

0.0294 false

[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0522 false

[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0540 false

[] -> None;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0275 true

[] -> None;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> Some (Un_Cons (Un_Cons x . 1) . 0)

0.0842 false

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0338 false

[] -> None;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

1.3409 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0214 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0175 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0652 true

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0345 true

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) -> match x with
                    | Nil _ -> None
                    | Cons _ -> Some 1

0.0160 false

[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0466 false

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0238 false

[] -> None;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0191 true

[] -> None;
[2] -> Some 2;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0407 true

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0347 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0220 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match f (Un_Cons x . 1) with
                     | None _ -> Some (Un_Cons x . 0)
                     | Some _ -> f (Un_Cons x . 1))

0.0227 true

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0168 true

[] -> None;
[1] -> Some 1;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0336 true

[] -> None;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))

0.0167 true

[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match Un_Cons x . 1 with
      | Nil _ -> Some (Un_Cons x . 0)
      | Cons _ -> f (Un_Cons x . 1)

0.0340 false

[] -> None;
[1] -> Some 1;
[2] -> Some 2;
[2, 1] -> Some 1;
[1, 2] -> Some 2;
[3, 2, 1] -> Some 1;
=================================
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match f (Un_Cons x . 1) with
                     | None _ -> Some (Un_Cons x . 0)
                     | Some _ -> f (Un_Cons x . 1))

0.0193 true

