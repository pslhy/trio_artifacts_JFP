Leaf () -> [];
=================================
fix (f : tree -> list) = fun (x:tree) -> Nil

0.0001 false

Node (Leaf (), 1, Leaf ()) -> [1];
=================================
fix (f : tree -> list) = fun (x:tree) -> Cons (Un_Node x . 1, Nil)

0.0027 false

Node (Leaf (), 2, Leaf ()) -> [2];
=================================
fix (f : tree -> list) = fun (x:tree) -> Cons (Un_Node x . 1, Nil)

0.0031 false

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match Un_S (Un_Node x . 1) with
      | O _ -> Cons (S (Un_Node x . 1), Nil)
      | S _ -> Cons (Un_S (Un_Node x . 1), f (Un_Node x . 0))

0.0358 false

Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match Un_Node x . 2 with
      | Leaf _ -> Cons (Un_S (Un_Node x . 1), Nil)
      | Node _ -> Cons (Un_Node (Un_Node x . 2) . 1, f (Un_Node x . 2))

0.0685 false

Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
=================================
None
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
None
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

34.5930 true

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match Un_S (Un_Node x . 1) with
                     | O _ -> Cons (S (Un_Node x . 1), f (Un_Node x . 2))
                     | S _ -> Cons (Un_S (Un_Node x . 1), f (Un_Node x . 0)))

0.1956 false

Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> (match Un_S (Un_Node x . 1) with
                     | O _ -> Cons (Un_Node (Un_Node x . 2) . 1,
                                     f (Un_Node x . 2))
                     | S _ -> Cons (Un_S (Un_Node x . 1), Nil))

0.0538 false

Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match Un_Node x . 2 with
      | Leaf _ -> Cons (Un_Node x . 1, Nil)
      | Node _ -> append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil)

0.0254 false

Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
None
Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

32.5950 true

Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.8843 true

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
None
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil)

0.4662 false

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

64.0367 true

Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

31.6295 true

Leaf () -> [];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

36.9567 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.9116 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.8469 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    (append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil))

70.4764 true

Leaf () -> [];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

7.1986 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.2513 true

Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

72.3720 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.6073 true

Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

35.4151 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

1.3301 true

Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.8725 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

19.6200 true

Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.6689 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.2462 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

3.7123 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

72.9786 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.5925 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
None
Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

47.6110 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.7844 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.8842 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.8455 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.0518 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

3.7308 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.0359 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.4249 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.8477 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

0.5892 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    (append (f (Un_Node x . 2)) Cons (Un_Node x . 1, Nil))

16.5468 true

Leaf () -> [];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

9.6709 true

Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.6968 true

Leaf () -> [];
Node (Leaf (), 1, Leaf ()) -> [1];
Node (Leaf (), 2, Leaf ()) -> [2];
Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()) -> [1, 2];
Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())) -> [2, 1];
Node (Node (Leaf (), 1, Leaf ()), 0, Node (Leaf (), 2, Leaf ()) ) -> [1, 2, 0];
Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ) -> [2, 1, 0];
Node (Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) ), 0, Leaf ()) -> [2, 1, 0, 0];
Node (Leaf (), 2, Node (Node (Leaf (), 2, Leaf ()), 0, Node (Leaf (), 1, Leaf ()) )) -> [2, 1, 0, 2];
=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)

4.2935 true

