[] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00175599999989 false false

[0] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00178400000004 false false

[1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00168400000007 false false

[0, 1] -> [1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [1, 0] in list_pairwise_swap) : NatList -> NatList)
0.0019850000001 false false

[1, 0] -> [0, 1];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [0, 1] in list_pairwise_swap) : NatList -> NatList)
0.00190500000008 false false

[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00180099999989 false false

[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [1, 0, 1, 0] in list_pairwise_swap) : NatList -> NatList)
0.00245100000006 false false

[] -> [];
[0] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00183199999992 false false

[] -> [];
[1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00186600000006 false false

[1] -> [];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00183900000002 false false

[1] -> [];
[1, 0] -> [0, 1];
=================================
NOSOL

[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[1, 0] -> [0, 1];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[0] -> [];
[1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00193100000001 false false

[0] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[0] -> [];
[1, 0] -> [0, 1];
=================================
NOSOL

[0] -> [];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00168299999996 false false

[0] -> [];
[1, 0] -> [0, 1];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[0] -> [];
[0, 1] -> [1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, 0] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y1))
            ) in list_pairwise_swap) : NatList -> NatList)
0.00736400000005 false false

[] -> [];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [1, 0, 1, 0]

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons
            ( 1
            , Cons
                ( 0
                , Cons
                    ( 1
                    , Cons (0, list_pairwise_swap (#2.2 y1))
                    )
                )
            )

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
0.00930599999992 false false

[0] -> [];
[0, 1] -> [1, 0];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[1] -> [];
[1, 0] -> [0, 1];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[1] -> [];
[0, 1] -> [1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, 0] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y1))
            ) in list_pairwise_swap) : NatList -> NatList)
0.00781499999994 false false

[] -> [];
[1] -> [];
[1, 0] -> [0, 1];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [0, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( 0
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00741100000005 false false

[] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [1, 0]

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons
            ( 1
            , Cons (0, list_pairwise_swap (#2.2 y1))
            )

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
0.00744600000007 false false

[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
=================================
NOSOL

[1] -> [];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, 0] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y1))
            ) in list_pairwise_swap) : NatList -> NatList)
0.00772099999995 false false

[] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          [1, 0]

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          Cons
            ( 1
            , Cons (0, list_pairwise_swap (#2.2 y1))
            )

        S y2 -> 
          [] in list_pairwise_swap) : NatList -> NatList)
0.00825699999996 false false

[] -> [];
[0] -> [];
[1] -> [];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let list_pairwise_swap = \xs -> [] in list_pairwise_swap) : NatList -> NatList)
0.00167899999997 false false

[] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y2))
            ) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y2))
            ) in list_pairwise_swap) : NatList -> NatList)
0.0132289999999 false false

[1] -> [];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[1] -> [];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0152459999999 false false

[] -> [];
[0] -> [];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( 0
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.018431 false false

[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
=================================
NOSOL

[] -> [];
[0] -> [];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0240779999999 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          [#2.1 y2, #2.1 y1] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y1)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00907200000006 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, 0]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y1))
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0219139999999 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y2))
            ) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons (0, list_pairwise_swap (#2.2 y2))
            ) in list_pairwise_swap) : NatList -> NatList)
0.012129 false false

[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
=================================
NOSOL

[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[0] -> [];
[1] -> [];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.025468 false false

[] -> [];
[0] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.021148 false false

[] -> [];
[0] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y2)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y2)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.009458 false false

[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[0] -> [];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              []

            Cons y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y3))
                )

        S y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              [0, 1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              []

            Cons y3 -> 
              Cons
                ( 1
                , Cons (0, list_pairwise_swap (#2.2 y3))
                )

        S y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              [0, 1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.059698 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              [#2.1 y2, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.2 y2 of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y1)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0239650000001 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y2)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          Cons
            ( #2.1 y2
            , Cons
                ( #2.1 y1
                , list_pairwise_swap (#2.2 y2)
                )
            ) in list_pairwise_swap) : NatList -> NatList)
0.00974999999994 false false

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              []

            S y3 -> 
              []

        Cons y2 -> 
          case #2.1 y1 of
            Z y3 -> 
              Cons
                ( #2.1 y2
                , Cons (0, list_pairwise_swap (#2.2 y2))
                )

            S y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0425319999999 false false

[] -> [];
[0] -> [];
[1] -> [];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.33242 true true

[] -> [];
[0] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              []

            Cons y3 -> 
              Cons
                ( #2.1 y3
                , Cons (0, list_pairwise_swap (#2.2 y3))
                )

        S y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.1 y1 of
        Z y2 -> 
          case #2.2 y1 of
            Nil y3 -> 
              []

            Cons y3 -> 
              Cons
                ( #2.1 y3
                , Cons (0, list_pairwise_swap (#2.2 y3))
                )

        S y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              [0, #2.1 y1]

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.0569800000001 false false

[] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.605192 true true

[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
NOSOL

[] -> [];
[0] -> [];
[1] -> [];
[0, 1] -> [1, 0];
[1, 0] -> [0, 1];
[1, 0, 1] -> [];
[0, 1, 0, 1] -> [1, 0, 1, 0];
=================================
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
(\list_pairwise_swap -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let list_pairwise_swap = \xs -> case xs of
    Nil y1 -> 
      []

    Cons y1 -> 
      case #2.2 y1 of
        Nil y2 -> 
          []

        Cons y2 -> 
          case list_pairwise_swap (#2.2 y1) of
            Nil y3 -> 
              Cons
                ( #2.1 y2
                , Cons
                    ( #2.1 y1
                    , list_pairwise_swap (#2.2 y2)
                    )
                )

            Cons y3 -> 
              [] in list_pairwise_swap) : NatList -> NatList)
0.558863 true true

