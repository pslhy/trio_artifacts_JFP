(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0123530000001 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0112059999999 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011495 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0116519999999 false false

(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    ( Leaf
    , 0
    , Node (Leaf, 1, Node (Leaf, x1, Leaf))
    ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011649 false false

(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, 1, Node (Leaf, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011442 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011569 false false

(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.012285 false false

(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> Node (Node (Leaf, x1, Leaf), S x1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0123599999999 false false

(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.011585 false false

(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
=================================
NOSOL

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> case x1 of
    Z y1 -> 
      tree

    S y1 -> 
      Node
        ( Node (Leaf, 0, Leaf)
        , y1
        , Node (Leaf, x1, Leaf)
        ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0320369999999 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0110950000001 false false

(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
NOSOL

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0103300000001 false false

(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0102670000001 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( Node (Leaf, 0, Leaf)
        , #3.2 y1
        , Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.02757 false false

(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.010626 false false

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, tree_binsert (#3.1 y1) x1) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0245420000001 false false

(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> case x1 of
    Z y1 -> 
      Node (Node (Leaf, 0, Leaf), 1, Leaf)

    S y1 -> 
      case y1 of
        Z y2 -> 
          Node (Node (Leaf, x1, Leaf), S x1, Leaf)

        S y2 -> 
          Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0373489999999 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    ( case x1 of
        Z y1 -> 
          Node (Leaf, 0, Leaf)

        S y1 -> 
          Leaf
    , 1
    , case x1 of
        Z y1 -> 
          Leaf

        S y1 -> 
          Node (Leaf, 2, Leaf)
    ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.033369 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    ( case x1 of
        Z y1 -> 
          Node (Leaf, 0, Leaf)

        S y1 -> 
          Leaf
    , case tree of
        Node y1 -> 
          #3.2 y1

        Leaf y1 -> 
          x1
    , case tree of
        Node y1 -> 
          #3.3 y1

        Leaf y1 -> 
          Leaf
    ) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0677430000001 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
NOSOL

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ((let tree_binsert = \tree -> let f1 = \x1 -> tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0106940000001 false false

(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
NOSOL

(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
=================================
NOSOL

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
NOSOL

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> case x1 of
    Z y1 -> 
      Node (Node (Leaf, 0, Leaf), 2, Leaf)

    S y1 -> 
      tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0159080000001 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    (case tree of
      Node y1 -> 
        ( case compare x1 (#3.2 y1) of
            LT y2 -> 
              Node (Leaf, 1, Leaf)

            GT y2 -> 
              ??

            EQ y2 -> 
              Leaf
        , S
            (case #3.3 y1 of
              Node y2 -> 
                0

              Leaf y2 -> 
                1)
        , case #3.3 y1 of
            Node y2 -> 
              Node (Leaf, 2, Leaf)

            Leaf y2 -> 
              Leaf
        )

      Leaf y1 -> 
        (Leaf, 0, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
18.771595 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Node (Leaf, 0, Leaf), 1, Leaf)

        S y2 -> 
          Node
            ( Node (Leaf, 0, Leaf)
            , 1
            , Node (Leaf, S y2, Leaf)
            ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Leaf, 0, Leaf)

        S y2 -> 
          Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.488554 false false

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
STACKOVERFLOW

(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
STACKOVERFLOW

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> case x1 of
    Z y1 -> 
      Node (Node (Leaf, 0, Leaf), 1, Leaf)

    S y1 -> 
      tree in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.0161029999999 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    (case tree of
      Node y1 -> 
        ( Leaf
        , #3.2 y1
        , tree_binsert (#3.3 y1) x1
        )

      Leaf y1 -> 
        (Leaf, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> let f1 = \x1 -> Node
    (case tree of
      Node y1 -> 
        ( Leaf
        , #3.2 y1
        , tree_binsert (#3.3 y1) x1
        )

      Leaf y1 -> 
        (Leaf, x1, Leaf)) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.174713 false false

(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> case compare x1 (#3.2 y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node
            ( Leaf
            , #3.2 y1
            , Node (Leaf, x1, Leaf)
            )

        EQ y2 -> 
          Node (Leaf, x1, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
4.211799 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.2 y1 of
        Z y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1

        S y2 -> 
          let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), S y2, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case x1 of
        Z y2 -> 
          Node (Leaf, 0, Leaf)

        S y2 -> 
          Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
0.135167 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
STACKOVERFLOW

(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node (#3.1 y1, x1, #3.3 y1) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node
            ( Leaf
            , 0
            , Node (Leaf, 1, Node (Leaf, x1, Leaf))
            ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node (#3.1 y1, x1, #3.3 y1) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node
            ( Leaf
            , 0
            , Node (Leaf, 1, tree_binsert (#3.3 y1) x1)
            ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
7.890993 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          ??

        GT y2 -> 
          let f1 = \x1 -> Node
            (case compare x1 (#3.2 y1) of
              LT y3 -> 
                (Node (Leaf, 1, Leaf), 2, Leaf)

              GT y3 -> 
                ( Node (Leaf, 0, Leaf)
                , 1
                , Node (Leaf, 2, Leaf)
                )

              EQ y3 -> 
                (Leaf, 1, Leaf)) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, 1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
41.814486 false false

(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case #3.1 y1 of
        Node y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y2) of
            LT y3 -> 
              Node
                ( Node (Node (Leaf, 0, Leaf), 1, Leaf)
                , 2
                , Leaf
                )

            GT y3 -> 
              ??

            EQ y3 -> 
              Node (Node (Leaf, 1, Leaf), 2, Leaf) in f1

        Leaf y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              Node (Node (Leaf, 0, Leaf), 2, Leaf)

            GT y3 -> 
              ??

            EQ y3 -> 
              Node (Leaf, 1, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
69.254899 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Node (Node (Leaf, 0, Leaf), 1, Leaf)
                , 2
                , Leaf
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 2, Leaf) in f1

        EQ y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              ??

            GT y3 -> 
              Node (Leaf, 0, Node (Leaf, 1, Leaf))

            EQ y3 -> 
              Node (Leaf, 0, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
50.851457 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> Node (#3.1 y1, x1, #3.3 y1) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
6.518532 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        (case #3.1 y1 of
          Node y2 -> 
            (Node (Leaf, 0, Leaf), 1, Leaf)

          Leaf y2 -> 
            ( case compare x1 (#3.2 y1) of
                LT y3 -> 
                  Node (Leaf, 1, Leaf)

                GT y3 -> 
                  ??

                EQ y3 -> 
                  Leaf
            , S
                (case #3.3 y1 of
                  Node y3 -> 
                    0

                  Leaf y3 -> 
                    1)
            , case #3.3 y1 of
                Node y3 -> 
                  Node (Leaf, 2, Leaf)

                Leaf y3 -> 
                  Leaf
            )) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
47.354222 false false

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 1, Leaf) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1

        EQ y2 -> 
          case #3.3 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Leaf
                , 0
                , Node (Leaf, 1, Node (Leaf, x1, Leaf))
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, 2, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
27.975613 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          ??

        GT y2 -> 
          let f1 = \x1 -> Node
            ( case compare x1 (S (#3.2 y1)) of
                LT y3 -> 
                  Node (Leaf, 0, Leaf)

                GT y3 -> 
                  ??

                EQ y3 -> 
                  Leaf
            , case compare (#3.2 y1) (S x1) of
                LT y3 -> 
                  1

                GT y3 -> 
                  2

                EQ y3 -> 
                  1
            , case compare x1 (#3.2 y1) of
                LT y3 -> 
                  Leaf

                GT y3 -> 
                  Node (Leaf, 2, Leaf)

                EQ y3 -> 
                  Leaf
            ) in f1

        EQ y2 -> 
          let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, 1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 1, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
105.32353 false false

(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      let f1 = \x1 -> Node
        ( case compare x1 (#3.2 y1) of
            LT y2 -> 
              Node (Leaf, 0, Leaf)

            GT y2 -> 
              Leaf

            EQ y2 -> 
              Leaf
        , case #3.2 y1 of
            Z y2 -> 
              0

            S y2 -> 
              1
        , case compare x1 (#3.2 y1) of
            LT y2 -> 
              Leaf

            GT y2 -> 
              Node (Leaf, 2, Leaf)

            EQ y2 -> 
              Leaf
        ) in f1

    Leaf y1 -> 
      let f1 = \x1 -> case compare x1 (Z y1) of
        LT y2 -> 
          ??

        GT y2 -> 
          Node (Leaf, 1, Leaf)

        EQ y2 -> 
          Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
16.81376 false false

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              Node (Node (Leaf, x1, Leaf), 2, Leaf)

            GT y3 -> 
              ??

            EQ y3 -> 
              Node (Leaf, x1, Leaf) in f1

        EQ y2 -> 
          let f1 = \x1 -> case compare x1 (#3.2 y1) of
            LT y3 -> 
              ??

            GT y3 -> 
              Node (Leaf, 0, Node (Leaf, 2, Leaf))

            EQ y3 -> 
              Node (Leaf, 0, Leaf) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 2, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
58.975578 false false

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
(\compare -> (\tree_binsert -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> (\_ -> ()) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ())) ({ASSERTION} : ()))
  ((let tree_binsert = \tree -> case tree of
    Node y1 -> 
      case compare (#3.2 y1) 0 of
        LT y2 -> 
          let f1 = \x1 -> tree in f1

        GT y2 -> 
          case #3.1 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node (Node (Leaf, 0, Leaf), 1, Leaf) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 1, #3.3 y1) in f1

        EQ y2 -> 
          case #3.3 y1 of
            Node y3 -> 
              let f1 = \x1 -> Node
                ( Leaf
                , 0
                , Node (Leaf, 1, Node (Leaf, x1, Leaf))
                ) in f1

            Leaf y3 -> 
              let f1 = \x1 -> Node (Leaf, 0, Node (Leaf, x1, Leaf)) in f1

    Leaf y1 -> 
      let f1 = \x1 -> Node (Leaf, 0, Leaf) in f1 in tree_binsert) : NatTree -> Nat -> NatTree))
  ((let compare = \n1 -> \n2 -> case n1 of
    Z _ -> 
      case n2 of
        Z _ -> 
          EQ

        S _ -> 
          LT

    S m1 -> 
      case n2 of
        Z _ -> 
          GT

        S m2 -> 
          compare m1 m2 in compare) : Nat -> Nat -> Cmp)
106.215819 false false

(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
NOSOL

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
None
(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

(Leaf (), 0) -> Node (Leaf (), 0, Leaf ());
(Leaf (), 1) -> Node (Leaf (), 1, Leaf ());
(Leaf (), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Leaf (), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 1) -> Node (Leaf (), 1, Leaf ());
(Node (Leaf (), 1, Leaf ()), 2) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 0) -> Node (Leaf (), 0, Leaf ());
(Node (Leaf (), 0, Leaf ()), 1) -> Node (Leaf (), 0, Node (Leaf (), 1, Leaf ()));
(Node (Leaf (), 0, Leaf ()), 2) -> Node (Leaf (), 0, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 2, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 2, Leaf ()), 2) -> Node (Leaf (), 2, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 1) -> Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ());
(Node (Node (Leaf (), 0, Leaf ()), 1, Leaf ()), 2) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node(Leaf (), 2, Leaf ()));
(Node (Leaf (), 0, Node (Leaf (), 1, Leaf ())), 2) -> Node (Leaf (), 0, Node (Leaf (), 1, Node(Leaf (), 2, Leaf ())));
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 0) -> Node (Node (Node(Leaf (), 0, Leaf ()), 1, Leaf ()), 2, Leaf ());
(Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ()), 1) -> Node (Node (Leaf (), 1, Leaf ()), 2, Leaf ());
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 0) -> Node (Node (Leaf (), 0, Leaf ()), 1, Node (Leaf (), 2, Leaf ()));
(Node (Leaf (), 1, Node (Leaf (), 2, Leaf ())), 1) -> Node (Leaf (), 1, Node (Leaf (), 2, Leaf ()));
=================================
STACKOVERFLOW

