[0,1] -> [0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0046 true

[0,2,2] -> [0,0,2,2,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0045 true

[3,2,1] -> [3,3,2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0094 true

[2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) -> match x with
                    | Nil _ -> x
                    | Cons _ -> Cons (Un_Cons x . 0, x)

0.0038 false

[1,0] -> [1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0053 true

[0,2,3] -> [0,0,2,2,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0046 true

[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0059 true

[3,0] -> [3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0055 true

[1,2] -> [1,1,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0045 true

[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) -> match x with
                    | Nil _ -> x
                    | Cons _ -> Cons (Un_Cons x . 0, x)

0.0033 false

[3] -> [3,3];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0084 true

[3,0] -> [3,3,0,0];
[3,0,0] -> [3,3,0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0109 true

[0,1] -> [0,0,1,1];
[0,3,0] -> [0,0,3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0085 true

[0] -> [0,0];
[3,0,3] -> [3,3,0,0,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0095 true

[2] -> [2,2];
[3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) -> match x with
                    | Nil _ -> x
                    | Cons _ -> Cons (Un_Cons x . 0, x)

0.0065 false

[2] -> [2,2];
[3,3,0] -> [3,3,3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0106 true

[0] -> [0,0];
[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) -> match x with
                    | Nil _ -> x
                    | Cons _ -> Cons (Un_Cons x . 0, x)

0.0049 false

[1,3] -> [1,1,3,3];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0090 true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0102 true

[1,0] -> [1,1,0,0];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0071 true

[2,2] -> [2,2,2,2];
[1,2,3] -> [1,1,2,2,3,3];
[0,1,2] -> [0,0,1,1,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0180 true

[2,3,0] -> [2,2,3,3,0,0];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0181 true

[0,1,1] -> [0,0,1,1,1,1];
[1] -> [1,1];
[1,1,1] -> [1,1,1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0160 true

[2,0] -> [2,2,0,0];
[0,2,2] -> [0,0,2,2,2,2];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0165 true

[2,2,3] -> [2,2,2,2,3,3];
[2,3,2] -> [2,2,3,3,2,2];
[1,1] -> [1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0231 true

[0] -> [0,0];
[1,0] -> [1,1,0,0];
[3,0,3] -> [3,3,0,0,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0158 true

[1,0] -> [1,1,0,0];
[2,1,1] -> [2,2,1,1,1,1];
[3,1,2] -> [3,3,1,1,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0181 true

[3,2] -> [3,3,2,2];
[2,3,3] -> [2,2,3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0174 true

[1,3] -> [1,1,3,3];
[3,3,2] -> [3,3,3,3,2,2];
[1,3,2] -> [1,1,3,3,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0211 true

[1] -> [1,1];
[2,3] -> [2,2,3,3];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0132 true

[1,2] -> [1,1,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[2,1,1] -> [2,2,1,1,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0294 true

[0,0,2] -> [0,0,0,0,2,2];
[3] -> [3,3];
[3,1,2] -> [3,3,1,1,2,2];
[2,0,3] -> [2,2,0,0,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0289 true

[1,1,2] -> [1,1,1,1,2,2];
[1,3,1] -> [1,1,3,3,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0253 true

[3] -> [3,3];
[3,3,2] -> [3,3,3,3,2,2];
[2] -> [2,2];
[3,1,3] -> [3,3,1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0241 true

[0,3] -> [0,0,3,3];
[1,2] -> [1,1,2,2];
[0,0] -> [0,0,0,0];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0201 true

[0,0,3] -> [0,0,0,0,3,3];
[0,3] -> [0,0,3,3];
[3] -> [3,3];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0177 true

[0,2,3] -> [0,0,2,2,3,3];
[0,3] -> [0,0,3,3];
[2] -> [2,2];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0194 true

[3,3] -> [3,3,3,3];
[3] -> [3,3];
[3,0,3] -> [3,3,0,0,3,3];
[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0219 true

[2] -> [2,2];
[3,1] -> [3,3,1,1];
[2,3] -> [2,2,3,3];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0206 true

[3,3] -> [3,3,3,3];
[2,0,2] -> [2,2,0,0,2,2];
[3,1,2] -> [3,3,1,1,2,2];
[1,2,2] -> [1,1,2,2,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0333 true

[0,3,0] -> [0,0,3,3,0,0];
[2,1,2] -> [2,2,1,1,2,2];
[3,0,0] -> [3,3,0,0,0,0];
[3,2] -> [3,3,2,2];
[2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0388 true

[1,1] -> [1,1,1,1];
[0] -> [0,0];
[0,1,0] -> [0,0,1,1,0,0];
[2] -> [2,2];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0278 true

[1,0,2] -> [1,1,0,0,2,2];
[0] -> [0,0];
[0,3] -> [0,0,3,3];
[1,2] -> [1,1,2,2];
[2,0,2] -> [2,2,0,0,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0288 true

[3] -> [3,3];
[1,3] -> [1,1,3,3];
[3,2,1] -> [3,3,2,2,1,1];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0261 true

[2,3,1] -> [2,2,3,3,1,1];
[2,0] -> [2,2,0,0];
[0] -> [0,0];
[3,3,0] -> [3,3,3,3,0,0];
[1,3,2] -> [1,1,3,3,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0372 true

[1,1,2] -> [1,1,1,1,2,2];
[3,1,0] -> [3,3,1,1,0,0];
[3,0] -> [3,3,0,0];
[3,0,0] -> [3,3,0,0,0,0];
[0,1,0] -> [0,0,1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0392 true

[2,2] -> [2,2,2,2];
[0,1,3] -> [0,0,1,1,3,3];
[0,2,2] -> [0,0,2,2,2,2];
[0,0,3] -> [0,0,0,0,3,3];
[2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0334 true

[1,3,0] -> [1,1,3,3,0,0];
[2] -> [2,2];
[1] -> [1,1];
[0] -> [0,0];
[3,3,2] -> [3,3,3,3,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0319 true

[3] -> [3,3];
[0,3,2] -> [0,0,3,3,2,2];
[0] -> [0,0];
[3,0,2] -> [3,3,0,0,2,2];
[3,3] -> [3,3,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0354 true

[0,1] -> [0,0,1,1];
[0,3] -> [0,0,3,3];
[0,1,1] -> [0,0,1,1,1,1];
[0,3,0] -> [0,0,3,3,0,0];
[0,1,0] -> [0,0,1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0316 true

[3] -> [3,3];
[2,1] -> [2,2,1,1];
[1] -> [1,1];
[2] -> [2,2];
[2,1,0] -> [2,2,1,1,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0364 true

[1] -> [1,1];
[3] -> [3,3];
[0,1] -> [0,0,1,1];
[2,1,3] -> [2,2,1,1,3,3];
[2] -> [2,2];
[0,3,0] -> [0,0,3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0355 true

[3,2] -> [3,3,2,2];
[3] -> [3,3];
[0] -> [0,0];
[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0307 true

[2,3,0] -> [2,2,3,3,0,0];
[2] -> [2,2];
[0,3] -> [0,0,3,3];
[0] -> [0,0];
[3,2] -> [3,3,2,2];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0370 true

[2,3] -> [2,2,3,3];
[0] -> [0,0];
[2,0] -> [2,2,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[3,3,0] -> [3,3,3,3,0,0];
[2,2,2] -> [2,2,2,2,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0466 true

[2,3] -> [2,2,3,3];
[0,1] -> [0,0,1,1];
[0] -> [0,0];
[1,3,3] -> [1,1,3,3,3,3];
[0,3] -> [0,0,3,3];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0379 true

[3] -> [3,3];
[3,3] -> [3,3,3,3];
[3,1,1] -> [3,3,1,1,1,1];
[2] -> [2,2];
[1,3] -> [1,1,3,3];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0409 true

[3,1,1] -> [3,3,1,1,1,1];
[3,1] -> [3,3,1,1];
[2] -> [2,2];
[1] -> [1,1];
[0] -> [0,0];
[3,0,2] -> [3,3,0,0,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0353 true

[1,0,3] -> [1,1,0,0,3,3];
[3] -> [3,3];
[2,0,3] -> [2,2,0,0,3,3];
[1] -> [1,1];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0359 true

[3,2,2] -> [3,3,2,2,2,2];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[1,2] -> [1,1,2,2];
[1] -> [1,1];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0352 true

[1,3,3] -> [1,1,3,3,3,3];
[0,2] -> [0,0,2,2];
[1,3,2] -> [1,1,3,3,2,2];
[2,1] -> [2,2,1,1];
[0,3,3] -> [0,0,3,3,3,3];
[1] -> [1,1];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0567 true

[0,0,1] -> [0,0,0,0,1,1];
[2] -> [2,2];
[3,2,0] -> [3,3,2,2,0,0];
[3] -> [3,3];
[1,3] -> [1,1,3,3];
[2,0] -> [2,2,0,0];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0476 true

[1,1,2] -> [1,1,1,1,2,2];
[3,1] -> [3,3,1,1];
[2,3,3] -> [2,2,3,3,3,3];
[1] -> [1,1];
[2,1] -> [2,2,1,1];
[2] -> [2,2];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0516 true

[2,0,1] -> [2,2,0,0,1,1];
[2,0,3] -> [2,2,0,0,3,3];
[2,2] -> [2,2,2,2];
[3,3,1] -> [3,3,3,3,1,1];
[0,1] -> [0,0,1,1];
[0,1,2] -> [0,0,1,1,2,2];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0694 true

[3] -> [3,3];
[3,3] -> [3,3,3,3];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[0] -> [0,0];
[2,0,0] -> [2,2,0,0,0,0];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0451 true

[3,0,3] -> [3,3,0,0,3,3];
[1,1] -> [1,1,1,1];
[2,0,1] -> [2,2,0,0,1,1];
[3,0] -> [3,3,0,0];
[0] -> [0,0];
[2,2] -> [2,2,2,2];
[2,3] -> [2,2,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0600 true

[2,1] -> [2,2,1,1];
[2] -> [2,2];
[2,3] -> [2,2,3,3];
[3] -> [3,3];
[1,1] -> [1,1,1,1];
[1,3,3] -> [1,1,3,3,3,3];
[3,1,3] -> [3,3,1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0566 true

[2] -> [2,2];
[0,0,1] -> [0,0,0,0,1,1];
[1] -> [1,1];
[3,1,1] -> [3,3,1,1,1,1];
[3,0] -> [3,3,0,0];
[3,2,1] -> [3,3,2,2,1,1];
[2,2] -> [2,2,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0584 true

[3,1] -> [3,3,1,1];
[3,0,2] -> [3,3,0,0,2,2];
[1,1] -> [1,1,1,1];
[3,1,2] -> [3,3,1,1,2,2];
[1,1,1] -> [1,1,1,1,1,1];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0547 true

[3,1,1] -> [3,3,1,1,1,1];
[0] -> [0,0];
[1] -> [1,1];
[1,1,3] -> [1,1,1,1,3,3];
[2,1,0] -> [2,2,1,1,0,0];
[0,1] -> [0,0,1,1];
[3,0] -> [3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0538 true

[0] -> [0,0];
[0,2,1] -> [0,0,2,2,1,1];
[1,2] -> [1,1,2,2];
[1,1] -> [1,1,1,1];
[3] -> [3,3];
[2] -> [2,2];
[1,3,0] -> [1,1,3,3,0,0];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0556 true

[0,3,3] -> [0,0,3,3,3,3];
[2,1] -> [2,2,1,1];
[0,1] -> [0,0,1,1];
[0] -> [0,0];
[3] -> [3,3];
[2] -> [2,2];
[1,2] -> [1,1,2,2];
[3,3,1] -> [3,3,3,3,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0622 true

[0] -> [0,0];
[2] -> [2,2];
[2,0] -> [2,2,0,0];
[3,3,3] -> [3,3,3,3,3,3];
[0,0,3] -> [0,0,0,0,3,3];
[2,3] -> [2,2,3,3];
[1,1,2] -> [1,1,1,1,2,2];
[1,1,1] -> [1,1,1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0778 true

[1,0] -> [1,1,0,0];
[0] -> [0,0];
[2] -> [2,2];
[2,3] -> [2,2,3,3];
[3] -> [3,3];
[1] -> [1,1];
[0,0,2] -> [0,0,0,0,2,2];
[1,0,1] -> [1,1,0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0547 true

[2] -> [2,2];
[1,2,2] -> [1,1,2,2,2,2];
[1,3] -> [1,1,3,3];
[1,2] -> [1,1,2,2];
[3,0,3] -> [3,3,0,0,3,3];
[1,1] -> [1,1,1,1];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0740 true

[1] -> [1,1];
[3,2,2] -> [3,3,2,2,2,2];
[0] -> [0,0];
[2,0,1] -> [2,2,0,0,1,1];
[2,1] -> [2,2,1,1];
[3,2,0] -> [3,3,2,2,0,0];
[2,1,1] -> [2,2,1,1,1,1];
[0,1] -> [0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0698 true

[2,2] -> [2,2,2,2];
[3] -> [3,3];
[1,2,0] -> [1,1,2,2,0,0];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[1] -> [1,1];
[0] -> [0,0];
[0,0] -> [0,0,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0694 true

[2,3,3] -> [2,2,3,3,3,3];
[3,1] -> [3,3,1,1];
[2,1] -> [2,2,1,1];
[1] -> [1,1];
[3,3] -> [3,3,3,3];
[0,1] -> [0,0,1,1];
[3,2] -> [3,3,2,2];
[3,2,1] -> [3,3,2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0773 true

[1] -> [1,1];
[2,2] -> [2,2,2,2];
[2,2,0] -> [2,2,2,2,0,0];
[3,0,1] -> [3,3,0,0,1,1];
[0,3,1] -> [0,0,3,3,1,1];
[3] -> [3,3];
[0] -> [0,0];
[0,3,3] -> [0,0,3,3,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0664 true

[2,3,2] -> [2,2,3,3,2,2];
[3,2] -> [3,3,2,2];
[0,3] -> [0,0,3,3];
[0,0] -> [0,0,0,0];
[3,0] -> [3,3,0,0];
[1] -> [1,1];
[3,1] -> [3,3,1,1];
[1,2,3] -> [1,1,2,2,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0661 true

[2,0] -> [2,2,0,0];
[1,0,0] -> [1,1,0,0,0,0];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[1,1,1] -> [1,1,1,1,1,1];
[1,0] -> [1,1,0,0];
[1,1] -> [1,1,1,1];
[2,3,0] -> [2,2,3,3,0,0];
[2,0,1] -> [2,2,0,0,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0873 true

[3,2] -> [3,3,2,2];
[0,1,1] -> [0,0,1,1,1,1];
[0] -> [0,0];
[0,2,2] -> [0,0,2,2,2,2];
[0,2] -> [0,0,2,2];
[1,3] -> [1,1,3,3];
[1,0] -> [1,1,0,0];
[2,0,2] -> [2,2,0,0,2,2];
[3,2,2] -> [3,3,2,2,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0815 true

[0,0,0] -> [0,0,0,0,0,0];
[2,2,0] -> [2,2,2,2,0,0];
[0] -> [0,0];
[2,3] -> [2,2,3,3];
[3,3] -> [3,3,3,3];
[3,1,1] -> [3,3,1,1,1,1];
[3,2,1] -> [3,3,2,2,1,1];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.1085 true

[3,2] -> [3,3,2,2];
[2,1] -> [2,2,1,1];
[1,0,2] -> [1,1,0,0,2,2];
[3] -> [3,3];
[1,2,2] -> [1,1,2,2,2,2];
[2,3,1] -> [2,2,3,3,1,1];
[1,1] -> [1,1,1,1];
[2] -> [2,2];
[0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0783 true

[2,0,1] -> [2,2,0,0,1,1];
[0,3] -> [0,0,3,3];
[0,1] -> [0,0,1,1];
[3,3] -> [3,3,3,3];
[1,2,2] -> [1,1,2,2,2,2];
[0,2,2] -> [0,0,2,2,2,2];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[2,1,1] -> [2,2,1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0876 true

[2,2,3] -> [2,2,2,2,3,3];
[2] -> [2,2];
[3,1] -> [3,3,1,1];
[2,1,0] -> [2,2,1,1,0,0];
[3,1,0] -> [3,3,1,1,0,0];
[0,2] -> [0,0,2,2];
[3] -> [3,3];
[0,3] -> [0,0,3,3];
[1,3,2] -> [1,1,3,3,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0837 true

[1,0,2] -> [1,1,0,0,2,2];
[3] -> [3,3];
[2] -> [2,2];
[2,3] -> [2,2,3,3];
[3,3,3] -> [3,3,3,3,3,3];
[1] -> [1,1];
[1,3,0] -> [1,1,3,3,0,0];
[1,2] -> [1,1,2,2];
[0,3] -> [0,0,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0829 true

[2] -> [2,2];
[1] -> [1,1];
[2,0] -> [2,2,0,0];
[3,2,1] -> [3,3,2,2,1,1];
[3,1] -> [3,3,1,1];
[2,2] -> [2,2,2,2];
[0] -> [0,0];
[1,2] -> [1,1,2,2];
[2,2,1] -> [2,2,2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0857 true

[0,3] -> [0,0,3,3];
[2] -> [2,2];
[2,1] -> [2,2,1,1];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[3,3,3] -> [3,3,3,3,3,3];
[0] -> [0,0];
[1,0] -> [1,1,0,0];
[0,0,2] -> [0,0,0,0,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0741 true

[2] -> [2,2];
[3,1,2] -> [3,3,1,1,2,2];
[2,0,1] -> [2,2,0,0,1,1];
[3] -> [3,3];
[0,2] -> [0,0,2,2];
[2,2] -> [2,2,2,2];
[1] -> [1,1];
[0] -> [0,0];
[3,1,3] -> [3,3,1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0719 true

[0] -> [0,0];
[2] -> [2,2];
[1] -> [1,1];
[3,1,1] -> [3,3,1,1,1,1];
[2,2,2] -> [2,2,2,2,2,2];
[3,2,1] -> [3,3,2,2,1,1];
[1,3] -> [1,1,3,3];
[3] -> [3,3];
[3,3] -> [3,3,3,3];
[1,0] -> [1,1,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0998 true

[0,3] -> [0,0,3,3];
[2] -> [2,2];
[3,2] -> [3,3,2,2];
[0] -> [0,0];
[2,3] -> [2,2,3,3];
[2,2,2] -> [2,2,2,2,2,2];
[3] -> [3,3];
[2,3,2] -> [2,2,3,3,2,2];
[3,1] -> [3,3,1,1];
[2,1] -> [2,2,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0957 true

[2] -> [2,2];
[0,3,0] -> [0,0,3,3,0,0];
[0] -> [0,0];
[0,2,1] -> [0,0,2,2,1,1];
[0,3,3] -> [0,0,3,3,3,3];
[2,2] -> [2,2,2,2];
[3,3] -> [3,3,3,3];
[1,2] -> [1,1,2,2];
[3] -> [3,3];
[3,1] -> [3,3,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0985 true

[0] -> [0,0];
[1,1,0] -> [1,1,1,1,0,0];
[2] -> [2,2];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[0,1,1] -> [0,0,1,1,1,1];
[0,2,3] -> [0,0,2,2,3,3];
[0,1] -> [0,0,1,1];
[0,3] -> [0,0,3,3];
[3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0759 true

[2] -> [2,2];
[1,1,1] -> [1,1,1,1,1,1];
[2,2] -> [2,2,2,2];
[1,1] -> [1,1,1,1];
[1,0,3] -> [1,1,0,0,3,3];
[3,2] -> [3,3,2,2];
[3,1,3] -> [3,3,1,1,3,3];
[1,3] -> [1,1,3,3];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.1092 true

[1,2,0] -> [1,1,2,2,0,0];
[3] -> [3,3];
[1] -> [1,1];
[1,2] -> [1,1,2,2];
[0,0,0] -> [0,0,0,0,0,0];
[0,2] -> [0,0,2,2];
[1,0,2] -> [1,1,0,0,2,2];
[3,1,0] -> [3,3,1,1,0,0];
[0] -> [0,0];
[2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0808 true

[0,2] -> [0,0,2,2];
[2,1] -> [2,2,1,1];
[2,3] -> [2,2,3,3];
[2] -> [2,2];
[1] -> [1,1];
[0] -> [0,0];
[3,3,1] -> [3,3,3,3,1,1];
[1,0,2] -> [1,1,0,0,2,2];
[2,1,2] -> [2,2,1,1,2,2];
[0,3,0] -> [0,0,3,3,0,0];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0966 true

[3] -> [3,3];
[3,3] -> [3,3,3,3];
[1] -> [1,1];
[0,0] -> [0,0,0,0];
[0] -> [0,0];
[3,3,0] -> [3,3,3,3,0,0];
[2,3,3] -> [2,2,3,3,3,3];
[1,0] -> [1,1,0,0];
[3,2] -> [3,3,2,2];
[0,1,1] -> [0,0,1,1,1,1];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.1109 true

[1,0,0] -> [1,1,0,0,0,0];
[0] -> [0,0];
[2,1] -> [2,2,1,1];
[2,0] -> [2,2,0,0];
[3,0] -> [3,3,0,0];
[1,1,1] -> [1,1,1,1,1,1];
[0,0] -> [0,0,0,0];
[1] -> [1,1];
[2,2] -> [2,2,2,2];
[1,3] -> [1,1,3,3];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.0942 true

[3,1] -> [3,3,1,1];
[3,0,3] -> [3,3,0,0,3,3];
[3] -> [3,3];
[3,2,3] -> [3,3,2,2,3,3];
[0] -> [0,0];
[0,2] -> [0,0,2,2];
[3,3] -> [3,3,3,3];
[2,0,0] -> [2,2,0,0,0,0];
[2,0] -> [2,2,0,0];
[1,2] -> [1,1,2,2];
[] -> [];

=================================
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))

0.1192 true

