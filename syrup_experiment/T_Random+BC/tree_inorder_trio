Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0200 false
Time(s): 0.05 
Mem(Kb): 16348

Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [2,0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0297 false
Time(s): 0.06 
Mem(Kb): 17012

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [3,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0441 true
Time(s): 0.09 
Mem(Kb): 17440

Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0675 true
Time(s): 0.11 
Mem(Kb): 17604

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0542 true
Time(s): 0.09 
Mem(Kb): 17280

Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [3,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1119 true
Time(s): 0.15 
Mem(Kb): 18072

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [1,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0688 false
Time(s): 0.10 
Mem(Kb): 17584

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0353 false
Time(s): 0.06 
Mem(Kb): 16648

Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [3,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0601 false
Time(s): 0.09 
Mem(Kb): 18040

Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0307 false
Time(s): 0.06 
Mem(Kb): 17064

Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Cons (0, Nil))

0.0368 false
Time(s): 0.07 
Mem(Kb): 17228

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [3,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0364 true
Time(s): 0.07 
Mem(Kb): 17296

Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0689 false
Time(s): 0.10 
Mem(Kb): 17804

Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1056 true
Time(s): 0.14 
Mem(Kb): 17552

Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0547 true
Time(s): 0.08 
Mem(Kb): 17584

Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0094 false
Time(s): 0.04 
Mem(Kb): 16240

Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0150 false
Time(s): 0.04 
Mem(Kb): 16396

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Cons (0, Nil))

0.0357 false
Time(s): 0.06 
Mem(Kb): 17472

Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0432 false
Time(s): 0.07 
Mem(Kb): 17436

Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0469 false
Time(s): 0.07 
Mem(Kb): 17684

Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [1,0,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [0,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0992 true
Time(s): 0.13 
Mem(Kb): 19660

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [1,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1998 true
Time(s): 0.25 
Mem(Kb): 20648

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [1,1,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [0,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1433 true
Time(s): 0.18 
Mem(Kb): 23440

Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1717 true
Time(s): 0.21 
Mem(Kb): 19700

Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),3,Leaf ()) -> [1,0,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1958 true
Time(s): 0.24 
Mem(Kb): 22056

Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1278 true
Time(s): 0.16 
Mem(Kb): 20388

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [3,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2547 true
Time(s): 0.30 
Mem(Kb): 21160

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [0,1,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1714 true
Time(s): 0.22 
Mem(Kb): 20740

Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [1,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0899 false
Time(s): 0.12 
Mem(Kb): 18964

Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),2,Leaf ()) -> [1,1,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [3,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2708 true
Time(s): 0.32 
Mem(Kb): 22712

Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,0,2];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),0,Leaf ()) -> [1,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2865 true
Time(s): 0.33 
Mem(Kb): 21144

Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [1,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.4634 true
Time(s): 0.51 
Mem(Kb): 24008

Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.3475 true
Time(s): 0.41 
Mem(Kb): 21764

Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.6157 true
Time(s): 0.65 
Mem(Kb): 24708

Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [0,0,3];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.3312 true
Time(s): 0.39 
Mem(Kb): 21096

Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1208 true
Time(s): 0.17 
Mem(Kb): 19688

Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [2,0,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [0,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.6034 true
Time(s): 0.65 
Mem(Kb): 23016

Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [1,2,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.5185 true
Time(s): 0.55 
Mem(Kb): 23092

Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [2,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2365 false
Time(s): 0.27 
Mem(Kb): 20404

Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),1,Leaf ()) -> [2,2,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.3111 true
Time(s): 1.35 
Mem(Kb): 25512

Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [3,2,1];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.6975 true
Time(s): 0.74 
Mem(Kb): 23056

Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [2,0,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [3,2,1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [2,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.1884 true
Time(s): 1.23 
Mem(Kb): 25488

Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [3,1,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.0838 true
Time(s): 1.13 
Mem(Kb): 25060

Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [1,3,2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [1,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.7924 true
Time(s): 0.83 
Mem(Kb): 25576

Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [1,2,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.7876 true
Time(s): 0.85 
Mem(Kb): 23388

Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.1600 true
Time(s): 1.23 
Mem(Kb): 28084

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.0798 true
Time(s): 1.12 
Mem(Kb): 23084

Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [3,1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [1,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.1322 true
Time(s): 1.21 
Mem(Kb): 22800

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [1,3,0];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.9787 true
Time(s): 1.05 
Mem(Kb): 23888

Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [1,3,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.9465 true
Time(s): 1.02 
Mem(Kb): 22580

Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,3,0];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [1,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.4016 true
Time(s): 1.44 
Mem(Kb): 26340

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [1,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.8239 true
Time(s): 0.87 
Mem(Kb): 22048

Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [1,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

2.1252 true
Time(s): 2.17 
Mem(Kb): 26228

Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> [3,2,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [0,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

1.8804 true
Time(s): 1.98 
Mem(Kb): 22608

Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),2,Leaf ()) -> [0,2,2];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [1,3,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [3,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.0250 true
Time(s): 3.10 
Mem(Kb): 27412

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [3,1,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,0,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.8554 true
Time(s): 3.93 
Mem(Kb): 26804

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [1,1,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

2.6035 true
Time(s): 2.66 
Mem(Kb): 26192

Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,1,3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [0,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

2.3329 true
Time(s): 2.45 
Mem(Kb): 25756

Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [1,3,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [1,3,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [2,2,3];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.1486 true
Time(s): 5.37 
Mem(Kb): 24448

Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [1,2,1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [2,1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.0235 true
Time(s): 3.16 
Mem(Kb): 23036

Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [0,3,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [0,0,2];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [3,2,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.7326 true
Time(s): 3.79 
Mem(Kb): 27072

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [1,3,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.3686 true
Time(s): 3.48 
Mem(Kb): 25396

Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [1,3,0];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [3,1,2];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [1,1,2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [3,1,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

4.0002 true
Time(s): 4.07 
Mem(Kb): 29756

Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [1,1,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [1,0,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [3,2,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [2,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.4863 true
Time(s): 3.60 
Mem(Kb): 26312

Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.3613 true
Time(s): 3.52 
Mem(Kb): 23040

Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [1,0,0];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,1,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [2,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.8897 true
Time(s): 3.99 
Mem(Kb): 29996

Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.9400 true
Time(s): 4.00 
Mem(Kb): 24452

Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [1,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [3,0,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.9313 true
Time(s): 4.00 
Mem(Kb): 25988

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

3.9906 true
Time(s): 4.14 
Mem(Kb): 23744

Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [1,2,3];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [3,1,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

4.5493 true
Time(s): 4.61 
Mem(Kb): 21340

Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [3,1,3];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [0,2,1];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [2,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.0121 true
Time(s): 5.07 
Mem(Kb): 25952

Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),0,Leaf ()) -> [3,3,0];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.2867 true
Time(s): 5.59 
Mem(Kb): 23056

Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> [3,2,1];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [1,2,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.6574 true
Time(s): 5.72 
Mem(Kb): 25592

Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [0,1,0];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [0,2,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [0,2,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,3,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [2,2,0];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [1,3,1];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [0,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

6.0671 true
Time(s): 6.16 
Mem(Kb): 27940

Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [1,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [2,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),2,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

6.7305 true
Time(s): 6.91 
Mem(Kb): 21700

Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [3,2,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [2,1,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [2,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.6713 true
Time(s): 6.10 
Mem(Kb): 27316

Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [1,2,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [2,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

6.6846 true
Time(s): 6.75 
Mem(Kb): 28020

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [0,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.1662 true
Time(s): 5.32 
Mem(Kb): 25196

Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [0,0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.1531 true
Time(s): 5.28 
Mem(Kb): 26532

Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [0,1];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

5.4575 true
Time(s): 5.53 
Mem(Kb): 24244

