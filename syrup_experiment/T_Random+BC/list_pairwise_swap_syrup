[1,0,3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0004 false

[0,2] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      ( Succ ( Succ hd1 )
        )
      ( Cons hd1 ( Nil )
        ) )
  
0.0014 false

[3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[2,2] -> [2,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0014 false

[0,2,2] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0004 false

[1] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[3,1,0] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0004 false

[2] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[0,3,1] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0004 false

[1] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[2] -> [];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[2,1] -> [1,2];
[0,0,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0624 false

[3,1] -> [1,3];
[1,3,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0582 false

[2] -> [];
[1,1] -> [1,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        ( False )
    then tl1 else x0
  
0.0276 false

[3,0,2] -> [];
[0,2] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0296 false

[3] -> [];
[1,2,3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0005 false

[0] -> [];
[0,2,3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0012 false

[0,2] -> [2,0];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        ( False )
    then tl1
      else
        ( Cons
          ( Succ
            ( Succ hd1 )
            )
          ( Cons hd1
            ( Nil ) ) )
  
0.0271 false

[1] -> [];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0003 false

[3] -> [];
[2,2,3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0004 false

[1,0,2] -> [];
[3] -> [];
[0,3] -> [3,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0497 false

[3,2,2] -> [];
[2] -> [];
[3,3,2] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0015 false

[3] -> [];
[0,1] -> [1,0];
[1,0,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.0861 false

[0] -> [];
[2,3,2] -> [];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0013 false

[3] -> [];
[2,1] -> [1,2];
[0,2,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0919 false

[3,3] -> [3,3];
[3,1,3] -> [];
[0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then x0
        else (f0 tl1)
    
  
0.1025 false

[2,1,1] -> [];
[2,3,2] -> [];
[2] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0014 false

[1,1,2] -> [];
[0] -> [];
[3,1,2] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0015 false

[1,2,1] -> [];
[3,3,2] -> [];
[0,2] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.2181 false

[2,0] -> [0,2];
[2,1,1] -> [];
[2,3,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.2950 false

[3,3,3] -> [];
[2,1] -> [1,2];
[1,1] -> [1,1];
[0,1,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.5983 false

[3,3,1] -> [];
[1,3] -> [3,1];
[3] -> [];
[1,0] -> [0,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.1121 false

[1] -> [];
[0,2] -> [2,0];
[3] -> [];
[0,3] -> [3,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2 tl1 )
        )
    
  
0.0410 false

[0] -> [];
[2,1,2] -> [];
[3,2,1] -> [];
[0,3,0] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0021 false

[3] -> [];
[1,0,0] -> [];
[0,2] -> [2,0];
[2,2] -> [2,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.2382 false

[1,0,2] -> [];
[3] -> [];
[0,1] -> [1,0];
[2,2,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.6115 false

[2,1] -> [1,2];
[1] -> [];
[0,1] -> [1,0];
[1,1,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.0450 false

[1,3,1] -> [];
[0,0,1] -> [];
[0] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then x0
        else ( Nil )
    
  
0.5818 false

[0,1,1] -> [];
[2] -> [];
[1,2,2] -> [];
[3,3,1] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0023 false

[3,0] -> [0,3];
[0,2,1] -> [];
[2,2] -> [2,2];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.3393 false

[3] -> [];
[3,1,3] -> [];
[2] -> [];
[0,1] -> [1,0];
[3,1,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.5547 false

[1,0,2] -> [];
[1,2] -> [2,1];
[0,1] -> [1,0];
[2,3] -> [3,2];
[1,1] -> [1,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
2.8810 false

[2,3,1] -> [];
[1,3,3] -> [];
[1] -> [];
[0,2] -> [2,0];
[2,1] -> [1,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.3996 false

[0,3] -> [3,0];
[3,0,3] -> [];
[1,2] -> [2,1];
[0,1] -> [1,0];
[2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.1683 false

[3] -> [];
[0] -> [];
[3,0,3] -> [];
[2] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.0834 false

[0,2] -> [2,0];
[0,1] -> [1,0];
[1] -> [];
[2,0,2] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.1113 false

[2,2] -> [2,2];
[3,0,1] -> [];
[1,0] -> [0,1];
[1,1] -> [1,1];
[1,1,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
1.7037 false

[0] -> [];
[1] -> [];
[3] -> [];
[3,0,2] -> [];
[1,0,1] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0018 false

[2,1,2] -> [];
[2,1] -> [1,2];
[0,1] -> [1,0];
[2,3,0] -> [];
[3,0] -> [0,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.6782 false

[0,3] -> [3,0];
[1] -> [];
[0,2] -> [2,0];
[2] -> [];
[1,1,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.1249 false

[3,3] -> [3,3];
[0] -> [];
[0,1,0] -> [];
[2,3,0] -> [];
[3] -> [];
[0,3,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then x0
        else (f0 tl1)
    
  
0.9443 false

[1,1] -> [1,1];
[2] -> [];
[1,2] -> [2,1];
[3,0] -> [0,3];
[0,1] -> [1,0];
[1,0] -> [0,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2 tl1 )
        )
    
  
0.8590 false

[2] -> [];
[0] -> [];
[1] -> [];
[2,3] -> [3,2];
[0,0] -> [0,0];
[1,3,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.3286 false

[2,1] -> [1,2];
[2,0] -> [0,2];
[1] -> [];
[1,0,2] -> [];
[0,2,2] -> [];
[2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.4112 false

[3,3,0] -> [];
[0] -> [];
[1] -> [];
[1,0] -> [0,1];
[3,2,2] -> [];
[1,2] -> [2,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.6083 false

[2] -> [];
[1] -> [];
[3,0,0] -> [];
[1,3,0] -> [];
[0,3,3] -> [];
[3,1,0] -> [];
[] -> [];

=================================
fix f0.fun x0. ( Nil )
0.0038 false

[1] -> [];
[0,0] -> [0,0];
[2,3] -> [3,2];
[2] -> [];
[2,2] -> [2,2];
[1,1] -> [1,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2 tl1 )
        )
    
  
0.5507 false

[0] -> [];
[3,2] -> [2,3];
[3,2,2] -> [];
[2,3] -> [3,2];
[1] -> [];
[3,3,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
2.4101 false

[2,0] -> [0,2];
[0,1] -> [1,0];
[0,3,2] -> [];
[1] -> [];
[3,2] -> [2,3];
[3,1,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.6412 false

[0] -> [];
[2,0,2] -> [];
[1,0] -> [0,1];
[1,2,3] -> [];
[1] -> [];
[3,0] -> [0,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.5227 false

[1,1,2] -> [];
[3,0,2] -> [];
[0,2] -> [2,0];
[0,1] -> [1,0];
[3] -> [];
[2,2,2] -> [];
[3,3,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
26.5557 false

[2,0,2] -> [];
[0,3,1] -> [];
[1,3,3] -> [];
[2,3] -> [3,2];
[3,3] -> [3,3];
[0] -> [];
[2,0,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
24.0106 false

[0] -> [];
[1] -> [];
[3,3] -> [3,3];
[0,1,1] -> [];
[0,3] -> [3,0];
[3,2,3] -> [];
[1,3] -> [3,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
1.5199 false

[2] -> [];
[0] -> [];
[1,0] -> [0,1];
[0,1,1] -> [];
[2,3] -> [3,2];
[3,1,2] -> [];
[2,2] -> [2,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.9437 false

[1,2] -> [2,1];
[3,3,3] -> [];
[2,3,1] -> [];
[2] -> [];
[0] -> [];
[1] -> [];
[3,0] -> [0,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.4921 false

[0] -> [];
[1] -> [];
[2,2,2] -> [];
[1,2] -> [2,1];
[1,0] -> [0,1];
[3] -> [];
[2,1] -> [1,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
0.3344 false

[1] -> [];
[1,3,1] -> [];
[3,2] -> [2,3];
[3] -> [];
[2,0,0] -> [];
[0] -> [];
[3,3,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
1.7283 false

[1] -> [];
[3,2,3] -> [];
[1,1] -> [1,1];
[0] -> [];
[2] -> [];
[0,0,3] -> [];
[1,0,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then x0
        else ( Nil )
    
  
6.5248 false

[3,3] -> [3,3];
[3,2] -> [2,3];
[3] -> [];
[0] -> [];
[0,2,0] -> [];
[0,0] -> [0,0];
[2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.1852 false

[2,2,3] -> [];
[1,0] -> [0,1];
[0,3,2] -> [];
[2] -> [];
[3,2] -> [2,3];
[0] -> [];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.1459 false

[3,3] -> [3,3];
[3,1] -> [1,3];
[1,0,0] -> [];
[3] -> [];
[2,2,0] -> [];
[1] -> [];
[2,1,0] -> [];
[0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
1.2272 false

[2,3,3] -> [];
[2,3,1] -> [];
[0,3,2] -> [];
[0] -> [];
[2,2] -> [2,2];
[3] -> [];
[1,2,2] -> [];
[2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then x0
        else (f0 tl1)
    
  
3.7036 false

[3,1] -> [1,3];
[0,1] -> [1,0];
[2,3] -> [3,2];
[2] -> [];
[1] -> [];
[3] -> [];
[2,2] -> [2,2];
[2,0,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.2116 false

[1] -> [];
[2] -> [];
[3] -> [];
[3,1] -> [1,3];
[0,1] -> [1,0];
[2,2,0] -> [];
[2,0,2] -> [];
[1,0,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
1.9014 false

[2,2,2] -> [];
[2,2,3] -> [];
[3,0,3] -> [];
[2] -> [];
[1,2] -> [2,1];
[0] -> [];
[1,2,0] -> [];
[3,1,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
56.0698 false

[3] -> [];
[1,1,1] -> [];
[1,3,3] -> [];
[2] -> [];
[1,2,3] -> [];
[3,1] -> [1,3];
[0,3,3] -> [];
[0,2,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
37.9134 false

[2] -> [];
[3,2,3] -> [];
[3,0,0] -> [];
[2,2] -> [2,2];
[2,1] -> [1,2];
[2,3] -> [3,2];
[1,0,0] -> [];
[3,0,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
36.2033 false

[2] -> [];
[1,0] -> [0,1];
[1,3,1] -> [];
[2,0,2] -> [];
[0] -> [];
[2,3] -> [3,2];
[3,2,3] -> [];
[3,0,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
6.9235 false

[3] -> [];
[1] -> [];
[3,2,1] -> [];
[1,1,2] -> [];
[0,3,2] -> [];
[2,1] -> [1,2];
[2] -> [];
[2,0] -> [0,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
1.3979 false

[0,3] -> [3,0];
[2,0,2] -> [];
[3,0] -> [0,3];
[2,1,0] -> [];
[3] -> [];
[0,2,3] -> [];
[2] -> [];
[0,0,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
16.3070 false

[2,0] -> [0,2];
[3,3] -> [3,3];
[2,3,2] -> [];
[1] -> [];
[3,2,3] -> [];
[0,0,3] -> [];
[2,2] -> [2,2];
[2] -> [];
[2,3] -> [3,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
12.9990 false

[1,1] -> [1,1];
[0,2,1] -> [];
[2,0] -> [0,2];
[1,3,1] -> [];
[2] -> [];
[0] -> [];
[1,3,3] -> [];
[1] -> [];
[0,1] -> [1,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
2.4672 false

[2] -> [];
[1,0,0] -> [];
[3,0] -> [0,3];
[1,2] -> [2,1];
[2,0,0] -> [];
[0] -> [];
[1,0,2] -> [];
[0,0,1] -> [];
[1,2,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
17.5363 false

[3] -> [];
[3,0,2] -> [];
[3,1,2] -> [];
[3,0] -> [0,3];
[1,2,1] -> [];
[0,1] -> [1,0];
[1,1,3] -> [];
[0,0] -> [0,0];
[1,0] -> [0,1];
[] -> [];

=================================
None
[3,1] -> [1,3];
[0] -> [];
[2,1,0] -> [];
[3,0] -> [0,3];
[2,2,3] -> [];
[1,0,2] -> [];
[1] -> [];
[3] -> [];
[2,1] -> [1,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
2.5983 false

[1,3,3] -> [];
[1] -> [];
[2,1,0] -> [];
[0] -> [];
[2] -> [];
[3,2,0] -> [];
[2,0,3] -> [];
[0,2] -> [2,0];
[3,0,3] -> [];
[] -> [];

=================================
None
[2,1,0] -> [];
[1,3] -> [3,1];
[1] -> [];
[3,3] -> [3,3];
[3] -> [];
[2,3,0] -> [];
[0] -> [];
[2,2,3] -> [];
[1,0,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
5.0231 false

[3,0,3] -> [];
[0] -> [];
[0,0] -> [0,0];
[3,1] -> [1,3];
[3,1,1] -> [];
[2,2,3] -> [];
[3,0,0] -> [];
[0,0,1] -> [];
[3,2] -> [2,3];
[] -> [];

=================================
None
[1,0,1] -> [];
[3,2,0] -> [];
[3] -> [];
[0,2] -> [2,0];
[3,2,2] -> [];
[2,1,2] -> [];
[3,2,1] -> [];
[0] -> [];
[3,1,2] -> [];
[] -> [];

=================================
None
[2,1] -> [1,2];
[1,2,3] -> [];
[0] -> [];
[3,1] -> [1,3];
[2,0] -> [0,2];
[2,2] -> [2,2];
[2] -> [];
[1,2] -> [2,1];
[0,2,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
4.8440 false

[2,0,2] -> [];
[1,2,1] -> [];
[2,3,2] -> [];
[1,0] -> [0,1];
[0] -> [];
[1,2,0] -> [];
[3,1] -> [1,3];
[0,3] -> [3,0];
[2] -> [];
[2,0] -> [0,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
20.0120 false

[1,1] -> [1,1];
[0,2] -> [2,0];
[1] -> [];
[0,1] -> [1,0];
[2,3] -> [3,2];
[1,0,2] -> [];
[3] -> [];
[0] -> [];
[3,0] -> [0,3];
[0,3,3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
3.9033 false

[1,0,0] -> [];
[1,3] -> [3,1];
[0,2] -> [2,0];
[1] -> [];
[1,1,3] -> [];
[0,3] -> [3,0];
[1,2,1] -> [];
[3,3,3] -> [];
[3,3] -> [3,3];
[0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
35.8017 false

[0] -> [];
[0,2] -> [2,0];
[1,2] -> [2,1];
[3] -> [];
[1] -> [];
[2] -> [];
[2,1] -> [1,2];
[2,3,2] -> [];
[0,2,2] -> [];
[2,0] -> [0,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
0.9288 false

[2,1] -> [1,2];
[1,3,1] -> [];
[3,2,2] -> [];
[2] -> [];
[3] -> [];
[1,2,3] -> [];
[0] -> [];
[0,3] -> [3,0];
[1,1] -> [1,1];
[1,1,0] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
38.6472 false

[0] -> [];
[3,2,1] -> [];
[1,3,0] -> [];
[3,3,0] -> [];
[2,3,2] -> [];
[0,1] -> [1,0];
[3] -> [];
[2] -> [];
[1] -> [];
[3,0,2] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else ( Nil )
    
  
40.5197 false

[1] -> [];
[3,1,1] -> [];
[2,0,1] -> [];
[1,0] -> [0,1];
[1,3,3] -> [];
[0,2] -> [2,0];
[1,3,2] -> [];
[0,0,3] -> [];
[0,3] -> [3,0];
[1,1] -> [1,1];
[] -> [];

=================================
None
[2,1] -> [1,2];
[1,1,2] -> [];
[1,0] -> [0,1];
[2] -> [];
[0,1,0] -> [];
[3] -> [];
[1,3,1] -> [];
[0,0] -> [0,0];
[0,2,1] -> [];
[1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
10.2935 false

[1] -> [];
[3] -> [];
[2,2,2] -> [];
[3,0,1] -> [];
[3,3,2] -> [];
[3,1] -> [1,3];
[3,1,1] -> [];
[2,2] -> [2,2];
[0] -> [];
[2,2,1] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
70.7407 false

[1,0] -> [0,1];
[2,2,0] -> [];
[1,1,0] -> [];
[1,1,3] -> [];
[1,3,0] -> [];
[1,1,1] -> [];
[0,3] -> [3,0];
[3,1] -> [1,3];
[1] -> [];
[3] -> [];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] -> tl2
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then
        ( Cons hd1
          ( Cons hd2 tl1
            ) )
        else (f0 tl1)
    
  
55.9043 false

