Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
2.9657 false

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.1307 false

Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0219 false

Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0230 false

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.1528 true

Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,0,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.2171 true

Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    (append
      ( ( Nil ),
        ( Cons v1 ( Nil )
          ) ))
  
0.0012 false

Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,0,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [0,2,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.2205 false

Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,1,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.2892 true

Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 r1) )
  
0.0248 false

Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1 (f0 l1) )
  
0.0505 false

Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.1612 true

Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,0,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.2050 true

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [0,0,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 r1),
          (f0 r1) )) )
  
0.0407 false

Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [1,2,3];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
87.3453 true

Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,2,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,0,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.2245 true

Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [3,1,2];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
3.7864 true

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,0,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.3717 true

Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.2350 true

Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.9065 true

Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [0,2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.6482 true

Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
2.5643 true

Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [3,2,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [0,0,1];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [0,1,2];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
18.4790 true

Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.3803 true

Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [2,3,0];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [2,2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
3.3193 true

Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.7366 true

Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,1];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [1,2,2];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,0,0];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,1];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,3,3];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
29.6422 true

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
1.0580 true

Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.4182 true

Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [0,1,1];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [3,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,0,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.8699 true

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,0,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
33.7695 true

Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,2,0];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
2.8523 true

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,0,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
36.1769 true

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,0,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [2,2,3];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,3,2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,0,2];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [0,0,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [3,3,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
4.6807 true

Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
2.2074 true

Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [0,0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.7274 true

Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,1,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,3,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [0,2,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
2.3493 true

Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
0.3580 true

Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,1,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [0,2,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,0];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [2,2,0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
45.5644 true

Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,1,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [2,0,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [3,3,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
24.7695 true

Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,2];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [1,2,3];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [2,1,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [2,0,1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,2,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [2,3,0];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,0,3];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
4.6683 true

Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,2,3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [1,0,0];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [2,2,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
13.4237 true

Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,2,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [3,3,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [0,0,0];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [2,2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
10.3568 true

Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,1,3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
9.4230 true

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,1,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [1,1,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [2,1,0];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,1];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [2,3,3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,2];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [0,3,1];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [1,3,0];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [0,2,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,2,1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [2,0,2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,2];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
29.5097 true

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,2,3];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,1];
Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [0,2,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),1,Leaf ()) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [2,3,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,2,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,3];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Node (Leaf (),2,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,1];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,2,1];
Leaf () -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | Leaf -> ( Nil )
  | Node(v1,l1,r1) ->
    ( Cons v1
      (append
        ( (f0 l1),
          (f0 r1) )) )
  
29.6811 true

Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [3,2,0];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [1,3,1];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,3,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [2,2,0];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,1,2];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Node (Leaf (),0,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,0,1];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,0];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,2,3];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [2,0,3];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),0,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,2,0];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,0,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,2,0];
Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,0,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [0,3,0];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [3,0,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),2,Leaf ())) -> [2,3,2];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [0,3,1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,1,0];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,0,3];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,3,1];
Leaf () -> [];

=================================
None
Node (Node (Node (Leaf (),2,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,2,0];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,1,2];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [3,0,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [3,1,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [3,1,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,0,2];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [2,0,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,0];
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [2,1,1];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,2,0];
Leaf () -> [];

=================================
None
Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [0,3,0];
Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,0,2];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),3,Leaf ())) -> [2,3,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [0,0,2];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [3,2,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),3,Leaf ()) -> [3,3,2];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [1,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,2,0];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [2,3,3];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,0];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [2,0,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [3,1,0];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,0,2];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,1,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,0];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,1,2];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,0,0];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,0,1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [3,3,1];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,0];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [3,3,2];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,2,3];
Leaf () -> [];

=================================
None
Node (Leaf (),1,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [1,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,3,0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,2,1];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [0,0,3];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [3,0,2];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,0,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [3,1,1];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,0,3];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,3,0];
Node (Leaf (),3,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,2,0];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,1];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,1];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [1,0,2];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,3,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Leaf () -> [];

=================================
None
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),1,Leaf ())) -> [3,3,1];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [2,0,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,3];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [1,2,1];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [3,0,2];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,2,1];
Node (Node (Leaf (),1,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,1,2];
Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,3,3];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,1];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,2,0];
Leaf () -> [];

=================================
None
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Leaf (),3,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [3,2,1];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,1,1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [3,1,0];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [0,2,1];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [1,2,2];
Leaf () -> [];

=================================
None
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,1,0];
Node (Leaf (),0,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [0,0,3];
Node (Node (Leaf (),1,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,1,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,3];
Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [0,1,1];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,2,3];
Leaf () -> [];

=================================
None
