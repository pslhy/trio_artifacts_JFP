([0,3,2],[0,3,0]) -> [2,3,0,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (S (S (Un_Cons (x . 0) . 0)),
                         Cons (3, Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0171 false

([3],[2,3]) -> [3,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0120 false

([1,3,2],[3,3]) -> [2,3,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (2, Cons (Un_Cons (x . 1) . 0, Cons (1, x . 1)))

0.0220 false

([2,0],[3]) -> [0,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (0, Cons (Un_Cons (x . 0) . 0, x . 1))

0.0129 false

([2],[2,3]) -> [2,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0102 false

([1,0,1],[0]) -> [1,0,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0108 false

([0,3],[3,2,3]) -> [3,0,3,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, Cons (0, x . 1))

0.0125 false

([2,2,0],[1,2,3]) -> [0,2,2,1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (0,
                         Cons (Un_Cons (x . 0) . 0,
                                Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0187 false

([0,0,2],[1]) -> [2,0,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (2, Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1)))

0.0116 false

([2],[1,1]) -> [2,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0100 false

([2,3,2],[3,0]) -> [2,3,2,3,0];
([0,0,1],[3,1,0]) -> [1,0,0,3,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (S (Un_Cons (x . 0) . 0),
                                     Cons (Un_Cons (x . 0) . 0,
                                            Cons (0, x . 1)))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (S (Un_Cons (x . 0) . 0),
                                            Cons (Un_Cons (x . 0) . 0, x . 1))))

0.0782 false

([2,1,0],[0,1,0]) -> [0,1,2,0,1,0];
([2,3,2],[1]) -> [2,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (Un_Cons (x . 1) . 0,
                                     Cons (S (Un_Cons (x . 1) . 0),
                                            Cons (2, x . 1)))
                     | S _ -> Cons (S (Un_Cons (x . 1) . 0),
                                     Cons (S (S (Un_Cons (x . 1) . 0)),
                                            Cons (2, x . 1))))

0.1841 false

([3],[3,3,0]) -> [3,3,3,0];
([1,0],[2,2]) -> [0,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (0, Cons (1, x . 1)))

0.0216 false

([0],[1,2,3]) -> [0,1,2,3];
([0,2,2],[0,2,3]) -> [2,2,0,0,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (Un_Cons (x . 0) . 1) .
                                                0,
                                               Cons (Un_Cons (x . 0) . 0,
                                                      x . 1))))

0.0303 false

([2,1,1],[2]) -> [1,1,2,2];
([1,0],[3,2,3]) -> [0,1,3,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> Cons (1,
                                       Cons (1,
                                              Cons (Un_Cons (x . 1) . 0,
                                                     x . 1)))
                     | Cons _ -> Cons (0, Cons (1, x . 1)))

0.0319 false

([3,2],[3]) -> [2,3,3];
([0,1,0],[0,2]) -> [0,1,0,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1))
                     | S _ -> Cons (Un_S (Un_Cons (x . 0) . 0),
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0592 false

([1,2,0],[0,3]) -> [0,2,1,0,3];
([2],[0,1,2]) -> [2,0,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (0,
                                        Cons (Un_Cons (Un_Cons (x . 0) . 1) .
                                                0,
                                               Cons (Un_Cons (x . 0) . 0,
                                                      x . 1))))

0.0254 false

([3],[0]) -> [3,0];
([2],[3]) -> [2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0090 false

([3,0,3],[0]) -> [3,0,3,0];
([0,3],[0]) -> [3,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (3, Cons (0, x . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (0, f (Un_Cons (x . 0) . 1, Nil))))

0.0616 false

([0,2],[3,2,1]) -> [2,0,3,2,1];
([1,0],[3]) -> [0,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> Cons (0, Cons (1, x . 1))
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 1) . 1) . 0,
                                        Cons (0, x . 1)))

0.0301 false

([1,2],[1,3,0]) -> [2,1,1,3,0];
([0],[3,1,2]) -> [0,3,1,2];
([2],[2]) -> [2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0354 false

([3,1],[1,0]) -> [1,3,1,0];
([1],[2,0]) -> [1,2,0];
([1],[2]) -> [1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0353 false

([0,1,1],[0]) -> [1,1,0,0];
([1,1,2],[1,2,0]) -> [2,1,1,1,2,0];
([2,0,1],[3,1,1]) -> [1,0,2,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (S (Un_Cons (x . 0) . 0),
                                     Cons (S (Un_Cons (x . 0) . 0),
                                            Cons (0, x . 1)))
                     | S _ -> (match Un_S (Un_Cons (x . 0) . 0) with
                                 | O _ -> Cons (S (Un_Cons (x . 0) . 0),
                                                 Cons (Un_Cons (x . 0) . 0,
                                                        Cons (1, x . 1)))
                                 | S _ -> Cons (Un_S (Un_Cons (x . 0) . 0),
                                                 Cons (0,
                                                        Cons (Un_Cons (x . 0)
                                                                . 0,
                                                               x . 1)))))

12.1935 false

([0,2],[2,0,1]) -> [2,0,2,0,1];
([3,1],[3,3,2]) -> [1,3,3,3,2];
([1,3],[3,1,2]) -> [3,1,3,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (S (S (Un_Cons (x . 0) . 0)),
                                     Cons (Un_Cons (x . 0) . 0, x . 1))
                     | S _ -> (match Un_S (Un_Cons (x . 0) . 0) with
                                 | O _ -> Cons (S (S (Un_Cons (x . 0) . 0)),
                                                 Cons (Un_Cons (x . 0) . 0,
                                                        x . 1))
                                 | S _ -> Cons (Un_S (Un_S (Un_Cons (x . 0) .
                                                              0)),
                                                 Cons (Un_Cons (x . 0) . 0,
                                                        x . 1))))

0.2980 false

([2,2,0],[3]) -> [0,2,2,3];
([1],[3]) -> [1,3];
([1],[3,2]) -> [1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (0,
                                        Cons (Un_Cons (Un_Cons (x . 0) . 1) .
                                                0,
                                               Cons (Un_Cons (x . 0) . 0,
                                                      x . 1))))

0.0331 false

([0,2,2],[3]) -> [2,2,0,3];
([0],[3]) -> [0,3];
([2,0],[0,1]) -> [0,2,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (x . 0) . 0 with
                                    | O _ -> f
                                               (Un_Cons (x . 0) . 1,
                                                 Cons (0, x . 1))
                                    | S _ -> Cons (Un_Cons (Un_Cons (x . 0) .
                                                              1)
                                                     . 0,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

0.1005 false

([3,1,1],[2]) -> [1,1,3,2];
([1],[2,1]) -> [1,2,1];
([0,3,2],[2]) -> [2,3,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.5870 true

([2,3,1],[0,3]) -> [1,3,2,0,3];
([1,3],[0,3]) -> [3,1,0,3];
([3,1],[3,2,3]) -> [1,3,3,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.2356 true

([0,1,0],[2,3]) -> [0,1,0,2,3];
([3,2,2],[1]) -> [2,2,3,1];
([2],[2,1]) -> [2,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.0312 false

([2,2],[2,3]) -> [2,2,2,3];
([3,0],[0,0]) -> [0,3,0,0];
([0,0,1],[1,2,1]) -> [1,0,0,1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (Un_Cons (x . 1) . 0, Cons (3, x . 1))
                     | S _ -> (match Un_S (Un_Cons (x . 1) . 0) with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0,
                                                 Cons (0, Cons (0, x . 1)))
                                 | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                 Cons (Un_Cons (x . 1) . 0,
                                                        x . 1))))

0.1192 false

([2,1,1],[2]) -> [1,1,2,2];
([3,3,0],[3,1,1]) -> [0,3,3,3,1,1];
([1,2,2],[1,2,0]) -> [2,2,1,1,2,0];
([1],[1,0]) -> [1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.1927 false

([1],[0,2,3]) -> [1,0,2,3];
([2,0,2],[0,0,2]) -> [2,0,2,0,0,2];
([3],[3,1]) -> [3,3,1];
([3,0],[2,0,0]) -> [0,3,2,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                                       Cons (0,
                                                              f
                                                                (Un_Cons (
                                                                   x . 0) . 1,
                                                                  Un_Cons (
                                                                    x . 0) .
                                                                    1)))))

0.0738 false

([2],[0]) -> [2,0];
([1,3],[2,3]) -> [3,1,2,3];
([0],[1]) -> [0,1];
([0,1],[0,0]) -> [1,0,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0387 false

([3],[3,0]) -> [3,3,0];
([3,1],[3,0,2]) -> [1,3,3,0,2];
([0,3,2],[1,2]) -> [2,3,0,1,2];
([2],[0,3,2]) -> [2,0,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1))
                     | S _ -> (match Un_Cons (x . 0) . 1 with
                                 | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                                 | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) .
                                                              1)
                                                     . 0,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

0.2040 false

([3,3],[3,3,2]) -> [3,3,3,3,2];
([3,2,1],[2,1]) -> [1,2,3,2,1];
([1,3],[2,2,1]) -> [3,1,2,2,1];
([1,2,1],[2,2,2]) -> [1,2,1,2,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.2589 true

([0,3,2],[0]) -> [2,3,0,0];
([0,2],[0,0,2]) -> [2,0,0,0,2];
([1],[0,1,0]) -> [1,0,1,0];
([0,3],[3]) -> [3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> f
                                                  (Un_Cons (x . 0) . 1,
                                                    Cons (0, x . 1))))

0.0580 false

([0,1],[0,0]) -> [1,0,0,0];
([2],[3,0]) -> [2,3,0];
([2],[3,3,2]) -> [2,3,3,2];
([2,2],[1,0,0]) -> [2,2,1,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     f (Un_Cons (x . 0) . 1, x . 1)))

0.0497 false

([1,1,0],[2,1]) -> [0,1,1,2,1];
([1,1],[3]) -> [1,1,3];
([2,2,3],[3,3]) -> [3,2,2,3,3];
([1,3],[1,1,2]) -> [3,1,1,1,2];
([], []) -> [];

=================================
None
([3,1],[0]) -> [1,3,0];
([1,3,2],[3]) -> [2,3,1,3];
([1,3,3],[1,1,0]) -> [3,3,1,1,1,0];
([1,3],[1,0]) -> [3,1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.2847 true

([1,1,2],[2,2]) -> [2,1,1,2,2];
([3],[3,1,3]) -> [3,3,1,3];
([0,1,1],[1]) -> [1,1,0,1];
([2],[3,1]) -> [2,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (S (Un_Cons (x . 0) . 0),
                                        Cons (Un_Cons (Un_Cons (x . 0) . 1) .
                                                0,
                                               Cons (Un_Cons (x . 0) . 0,
                                                      x . 1))))

0.0942 false

([3,2],[2]) -> [2,3,2];
([3,1],[1,2]) -> [1,3,1,2];
([3],[3,1]) -> [3,3,1];
([2,0],[3,3]) -> [0,2,3,3];
([0,2,3],[0]) -> [3,2,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1))
                     | S _ -> (match Un_Cons (x . 0) . 1 with
                                 | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                                 | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) .
                                                              1)
                                                     . 0,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

0.1899 false

([2,1,3],[0,1]) -> [3,1,2,0,1];
([3],[2,0]) -> [3,2,0];
([2],[1,0,0]) -> [2,1,0,0];
([1,2],[3,3]) -> [2,1,3,3];
([2],[3]) -> [2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (3,
                                     Cons (S (Un_Cons (x . 1) . 0),
                                            Cons (2, x . 1)))
                     | S _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> Cons (2, x . 1)
                                 | Cons _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 0 with
                                                | O _ -> Cons (S (Un_Cons (
                                                                    x . 1) .
                                                                    0),
                                                                x . 1)
                                                | S _ -> Cons (Un_S (
                                                                 Un_Cons (
                                                                   x . 1) . 0),
                                                                Cons 
                                                                  (1, 
                                                                    x . 1)))))

0.8527 false

([2,2,2],[2,1,1]) -> [2,2,2,2,1,1];
([2,1],[2,3]) -> [1,2,2,3];
([2,2,2],[2,3,3]) -> [2,2,2,2,3,3];
([1],[2]) -> [1,2];
([1,1],[1,3,3]) -> [1,1,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                                       f
                                                         (Un_Cons (x . 0) . 1,
                                                           x . 1))))

0.0668 false

([1,1],[0,0,1]) -> [1,1,0,0,1];
([3],[1]) -> [3,1];
([1,3],[2]) -> [3,1,2];
([2,3],[3,3]) -> [3,2,3,3];
([1],[1]) -> [1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0912 false

([0,2,2],[0]) -> [2,2,0,0];
([3,2,0],[0]) -> [0,2,3,0];
([0],[2,0,2]) -> [0,2,0,2];
([0,3],[2]) -> [3,0,2];
([0],[2,2,2]) -> [0,2,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.7169 false

([1],[3,3]) -> [1,3,3];
([3,2,1],[0,0,1]) -> [1,2,3,0,0,1];
([2,2],[0]) -> [2,2,0];
([2,3],[2,2,2]) -> [3,2,2,2,2];
([3,1,3],[2]) -> [3,1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.3722 false

([1,2],[2,2]) -> [2,1,2,2];
([2,3,0],[2]) -> [0,3,2,2];
([1],[2,3,3]) -> [1,2,3,3];
([3,1,3],[1]) -> [3,1,3,1];
([2],[0,3,3]) -> [2,0,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.2928 false

([3,1,1],[2,2]) -> [1,1,3,2,2];
([1],[3,2]) -> [1,3,2];
([3,2,1],[1]) -> [1,2,3,1];
([2,0],[1,3,2]) -> [0,2,1,3,2];
([2,0],[0]) -> [0,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.3059 true

([0],[3,0]) -> [0,3,0];
([1],[1,0,0]) -> [1,1,0,0];
([3,0],[1]) -> [0,3,1];
([2],[3,3,3]) -> [2,3,3,3];
([0,0],[1,1]) -> [0,0,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0468 false

([0],[1,2]) -> [0,1,2];
([1,1],[2,2]) -> [1,1,2,2];
([0,2],[2,1,2]) -> [2,0,2,1,2];
([2,3],[3]) -> [3,2,3];
([2,1,3],[1]) -> [3,1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.5859 false

([3,0],[1,2]) -> [0,3,1,2];
([3,1,1],[3,0,3]) -> [1,1,3,3,0,3];
([0,2],[0,0,0]) -> [2,0,0,0,0];
([2,0,2],[1,2,2]) -> [2,0,2,1,2,2];
([2,0],[2,0,2]) -> [0,2,2,0,2];
([0,1,1],[3,1,3]) -> [1,1,0,3,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.4935 true

([1],[1]) -> [1,1];
([2,0,2],[0,2,0]) -> [2,0,2,0,2,0];
([2,3],[2,0,0]) -> [3,2,2,0,0];
([2,1,2],[3,2,0]) -> [2,1,2,3,2,0];
([1,3],[3]) -> [3,1,3];
([2,2,2],[2,3,3]) -> [2,2,2,2,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

2.0101 true

([1],[1,0,0]) -> [1,1,0,0];
([2,3,2],[0,1]) -> [2,3,2,0,1];
([0],[3]) -> [0,3];
([2,3,3],[3,2]) -> [3,3,2,3,2];
([3,2,3],[2,2,3]) -> [3,2,3,2,2,3];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

2.6202 true

([2],[1,0,1]) -> [2,1,0,1];
([0,1],[1]) -> [1,0,1];
([1],[3]) -> [1,3];
([2,0],[3,1]) -> [0,2,3,1];
([1],[0,2]) -> [1,0,2];
([1,0,1],[3]) -> [1,0,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                                       Cons (0,
                                                              Cons (1, x . 1)))))

0.0836 false

([3,2,1],[3]) -> [1,2,3,3];
([3,2],[3]) -> [2,3,3];
([1,2,2],[0,1,1]) -> [2,2,1,0,1,1];
([2],[3,1,1]) -> [2,3,1,1];
([1,0],[3,0,3]) -> [0,1,3,0,3];
([3,1,2],[2,2]) -> [2,1,3,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.5208 false

([1,0],[1,3,0]) -> [0,1,1,3,0];
([2,3],[2]) -> [3,2,2];
([2],[2]) -> [2,2];
([2,1],[1]) -> [1,2,1];
([1,3,0],[2]) -> [0,3,1,2];
([1],[1]) -> [1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 0)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> f
                                                  (Un_Cons (x . 0) . 1,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

0.3727 false

([3],[0,0]) -> [3,0,0];
([1],[2,2]) -> [1,2,2];
([0],[1,1,3]) -> [0,1,1,3];
([0],[2,3]) -> [0,2,3];
([3],[0,0,2]) -> [3,0,0,2];
([0],[1]) -> [0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0417 false

([3,3],[2,1,3]) -> [3,3,2,1,3];
([0],[3,0,2]) -> [0,3,0,2];
([3,3],[1,0,2]) -> [3,3,1,0,2];
([1,0,1],[2,1]) -> [1,0,1,2,1];
([1,1,0],[1,1]) -> [0,1,1,1,1];
([2,0,0],[0]) -> [0,0,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.4602 true

([1],[3]) -> [1,3];
([3,3],[3,3]) -> [3,3,3,3];
([0,2],[1,1,0]) -> [2,0,1,1,0];
([3,1,2],[2,2,0]) -> [2,1,3,2,2,0];
([2,1],[1,1,3]) -> [1,2,1,1,3];
([1,2],[0]) -> [2,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

2.6587 false

([3],[1,1]) -> [3,1,1];
([3],[0,3,0]) -> [3,0,3,0];
([2,2,3],[2]) -> [3,2,2,2];
([0,3],[1,1]) -> [3,0,1,1];
([2,3,3],[2]) -> [3,3,2,2];
([1,2,3],[3,3]) -> [3,2,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

5.6390 true

([1],[0]) -> [1,0];
([1,2],[1]) -> [2,1,1];
([0,1,2],[3,1,1]) -> [2,1,0,3,1,1];
([1,3],[2,1,2]) -> [3,1,2,1,2];
([0,2,2],[2]) -> [2,2,0,2];
([3,0],[2,0]) -> [0,3,2,0];
([3,2],[3,3,1]) -> [2,3,3,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1))
                     | S _ -> (match Un_Cons (x . 0) . 1 with
                                 | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                                 | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) .
                                                              1)
                                                     . 0,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

0.2922 false

([1,1],[3,0,2]) -> [1,1,3,0,2];
([2,3],[1]) -> [3,2,1];
([2,2],[2,3]) -> [2,2,2,3];
([0],[3,3,1]) -> [0,3,3,1];
([0,2],[1,3,3]) -> [2,0,1,3,3];
([3],[1]) -> [3,1];
([3],[2,3,2]) -> [3,2,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.0792 false

([2],[3,3,1]) -> [2,3,3,1];
([2],[0,2]) -> [2,0,2];
([0,1,3],[3,2]) -> [3,1,0,3,2];
([0,2,1],[1,1]) -> [1,2,0,1,1];
([3,0,3],[0]) -> [3,0,3,0];
([2,2],[0]) -> [2,2,0];
([1],[1,0]) -> [1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 0 with
                                    | O _ -> Cons (Un_Cons (x . 0) . 0,
                                                    Cons (0,
                                                           f
                                                             (Un_Cons (x . 0)
                                                                . 1,
                                                               Nil)))
                                    | S _ -> (match Un_Cons (x . 0) . 0 with
                                                | O _ -> f
                                                           (Un_Cons (x . 0) .
                                                              1,
                                                             Cons (0, x . 1))
                                                | S _ -> Cons (Un_Cons (
                                                                 Un_Cons (
                                                                   x . 0) . 1)
                                                                 . 0,
                                                                Cons 
                                                                  (Un_Cons (
                                                                    x . 0) .
                                                                    0, 
                                                                    x . 1)))))

1.9108 false

([3,2,3],[3,3,2]) -> [3,2,3,3,3,2];
([2],[1,3,2]) -> [2,1,3,2];
([0],[1,2]) -> [0,1,2];
([1],[2,2]) -> [1,2,2];
([1],[0,1]) -> [1,0,1];
([0],[3]) -> [0,3];
([3],[3,1]) -> [3,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0726 false

([1],[2,3]) -> [1,2,3];
([0,1],[0,2,1]) -> [1,0,0,2,1];
([2,3],[0,3]) -> [3,2,0,3];
([2,1,0],[0,3]) -> [0,1,2,0,3];
([2],[3]) -> [2,3];
([3,1,0],[3,3]) -> [0,1,3,3,3];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.6467 false

([1],[3,3]) -> [1,3,3];
([3],[2]) -> [3,2];
([1,0,0],[2]) -> [0,0,1,2];
([1,3],[2,2]) -> [3,1,2,2];
([2,3,0],[1,2,0]) -> [0,3,2,1,2,0];
([1,3,0],[0]) -> [0,3,1,0];
([2,3],[1,2,0]) -> [3,2,1,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.5174 false

([1,2,2],[3,0]) -> [2,2,1,3,0];
([1,0],[2]) -> [0,1,2];
([2,1],[0]) -> [1,2,0];
([0,3],[2]) -> [3,0,2];
([0,1,2],[1]) -> [2,1,0,1];
([2],[2]) -> [2,2];
([3,1,1],[3]) -> [1,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 0)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> f
                                                  (Un_Cons (x . 0) . 1,
                                                    Cons (Un_Cons (x . 0) . 0,
                                                           x . 1))))

13.9010 false

([2,3,2],[1]) -> [2,3,2,1];
([1,3,2],[1,3,1]) -> [2,3,1,1,3,1];
([1,1,2],[2,0]) -> [2,1,1,2,0];
([1,1],[2,0,2]) -> [1,1,2,0,2];
([2,2,1],[2,3]) -> [1,2,2,2,3];
([3,2],[3]) -> [2,3,3];
([0],[2]) -> [0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.4122 true

([0,2,3],[2]) -> [3,2,0,2];
([1,3,3],[0,0]) -> [3,3,1,0,0];
([1],[3]) -> [1,3];
([3,2],[1]) -> [2,3,1];
([3,0],[2,2,0]) -> [0,3,2,2,0];
([2,1],[1,3,2]) -> [1,2,1,3,2];
([0,2,3],[0,2]) -> [3,2,0,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

15.0413 false

([3,0,1],[2]) -> [1,0,3,2];
([1,2],[3,2,2]) -> [2,1,3,2,2];
([3,3,2],[0,0]) -> [2,3,3,0,0];
([2,0,2],[1,1]) -> [2,0,2,1,1];
([1,1,2],[1]) -> [2,1,1,1];
([2,1,3],[2,3,1]) -> [3,1,2,2,3,1];
([2,3,2],[0,3]) -> [2,3,2,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.4218 true

([0,2,3],[0,3]) -> [3,2,0,0,3];
([1],[0,2]) -> [1,0,2];
([0,2],[3,0]) -> [2,0,3,0];
([1],[3,0]) -> [1,3,0];
([3,2],[2,1]) -> [2,3,2,1];
([1,3,1],[1,0]) -> [1,3,1,1,0];
([1,2,3],[2,3]) -> [3,2,1,2,3];
([0,1,0],[1]) -> [0,1,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

2.8224 false

([3],[1,1,1]) -> [3,1,1,1];
([2,3],[0,2]) -> [3,2,0,2];
([0,3,3],[2,2]) -> [3,3,0,2,2];
([2,1],[2]) -> [1,2,2];
([2,0,0],[3,0]) -> [0,0,2,3,0];
([1,3,0],[2,2,0]) -> [0,3,1,2,2,0];
([2],[2,2,0]) -> [2,2,2,0];
([0,1,3],[3,2]) -> [3,1,0,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

24.4347 true

([0,2,1],[0,0,1]) -> [1,2,0,0,0,1];
([0,0,0],[0,2]) -> [0,0,0,0,2];
([0,1],[0]) -> [1,0,0];
([2],[3]) -> [2,3];
([1,0,3],[0,3]) -> [3,0,1,0,3];
([1,2,0],[2,0,3]) -> [0,2,1,2,0,3];
([1,3],[0,1]) -> [3,1,0,1];
([3],[3,3]) -> [3,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

22.0795 true

([2],[0,3]) -> [2,0,3];
([2,1,1],[3,1,3]) -> [1,1,2,3,1,3];
([1,3,1],[1]) -> [1,3,1,1];
([2,1],[1,0,1]) -> [1,2,1,0,1];
([1,2,1],[0,3,1]) -> [1,2,1,0,3,1];
([0],[1]) -> [0,1];
([1,0],[1]) -> [0,1,1];
([1],[2]) -> [1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

1.7768 true

([2],[3]) -> [2,3];
([2,0,0],[0]) -> [0,0,2,0];
([3,3,0],[1,3,2]) -> [0,3,3,1,3,2];
([0],[2]) -> [0,2];
([2],[2]) -> [2,2];
([0],[0,3]) -> [0,0,3];
([2],[0]) -> [2,0];
([1],[3,0,2]) -> [1,3,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (0,
                                        Cons (Un_Cons (Un_Cons (x . 0) . 1) .
                                                0,
                                               Cons (Un_Cons (x . 0) . 0,
                                                      x . 1))))

0.0821 false

([0,3],[2,3,1]) -> [3,0,2,3,1];
([1,2],[3,2,3]) -> [2,1,3,2,3];
([0],[0,3,2]) -> [0,0,3,2];
([1,0,2],[1,2,1]) -> [2,0,1,1,2,1];
([0,2,2],[3,2,3]) -> [2,2,0,3,2,3];
([2],[3]) -> [2,3];
([0,2],[2,1]) -> [2,0,2,1];
([2,1,0],[1,3]) -> [0,1,2,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

51.2890 false

([3],[0,0,0]) -> [3,0,0,0];
([1,0],[0]) -> [0,1,0];
([2,2,1],[0,0,1]) -> [1,2,2,0,0,1];
([0,2,0],[3,0,2]) -> [0,2,0,3,0,2];
([3,1,3],[1]) -> [3,1,3,1];
([2],[2,2]) -> [2,2,2];
([1],[0]) -> [1,0];
([1],[1,0]) -> [1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

2.4319 true

([3],[3,1,1]) -> [3,3,1,1];
([3,1,0],[3,3,2]) -> [0,1,3,3,3,2];
([1,0,0],[1,2,3]) -> [0,0,1,1,2,3];
([0,1],[2]) -> [1,0,2];
([2],[3,2,1]) -> [2,3,2,1];
([2,3,0],[1,1]) -> [0,3,2,1,1];
([3],[2]) -> [3,2];
([2,1,2],[2,3,2]) -> [2,1,2,2,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.9311 true

([3,1],[2,2]) -> [1,3,2,2];
([0],[2]) -> [0,2];
([2],[3,3]) -> [2,3,3];
([3,0,2],[3,1]) -> [2,0,3,3,1];
([0],[2,0]) -> [0,2,0];
([0],[2,2,3]) -> [0,2,2,3];
([0,1],[1,1]) -> [1,0,1,1];
([2,1,3],[0,0]) -> [3,1,2,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

1.7014 true

([3],[3]) -> [3,3];
([3],[1,1]) -> [3,1,1];
([3,1],[0,1]) -> [1,3,0,1];
([0,1],[0]) -> [1,0,0];
([2],[1,1]) -> [2,1,1];
([0],[2,2,3]) -> [0,2,2,3];
([3,3],[2]) -> [3,3,2];
([1,1,2],[2,2]) -> [2,1,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (Un_Cons (x . 0)
                                                                . 1)
                                                       . 0,
                                                      Cons (Un_Cons (x . 0) .
                                                              0,
                                                             x . 1))
                                    | Cons _ -> Cons (S (Un_Cons (x . 0) . 0),
                                                       Cons (Un_Cons (x . 0)
                                                               . 0,
                                                              Cons (1, x . 1)))))

0.8469 false

([2],[0]) -> [2,0];
([1,2,1],[0]) -> [1,2,1,0];
([0],[1,3]) -> [0,1,3];
([0],[0]) -> [0,0];
([1],[0,0,3]) -> [1,0,0,3];
([1,1,1],[2,0]) -> [1,1,1,2,0];
([3],[0,1]) -> [3,0,1];
([3],[0,0]) -> [3,0,0];
([3,3,3],[2,0,3]) -> [3,3,3,2,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0825 false

([0,1,0],[1,1,2]) -> [0,1,0,1,1,2];
([0,3,2],[1]) -> [2,3,0,1];
([1,1],[2,3]) -> [1,1,2,3];
([3,3],[1,2]) -> [3,3,1,2];
([1],[3]) -> [1,3];
([0],[0,1]) -> [0,0,1];
([2,2,1],[2,2,3]) -> [1,2,2,2,2,3];
([3,0],[3,1,2]) -> [0,3,3,1,2];
([2,3,1],[1]) -> [1,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

2.0075 false

([1,1,3],[2,0,2]) -> [3,1,1,2,0,2];
([2,3],[0]) -> [3,2,0];
([1],[1]) -> [1,1];
([1],[1,1,1]) -> [1,1,1,1];
([2],[0,0]) -> [2,0,0];
([0],[3,1]) -> [0,3,1];
([2,3,0],[3,2]) -> [0,3,2,3,2];
([0],[2,2,0]) -> [0,2,2,0];
([0],[1,0]) -> [0,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.4313 false

([0,1,0],[2,2]) -> [0,1,0,2,2];
([3],[2]) -> [3,2];
([1],[1,2,0]) -> [1,1,2,0];
([0],[2,0]) -> [0,2,0];
([2,2],[2]) -> [2,2,2];
([2],[0]) -> [2,0];
([3],[3,2,1]) -> [3,3,2,1];
([0,3,3],[3,2]) -> [3,3,0,3,2];
([1,1],[1,2,1]) -> [1,1,1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.4149 false

([3],[0,1,0]) -> [3,0,1,0];
([3,0,0],[2,0,3]) -> [0,0,3,2,0,3];
([0,3],[1,2,3]) -> [3,0,1,2,3];
([3,3,3],[0]) -> [3,3,3,0];
([0],[1,2,1]) -> [0,1,2,1];
([3,2,3],[3,0]) -> [3,2,3,3,0];
([0],[0]) -> [0,0];
([3],[3,2,3]) -> [3,3,2,3];
([1,3,3],[0,0,1]) -> [3,3,1,0,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

5.1275 true

([0,1],[2]) -> [1,0,2];
([1,2],[2]) -> [2,1,2];
([1,0,0],[2,1,1]) -> [0,0,1,2,1,1];
([0,2],[3]) -> [2,0,3];
([1],[0]) -> [1,0];
([0,3],[0,3]) -> [3,0,0,3];
([1,3],[1]) -> [3,1,1];
([3,2,3],[0,2,3]) -> [3,2,3,0,2,3];
([3,0],[2]) -> [0,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

8.6131 false

([1,2],[0,1]) -> [2,1,0,1];
([2],[0,2]) -> [2,0,2];
([3,2],[1]) -> [2,3,1];
([1,2],[0,0]) -> [2,1,0,0];
([1],[2]) -> [1,2];
([1],[2,0]) -> [1,2,0];
([0,2],[3,0]) -> [2,0,3,0];
([2,3],[2]) -> [3,2,2];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))

0.1277 false

([0,0,3],[2,0]) -> [3,0,0,2,0];
([3],[2,0]) -> [3,2,0];
([0,3],[3,0,2]) -> [3,0,3,0,2];
([1,3,2],[3]) -> [2,3,1,3];
([1],[3,1,1]) -> [1,3,1,1];
([2,2],[1]) -> [2,2,1];
([3],[1]) -> [3,1];
([3],[3,0,3]) -> [3,3,0,3];
([0],[3,2,1]) -> [0,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

98.8992 false

([0],[1,2,1]) -> [0,1,2,1];
([0],[1,2,0]) -> [0,1,2,0];
([3,0,0],[2,3,1]) -> [0,0,3,2,3,1];
([3,0,1],[0,1,0]) -> [1,0,3,0,1,0];
([2,3,1],[1,0]) -> [1,3,2,1,0];
([1],[0]) -> [1,0];
([1,2],[2,2,3]) -> [2,1,2,2,3];
([2,1,1],[2]) -> [1,1,2,2];
([1],[0,0]) -> [1,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.4039 false

([0],[0,0,1]) -> [0,0,0,1];
([0,3,2],[0,3]) -> [2,3,0,0,3];
([1,3],[1,3]) -> [3,1,1,3];
([3,1,2],[3,1,2]) -> [2,1,3,3,1,2];
([1,1],[1]) -> [1,1,1];
([1,0,1],[2,3]) -> [1,0,1,2,3];
([2],[2,0]) -> [2,2,0];
([0,2,1],[3,1,3]) -> [1,2,0,3,1,3];
([2,1],[3]) -> [1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

7.2834 true

([0,3],[2]) -> [3,0,2];
([3],[3,3,2]) -> [3,3,3,2];
([2,1,0],[1,1,1]) -> [0,1,2,1,1,1];
([3,1],[3,2,3]) -> [1,3,3,2,3];
([1],[1]) -> [1,1];
([0],[1]) -> [0,1];
([0,2,0],[2,1]) -> [0,2,0,2,1];
([1],[1,2]) -> [1,1,2];
([0,3],[0]) -> [3,0,0];
([3],[1]) -> [3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

11.8166 false

([0,3,0],[2,2,1]) -> [0,3,0,2,2,1];
([3,3],[0,1]) -> [3,3,0,1];
([3,1,1],[1,2,3]) -> [1,1,3,1,2,3];
([0,1,3],[0,1]) -> [3,1,0,0,1];
([2,1],[1,2,0]) -> [1,2,1,2,0];
([0],[3,1,2]) -> [0,3,1,2];
([3,1],[3]) -> [1,3,3];
([2,3,0],[0,0]) -> [0,3,2,0,0];
([2,3],[3]) -> [3,2,3];
([2,2],[0]) -> [2,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

0.6622 false

([0,1,0],[2]) -> [0,1,0,2];
([3,1,2],[1,0,1]) -> [2,1,3,1,0,1];
([0,0],[3,3,1]) -> [0,0,3,3,1];
([0,0,3],[2,2]) -> [3,0,0,2,2];
([1,2,3],[1]) -> [3,2,1,1];
([2,2,3],[2]) -> [3,2,2,2];
([2,3],[0,3,0]) -> [3,2,0,3,0];
([3],[2]) -> [3,2];
([2],[2,0]) -> [2,2,0];
([0],[3,2,3]) -> [0,3,2,3];
([], []) -> [];

=================================
None
([1],[0]) -> [1,0];
([0,1],[0,3]) -> [1,0,0,3];
([0,1],[2]) -> [1,0,2];
([3],[1]) -> [3,1];
([3],[0]) -> [3,0];
([2,1,0],[2,1]) -> [0,1,2,2,1];
([2],[1,3]) -> [2,1,3];
([2],[2,3,2]) -> [2,2,3,2];
([3,1,2],[2,3]) -> [2,1,3,2,3];
([3,1,3],[0]) -> [3,1,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

0.6721 true

([3,0],[3,3]) -> [0,3,3,3];
([3,0],[3,2,1]) -> [0,3,3,2,1];
([1,2],[1,1]) -> [2,1,1,1];
([2,1,0],[2,2]) -> [0,1,2,2,2];
([3,0,1],[2]) -> [1,0,3,2];
([2],[1,3,0]) -> [2,1,3,0];
([0,0],[1,3,1]) -> [0,0,1,3,1];
([1,3],[2,2,3]) -> [3,1,2,2,3];
([2,1],[3]) -> [1,2,3];
([2,3,3],[3,0]) -> [3,3,2,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.2159 false

([3,0],[3]) -> [0,3,3];
([0],[0,1]) -> [0,0,1];
([1,1,1],[1]) -> [1,1,1,1];
([2,0,2],[0,3,1]) -> [2,0,2,0,3,1];
([2,0],[2]) -> [0,2,2];
([1,1],[3,1,2]) -> [1,1,3,1,2];
([2,0,3],[0,1,2]) -> [3,0,2,0,1,2];
([1,1,3],[3,0]) -> [3,1,1,3,0];
([3],[0]) -> [3,0];
([3],[2,2]) -> [3,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

2.1064 false

([3,3],[3,2]) -> [3,3,3,2];
([3,2],[3,2]) -> [2,3,3,2];
([0,0,3],[2,1,2]) -> [3,0,0,2,1,2];
([0,1],[2,0,1]) -> [1,0,2,0,1];
([1,1,2],[0,0,1]) -> [2,1,1,0,0,1];
([3],[3,3,3]) -> [3,3,3,3];
([1,1],[0,3]) -> [1,1,0,3];
([1,0],[2]) -> [0,1,2];
([3,3,2],[3]) -> [2,3,3,3];
([0],[1,0]) -> [0,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (Un_Cons (x . 0) . 0, x . 1))

15.9184 true

([2],[2]) -> [2,2];
([1,1,2],[2,3]) -> [2,1,1,2,3];
([1,0,1],[0,1]) -> [1,0,1,0,1];
([0,3,2],[3]) -> [2,3,0,3];
([1],[3,2]) -> [1,3,2];
([2,1],[3]) -> [1,2,3];
([3],[3]) -> [3,3];
([0,1],[3,0]) -> [1,0,3,0];
([0,3,2],[0,3,0]) -> [2,3,0,0,3,0];
([1,1],[2,3,2]) -> [1,1,2,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

4.2113 false

([1,1,1],[3,0,1]) -> [1,1,1,3,0,1];
([3,1],[0,0]) -> [1,3,0,0];
([0,3],[1]) -> [3,0,1];
([2,3,3],[1]) -> [3,3,2,1];
([1,1,2],[3,2]) -> [2,1,1,3,2];
([3],[0,2,1]) -> [3,0,2,1];
([3,1,0],[1]) -> [0,1,3,1];
([0,1,3],[3,0,0]) -> [3,1,0,3,0,0];
([3,2],[1,1]) -> [2,3,1,1];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.9930 false

([1],[2,2]) -> [1,2,2];
([2],[2]) -> [2,2];
([3,2,0],[0,1]) -> [0,2,3,0,1];
([2,1,2],[1,2]) -> [2,1,2,1,2];
([2,1,2],[0,2,1]) -> [2,1,2,0,2,1];
([0],[2,3,2]) -> [0,2,3,2];
([1,1],[0,0,0]) -> [1,1,0,0,0];
([0,0,2],[0,1,1]) -> [2,0,0,0,1,1];
([0],[2,1,1]) -> [0,2,1,1];
([0,2],[0,0,2]) -> [2,0,0,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f
                                   (Un_Cons (x . 0) . 1,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

11.8243 false

