[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0036 true

[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0036 true

[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0036 true

[3,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0041 true

[0,0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0002 false

[1,1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0034 true

[1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0036 true

[3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0034 true

[2,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0038 true

[3,0,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[3,0] -> 3;
[3,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0055 true

[1,3,2] -> 1;
[0,3,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0049 true

[2] -> 2;
[2,1,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0051 true

[0,0] -> 0;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0043 true

[2] -> 2;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0049 true

[0,3] -> 0;
[3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0049 true

[1,1] -> 1;
[2,0,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0050 true

[0,1,0] -> 0;
[0,2,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> 0

0.0004 false

[0,3] -> 0;
[2,2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0050 true

[0] -> 0;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0042 true

[2,1] -> 2;
[1,0] -> 1;
[1,3,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0055 true

[2,1] -> 2;
[3] -> 3;
[2,2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0077 true

[0,0] -> 0;
[1] -> 1;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0057 true

[2] -> 2;
[0,2,1] -> 0;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0060 true

[1,1,1] -> 1;
[1,0] -> 1;
[1,3,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0050 true

[1,1] -> 1;
[0,1] -> 0;
[0,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0049 true

[2,2] -> 2;
[2] -> 2;
[3,3,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0076 true

[2] -> 2;
[3] -> 3;
[3,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0075 true

[2,2] -> 2;
[0] -> 0;
[3,1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0061 true

[1,0] -> 1;
[3,2] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0061 true

[0] -> 0;
[1,1,3] -> 1;
[3,3,1] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0072 true

[1] -> 1;
[0,0,3] -> 0;
[3,0] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0076 true

[1,3,1] -> 1;
[3] -> 3;
[0,1,0] -> 0;
[3,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0075 true

[0,0] -> 0;
[3,3,1] -> 3;
[1,1,2] -> 1;
[3,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0086 true

[2] -> 2;
[2,1] -> 2;
[3,0,3] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0091 true

[2,1,2] -> 2;
[3,3] -> 3;
[1,3,2] -> 1;
[3,3,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0084 true

[3] -> 3;
[3,3,3] -> 3;
[3,3] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0089 true

[0,0] -> 0;
[2] -> 2;
[1,0] -> 1;
[0,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0076 true

[1] -> 1;
[2,3,0] -> 2;
[1,1,0] -> 1;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0082 true

[1,1,1] -> 1;
[1,1] -> 1;
[2,0] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0082 true

[1,1] -> 1;
[2,1] -> 2;
[1,1,1] -> 1;
[0,3] -> 0;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0095 true

[0] -> 0;
[1,3,0] -> 1;
[2,0] -> 2;
[2,1,0] -> 2;
[0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[1,1] -> 1;
[3] -> 3;
[2,1,2] -> 2;
[0,2,0] -> 0;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0097 true

[2,2] -> 2;
[1] -> 1;
[3] -> 3;
[1,1,1] -> 1;
[0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0093 true

[1] -> 1;
[2] -> 2;
[3,2,3] -> 3;
[3] -> 3;
[3,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0091 true

[0] -> 0;
[2] -> 2;
[2,0,2] -> 2;
[3] -> 3;
[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0099 true

[0,0,0] -> 0;
[2,0] -> 2;
[1] -> 1;
[1,0,3] -> 1;
[3,2,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0098 true

[3,1,0] -> 3;
[0,0,1] -> 0;
[0,2,2] -> 0;
[0,1,0] -> 0;
[0,3,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0090 true

[3,3] -> 3;
[3,2,0] -> 3;
[2,2] -> 2;
[2,0,2] -> 2;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0100 true

[3,1] -> 3;
[3] -> 3;
[0,3] -> 0;
[0,2] -> 0;
[3,2,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0100 true

[2] -> 2;
[1,0,0] -> 1;
[1,3,3] -> 1;
[3,3,2] -> 3;
[3,2] -> 3;
[1,2,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0122 true

[0,0] -> 0;
[1,3,2] -> 1;
[0] -> 0;
[0,1] -> 0;
[3,3] -> 3;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0103 true

[0] -> 0;
[0,1] -> 0;
[3] -> 3;
[3,3] -> 3;
[3,2,0] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0125 true

[0,0] -> 0;
[3,2] -> 3;
[3,3,0] -> 3;
[2,2,1] -> 2;
[3,3] -> 3;
[2,0,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0129 true

[2] -> 2;
[3,0] -> 3;
[0,0,0] -> 0;
[1] -> 1;
[3,1,3] -> 3;
[3,1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0109 true

[1,3,0] -> 1;
[1] -> 1;
[3,1] -> 3;
[0] -> 0;
[2,3,1] -> 2;
[1,3,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0109 true

[1,1,1] -> 1;
[1,1,0] -> 1;
[1,2,0] -> 1;
[0] -> 0;
[2] -> 2;
[2,0,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0103 true

[2,1,0] -> 2;
[2] -> 2;
[0,2] -> 0;
[0] -> 0;
[1] -> 1;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0104 true

[2,2] -> 2;
[3] -> 3;
[2,1] -> 2;
[2] -> 2;
[3,0,1] -> 3;
[3,2,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0121 true

[0] -> 0;
[3,3,1] -> 3;
[0,2,3] -> 0;
[3] -> 3;
[1] -> 1;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0108 true

[0,2,3] -> 0;
[0,0,2] -> 0;
[3,2] -> 3;
[2,2,0] -> 2;
[2] -> 2;
[0,3] -> 0;
[2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0125 true

[3] -> 3;
[2,0,1] -> 2;
[0,0,3] -> 0;
[2] -> 2;
[2,0,2] -> 2;
[0] -> 0;
[1,0,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0133 true

[0,2] -> 0;
[3] -> 3;
[0,3,0] -> 0;
[2] -> 2;
[1] -> 1;
[2,0,2] -> 2;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0126 true

[1,2] -> 1;
[0,0,0] -> 0;
[1] -> 1;
[3,3] -> 3;
[2,2,1] -> 2;
[3] -> 3;
[1,1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0127 true

[1] -> 1;
[0] -> 0;
[3,1,2] -> 3;
[3,2] -> 3;
[1,1,1] -> 1;
[0,1] -> 0;
[1,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0130 true

[0,1] -> 0;
[0,0] -> 0;
[2,0,1] -> 2;
[3,3,0] -> 3;
[1,0,3] -> 1;
[3] -> 3;
[2,3,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0138 true

[3,3,1] -> 3;
[1,3,0] -> 1;
[3,2,1] -> 3;
[1] -> 1;
[1,0] -> 1;
[0,1,3] -> 0;
[1,1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0129 true

[1] -> 1;
[2] -> 2;
[0,0] -> 0;
[3] -> 3;
[2,1,0] -> 2;
[2,0] -> 2;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0119 true

[2,1,0] -> 2;
[0] -> 0;
[0,0] -> 0;
[2,2] -> 2;
[2,1] -> 2;
[3,3] -> 3;
[0,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0149 true

[0,1] -> 0;
[0,3] -> 0;
[1,0,3] -> 1;
[2,1] -> 2;
[0,2] -> 0;
[3,3] -> 3;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0126 true

[1,3] -> 1;
[0] -> 0;
[2,1,0] -> 2;
[0,1] -> 0;
[0,3] -> 0;
[1] -> 1;
[0,0] -> 0;
[1,3,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0140 true

[1] -> 1;
[0,0,3] -> 0;
[3,0,2] -> 3;
[3,3] -> 3;
[1,0,1] -> 1;
[3,1,2] -> 3;
[2] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0138 true

[0,2,0] -> 0;
[0,1] -> 0;
[1,1] -> 1;
[2,3,3] -> 2;
[2] -> 2;
[1] -> 1;
[3,1,2] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0152 true

[3,2] -> 3;
[0] -> 0;
[0,2,2] -> 0;
[0,2] -> 0;
[2,3] -> 2;
[3,0,1] -> 3;
[0,1,3] -> 0;
[0,2,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0131 true

[3,2] -> 3;
[2,1,3] -> 2;
[1,1,3] -> 1;
[0,2,2] -> 0;
[2] -> 2;
[0,2] -> 0;
[1,0,1] -> 1;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0131 true

[0] -> 0;
[1] -> 1;
[2,2,2] -> 2;
[3] -> 3;
[1,1,3] -> 1;
[0,1] -> 0;
[0,2,2] -> 0;
[1,0,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0143 true

[0,1,3] -> 0;
[3] -> 3;
[2,0,0] -> 2;
[0,2] -> 0;
[2] -> 2;
[0] -> 0;
[1] -> 1;
[0,3,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0143 true

[3] -> 3;
[2,0] -> 2;
[0,0,0] -> 0;
[1] -> 1;
[0] -> 0;
[3,1] -> 3;
[1,0,2] -> 1;
[0,3,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0139 true

[0] -> 0;
[0,2,1] -> 0;
[3] -> 3;
[2] -> 2;
[1,3,1] -> 1;
[3,3] -> 3;
[2,2,3] -> 2;
[0,3,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0131 true

[2] -> 2;
[0,3] -> 0;
[3] -> 3;
[1] -> 1;
[3,0,1] -> 3;
[1,1] -> 1;
[3,1] -> 3;
[0,2] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0145 true

[0,1,2] -> 0;
[1,2,2] -> 1;
[1,1] -> 1;
[3] -> 3;
[2,3] -> 2;
[3,1] -> 3;
[2,0] -> 2;
[0,0,1] -> 0;
[0,1,3] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0158 true

[2] -> 2;
[1,1,0] -> 1;
[1,1,2] -> 1;
[1,3] -> 1;
[1,0] -> 1;
[1,2] -> 1;
[0] -> 0;
[2,2] -> 2;
[1,3,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0155 true

[0,0] -> 0;
[1,1,0] -> 1;
[3,2] -> 3;
[2] -> 2;
[1] -> 1;
[2,0] -> 2;
[3,0,2] -> 3;
[0] -> 0;
[0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0148 true

[1,1,3] -> 1;
[2] -> 2;
[0] -> 0;
[0,1,1] -> 0;
[3,2] -> 3;
[1] -> 1;
[1,1] -> 1;
[0,0,2] -> 0;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0163 true

[1] -> 1;
[3,3,2] -> 3;
[2,1,0] -> 2;
[0,3] -> 0;
[3,0] -> 3;
[3,2] -> 3;
[0] -> 0;
[2,3] -> 2;
[3,3,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0166 true

[2,1] -> 2;
[0,2] -> 0;
[3,0,3] -> 3;
[3,3] -> 3;
[1,1,3] -> 1;
[2,0,3] -> 2;
[0,1] -> 0;
[1,3] -> 1;
[2,0,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0158 true

[0,1,1] -> 0;
[2,1] -> 2;
[0,2,3] -> 0;
[3,0,1] -> 3;
[3,1] -> 3;
[3,3,1] -> 3;
[2,3,3] -> 2;
[1] -> 1;
[3,1,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0197 true

[0,0,0] -> 0;
[2,3,3] -> 2;
[2,0,2] -> 2;
[2] -> 2;
[0,0] -> 0;
[3,1,3] -> 3;
[1,3,0] -> 1;
[1,0] -> 1;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0149 true

[0] -> 0;
[3,1,3] -> 3;
[3,2] -> 3;
[2,3,3] -> 2;
[2] -> 2;
[1,0] -> 1;
[0,1] -> 0;
[0,2,0] -> 0;
[0,0,1] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0196 true

[1] -> 1;
[1,1] -> 1;
[0,1] -> 0;
[2,1,2] -> 2;
[1,1,1] -> 1;
[3,2] -> 3;
[2,0] -> 2;
[1,2,2] -> 1;
[2,3] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0163 true

[2,0] -> 2;
[2,0,0] -> 2;
[1] -> 1;
[1,0,3] -> 1;
[0,2] -> 0;
[2,3] -> 2;
[0,0,1] -> 0;
[0,2,2] -> 0;
[2,2,3] -> 2;
[0,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0168 true

[1,3] -> 1;
[2,3,0] -> 2;
[1] -> 1;
[0,2,1] -> 0;
[3,2] -> 3;
[3,1] -> 3;
[3,2,2] -> 3;
[3,3] -> 3;
[0,3,1] -> 0;
[2,2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0185 true

[0] -> 0;
[2,1,3] -> 2;
[0,1,0] -> 0;
[3,3,3] -> 3;
[1,2,3] -> 1;
[3] -> 3;
[1,2] -> 1;
[1] -> 1;
[0,1] -> 0;
[0,2,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0182 true

[3,1] -> 3;
[0] -> 0;
[3,0,0] -> 3;
[1] -> 1;
[1,0] -> 1;
[0,3,0] -> 0;
[2,1] -> 2;
[3,2,3] -> 3;
[3,3] -> 3;
[0,2,0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0179 true

[0,3,1] -> 0;
[1] -> 1;
[3,2] -> 3;
[3,1] -> 3;
[0,1,2] -> 0;
[3,0,2] -> 3;
[0] -> 0;
[2,1,3] -> 2;
[1,1,1] -> 1;
[3,0,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0184 true

[3,1] -> 3;
[3] -> 3;
[0] -> 0;
[0,3,2] -> 0;
[2,3] -> 2;
[3,0] -> 3;
[3,1,0] -> 3;
[2,0,0] -> 2;
[1,3] -> 1;
[1,2] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0187 true

[1] -> 1;
[1,2] -> 1;
[2] -> 2;
[0,0,3] -> 0;
[2,0,3] -> 2;
[3] -> 3;
[0,1] -> 0;
[3,3,2] -> 3;
[2,2,3] -> 2;
[3,1,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0198 true

[0,0] -> 0;
[0] -> 0;
[3] -> 3;
[2,3,3] -> 2;
[3,2,3] -> 3;
[1] -> 1;
[3,2] -> 3;
[3,2,2] -> 3;
[2,3] -> 2;
[2,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0214 true

[0,1] -> 0;
[2,0] -> 2;
[0,0,3] -> 0;
[0,2] -> 0;
[0] -> 0;
[3,1,0] -> 3;
[3,1,3] -> 3;
[2] -> 2;
[3,2] -> 3;
[1,1,3] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0189 true

[1] -> 1;
[2,0,0] -> 2;
[0,2] -> 0;
[1,2,0] -> 1;
[0] -> 0;
[2,2] -> 2;
[0,0,2] -> 0;
[3] -> 3;
[0,2,0] -> 0;
[1,3,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0

0.0186 true

