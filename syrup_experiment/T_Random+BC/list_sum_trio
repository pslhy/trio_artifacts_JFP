[1,3,0] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0190 true
Time(s): 0.25 
Mem(Kb): 16116

[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0108 true
Time(s): 0.10 
Mem(Kb): 16092

[2,2,1] -> 5;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0092 true
Time(s): 0.17 
Mem(Kb): 16152

[2,2] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0073 true
Time(s): 0.06 
Mem(Kb): 16140

[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0137 true
Time(s): 0.08 
Mem(Kb): 16108

[3,1,3] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0483 true
Time(s): 0.44 
Mem(Kb): 16176

[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0035 true
Time(s): 0.06 
Mem(Kb): 16080

[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0035 true
Time(s): 0.07 
Mem(Kb): 16092

[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0079 true
Time(s): 0.05 
Mem(Kb): 16112

[2,3,2] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0051 true
Time(s): 0.05 
Mem(Kb): 16168

[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0035 true
Time(s): 0.05 
Mem(Kb): 16152

[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0039 true
Time(s): 0.04 
Mem(Kb): 16072

[1,0,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0047 true
Time(s): 0.05 
Mem(Kb): 16128

[3,1,3] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0062 true
Time(s): 0.05 
Mem(Kb): 16152

[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0049 true
Time(s): 0.04 
Mem(Kb): 16080

[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0042 true
Time(s): 0.08 
Mem(Kb): 16076

[1,3] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0060 true
Time(s): 0.05 
Mem(Kb): 16092

[2,3,2] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0074 true
Time(s): 0.06 
Mem(Kb): 16124

[0,3,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0041 true
Time(s): 0.04 
Mem(Kb): 16104

[3,2] -> 5;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0328 true
Time(s): 0.07 
Mem(Kb): 16096

[1] -> 1;
[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0058 true
Time(s): 0.05 
Mem(Kb): 16144

[2,3,0] -> 5;
[3,2,3] -> 8;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0066 true
Time(s): 0.05 
Mem(Kb): 16184

[3,3] -> 6;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0056 true
Time(s): 0.04 
Mem(Kb): 16088

[1,1,3] -> 5;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0056 true
Time(s): 0.05 
Mem(Kb): 16068

[1,1,3] -> 5;
[0,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0062 true
Time(s): 0.05 
Mem(Kb): 16056

[1] -> 1;
[0,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0075 true
Time(s): 0.05 
Mem(Kb): 16120

[2,0] -> 2;
[1,3,3] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0057 true
Time(s): 0.04 
Mem(Kb): 16092

[2] -> 2;
[1,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0045 true
Time(s): 0.05 
Mem(Kb): 16104

[0,2,2] -> 4;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0062 true
Time(s): 0.05 
Mem(Kb): 16164

[1] -> 1;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0047 true
Time(s): 0.06 
Mem(Kb): 16092

[1,0] -> 1;
[3] -> 3;
[3,3,3] -> 9;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0081 true
Time(s): 0.05 
Mem(Kb): 16232

[3,1,0] -> 4;
[2,0,1] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0059 true
Time(s): 0.04 
Mem(Kb): 16024

[3,2] -> 5;
[2,0] -> 2;
[0,1,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0081 true
Time(s): 0.05 
Mem(Kb): 16088

[3] -> 3;
[3,1] -> 4;
[3,1,0] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0068 true
Time(s): 0.05 
Mem(Kb): 16120

[2] -> 2;
[1,2,0] -> 3;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0057 true
Time(s): 0.05 
Mem(Kb): 16164

[1,1,2] -> 4;
[1,2] -> 3;
[0,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0057 true
Time(s): 0.05 
Mem(Kb): 16152

[0,3] -> 3;
[2] -> 2;
[2,1,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0056 true
Time(s): 0.04 
Mem(Kb): 16116

[2,1,2] -> 5;
[3] -> 3;
[3,3] -> 6;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0067 true
Time(s): 0.05 
Mem(Kb): 16032

[1,3,3] -> 7;
[1,0,2] -> 3;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0064 true
Time(s): 0.04 
Mem(Kb): 16108

[1] -> 1;
[1,2] -> 3;
[3,3,3] -> 9;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0074 true
Time(s): 0.04 
Mem(Kb): 16180

[2,0] -> 2;
[0,2,0] -> 2;
[3,3,1] -> 7;
[2,3,1] -> 6;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0079 true
Time(s): 0.05 
Mem(Kb): 16124

[0] -> 0;
[3,3] -> 6;
[1,3,0] -> 4;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0085 true
Time(s): 0.05 
Mem(Kb): 16064

[2,1,2] -> 5;
[3,2] -> 5;
[3] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0087 true
Time(s): 0.05 
Mem(Kb): 16076

[1] -> 1;
[0,0,1] -> 1;
[3,3] -> 6;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0061 true
Time(s): 0.04 
Mem(Kb): 16040

[2] -> 2;
[2,3] -> 5;
[1,2] -> 3;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0068 true
Time(s): 0.05 
Mem(Kb): 16156

[3,3,2] -> 8;
[2,0] -> 2;
[0,3,0] -> 3;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0098 true
Time(s): 0.07 
Mem(Kb): 16200

[2,1] -> 3;
[0] -> 0;
[1] -> 1;
[0,3,0] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0061 true
Time(s): 0.04 
Mem(Kb): 16092

[1] -> 1;
[3] -> 3;
[1,1] -> 2;
[3,2,3] -> 8;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0145 true
Time(s): 0.06 
Mem(Kb): 16228

[3,0,1] -> 4;
[0] -> 0;
[3,2,0] -> 5;
[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0067 true
Time(s): 0.04 
Mem(Kb): 16112

[3] -> 3;
[1] -> 1;
[0,1,0] -> 1;
[1,3] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0073 true
Time(s): 0.05 
Mem(Kb): 16124

[2,0] -> 2;
[1,2,0] -> 3;
[3,1] -> 4;
[0,2] -> 2;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0080 true
Time(s): 0.06 
Mem(Kb): 16140

[0,1,2] -> 3;
[2,2] -> 4;
[3,2,0] -> 5;
[1,0,1] -> 2;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0095 true
Time(s): 0.05 
Mem(Kb): 16112

[3,3,1] -> 7;
[0,3] -> 3;
[0,1,1] -> 2;
[2] -> 2;
[1,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0095 true
Time(s): 0.05 
Mem(Kb): 16132

[1,3] -> 4;
[0] -> 0;
[3,0,3] -> 6;
[2,0] -> 2;
[2,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0084 true
Time(s): 0.05 
Mem(Kb): 16120

[2] -> 2;
[3] -> 3;
[3,1,1] -> 5;
[3,0] -> 3;
[3,1,2] -> 6;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0085 true
Time(s): 0.05 
Mem(Kb): 16168

[2,1] -> 3;
[2] -> 2;
[3] -> 3;
[0,0,0] -> 0;
[1,0,3] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0075 true
Time(s): 0.04 
Mem(Kb): 16120

[1] -> 1;
[1,0,2] -> 3;
[3] -> 3;
[1,2,3] -> 6;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0078 true
Time(s): 0.05 
Mem(Kb): 16080

[2,0] -> 2;
[1,3,3] -> 7;
[2,2,2] -> 6;
[0,2] -> 2;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0271 true
Time(s): 0.13 
Mem(Kb): 16208

[1] -> 1;
[2,3,2] -> 7;
[0,3] -> 3;
[2] -> 2;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0076 true
Time(s): 0.04 
Mem(Kb): 16112

[1] -> 1;
[0,2] -> 2;
[2,0,1] -> 3;
[3,1] -> 4;
[2,0,2] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0074 true
Time(s): 0.05 
Mem(Kb): 16152

[1,1,1] -> 3;
[0,2] -> 2;
[0,1] -> 1;
[1,2] -> 3;
[3,3] -> 6;
[0,2,2] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0101 true
Time(s): 0.05 
Mem(Kb): 16140

[0] -> 0;
[3] -> 3;
[0,3] -> 3;
[3,1,1] -> 5;
[1] -> 1;
[1,0,2] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0091 true
Time(s): 0.05 
Mem(Kb): 16140

[2] -> 2;
[2,1,0] -> 3;
[2,1] -> 3;
[1,3,0] -> 4;
[2,2] -> 4;
[1,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0094 true
Time(s): 0.05 
Mem(Kb): 16144

[3,1,3] -> 7;
[0] -> 0;
[1,2,2] -> 5;
[2,3] -> 5;
[3] -> 3;
[1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0100 true
Time(s): 0.05 
Mem(Kb): 16220

[1,1,2] -> 4;
[3,0] -> 3;
[1] -> 1;
[0,1] -> 1;
[3,2] -> 5;
[1,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0098 true
Time(s): 0.05 
Mem(Kb): 16152

[2] -> 2;
[2,0] -> 2;
[3,3,2] -> 8;
[0,2,3] -> 5;
[3,0,2] -> 5;
[1,3] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0133 true
Time(s): 0.06 
Mem(Kb): 16216

[3] -> 3;
[2,2,2] -> 6;
[0,2,1] -> 3;
[3,3,1] -> 7;
[2] -> 2;
[3,1,1] -> 5;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0126 true
Time(s): 0.05 
Mem(Kb): 16168

[0,2,3] -> 5;
[0] -> 0;
[1,2,2] -> 5;
[3] -> 3;
[2,0] -> 2;
[0,0,3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0115 true
Time(s): 0.05 
Mem(Kb): 16152

[1,1] -> 2;
[2] -> 2;
[2,1] -> 3;
[1,3] -> 4;
[1,2,2] -> 5;
[2,2,0] -> 4;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0098 true
Time(s): 0.05 
Mem(Kb): 16140

[2,2] -> 4;
[2] -> 2;
[3,0] -> 3;
[2,0] -> 2;
[1,3,0] -> 4;
[0] -> 0;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0083 true
Time(s): 0.04 
Mem(Kb): 16088

[0,3] -> 3;
[2] -> 2;
[1,3,0] -> 4;
[3,3,1] -> 7;
[2,3,0] -> 5;
[1,2] -> 3;
[2,0] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0135 true
Time(s): 0.05 
Mem(Kb): 16188

[1,0] -> 1;
[3,2,0] -> 5;
[0,2,3] -> 5;
[3,1] -> 4;
[0] -> 0;
[0,1,3] -> 4;
[3,1,3] -> 7;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0122 true
Time(s): 0.05 
Mem(Kb): 16176

[2,0,1] -> 3;
[2,3] -> 5;
[2,1] -> 3;
[1] -> 1;
[3] -> 3;
[2,0] -> 2;
[1,0] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0104 true
Time(s): 0.05 
Mem(Kb): 16180

[2] -> 2;
[0,1,0] -> 1;
[0] -> 0;
[3,0,3] -> 6;
[1,2,1] -> 4;
[3,0,0] -> 3;
[1,1] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0097 true
Time(s): 0.05 
Mem(Kb): 16168

[3] -> 3;
[0,3] -> 3;
[3,3] -> 6;
[1] -> 1;
[1,0,0] -> 1;
[0] -> 0;
[3,2] -> 5;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0131 true
Time(s): 0.05 
Mem(Kb): 16120

[3] -> 3;
[1,3] -> 4;
[3,1] -> 4;
[0,2,1] -> 3;
[3,0] -> 3;
[1] -> 1;
[1,1,1] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0123 true
Time(s): 0.05 
Mem(Kb): 16184

[1] -> 1;
[1,3] -> 4;
[1,2] -> 3;
[3,0,3] -> 6;
[1,3,0] -> 4;
[3,1,3] -> 7;
[0,1] -> 1;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0124 true
Time(s): 0.05 
Mem(Kb): 16172

[1,0,3] -> 4;
[0,1,1] -> 2;
[0,3,0] -> 3;
[0,3] -> 3;
[1,2,3] -> 6;
[0,2,1] -> 3;
[2] -> 2;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0130 true
Time(s): 0.05 
Mem(Kb): 16160

[3,2,2] -> 7;
[1] -> 1;
[0,0,2] -> 2;
[3,2,3] -> 8;
[2] -> 2;
[1,1,1] -> 3;
[3] -> 3;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0117 true
Time(s): 0.04 
Mem(Kb): 16204

[3,0] -> 3;
[0,2] -> 2;
[0,1] -> 1;
[3,1] -> 4;
[1,3,2] -> 6;
[0,0,1] -> 1;
[3,2,3] -> 8;
[] -> 0;

=================================
fix (f : list -> nat) = fun (x:list) -> fold add 0 x

0.0151 true
Time(s): 0.06 
Mem(Kb): 16240

