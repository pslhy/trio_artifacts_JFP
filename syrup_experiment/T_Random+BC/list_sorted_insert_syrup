([0,1],2) -> [0,1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0065 false

([2,2,3],2) -> [2,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0090 false

([0,2],3) -> [0,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0090 false

([2],0) -> [0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0013 false

([3,3,2],3) -> [3,3,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0130 false

([3],1) -> [1,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0025 false

([0],2) -> [0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0035 false

([1,2],2) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0062 false

([2,1,2],2) -> [2,1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0090 false

([2,3],0) -> [0,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0018 false

([1,3],2) -> [1,2,3];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons
      if
        (less_than
          ( hd1, x1 ))
        then hd1 else x1
      if
        (less_than
          ( hd1, x1 ))
        then
          (f0
            ( tl1, x1 ))
        else x0 )
  
21.3274 false

([2,3,3],3) -> [2,3,3];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0177 false

([1],0) -> [0,1];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 ->
    ( Cons n1
      ( Cons ( Zero )
        ( Cons x1 ( Nil )
          ) ) )
  
0.0546 false

([2],3) -> [2,3];
([1,2],2) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons x1 ( Nil ) )
      )
  
0.0104 false

([2],1) -> [1,2];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons
      if
        (equal_to
          ( hd1, ( Zero )
            )) then hd1
        else x1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then
          (f0
            ( tl1, x1 ))
        else x0 )
  
0.1472 false

([3],1) -> [1,3];
([0,0],2) -> [0,0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 ->
      ( Cons ( Zero )
        ( Cons x1 x0 ) )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons hd1
        (f0 ( tl1, x1 ))
        )
    
  
0.2697 false

([1,0,1],0) -> [0,1,0,1];
([2,3,0],3) -> [2,3,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0147 false

([0,0],3) -> [0,0,3];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 ->
      ( Cons ( Zero )
        ( Cons x1 x0 ) )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons hd1
        (f0 ( tl1, x1 ))
        )
    
  
0.4767 false

([1,0],3) -> [1,0,3];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0138 false

([1],3) -> [1,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0060 false

([1,2,3],1) -> [1,2,3];
([3,3],0) -> [0,3,3];
([1,1],1) -> [1,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0139 false

([2,1,3],1) -> [1,2,1,3];
([2,3],0) -> [0,2,3];
([2],2) -> [2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  
0.4709 false

([3,2,1],3) -> [3,2,1];
([3,3,0],3) -> [3,3,0];
([2],2) -> [2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0754 false

([2,1],2) -> [2,1];
([1],0) -> [0,1];
([1,0],1) -> [1,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0097 false

([3,2],0) -> [0,3,2];
([1,3,1],0) -> [0,1,3,1];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0101 false

([0,3],1) -> [0,1,3];
([1,3,3],2) -> [1,2,3,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons x1 tl1 ) )
  
0.0219 false

([0,2],2) -> [0,2];
([2,2,3],1) -> [1,2,2,3];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
None
([3],0) -> [0,3];
([1],2) -> [1,2];
([0,1,3],3) -> [0,1,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, x1 ))
      then
        (f0 ( tl1, x1 ))
      else
        ( Cons
          if
            (equal_to
              ( x1,
                ( Zero )
                ))
            then x1
            else hd1
          if
            (equal_to
              ( x1,
                ( Zero )
                ))
            then x0
            else
              (f0
                ( tl1, x1
                  )) )
  
99.4824 false

([2,3],2) -> [2,3];
([3],3) -> [3];
([0,3,3],0) -> [0,3,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0162 false

([2,1],0) -> [0,2,1];
([2],3) -> [2,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 ->
    ( Cons n1
      ( Cons x1 ( Nil ) )
      )
  
0.0065 false

([3,0,1],0) -> [0,3,0,1];
([1,1],3) -> [1,1,3];
([2,3],2) -> [2,3];
([0,3],3) -> [0,3];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([0,3],3) -> [0,3];
([1],2) -> [1,2];
([2,2],0) -> [0,2,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 ->
      ( Cons hd2
        ( Cons x1 ( Nil )
          ) )
    
  
1.0780 false

([0],0) -> [0];
([3,0,2],0) -> [0,3,0,2];
([3,2],3) -> [3,2];
([2,1,1],1) -> [1,2,1,1];
([], 0) -> [0];

=================================
None
([3,0],1) -> [1,3,0];
([3,3],1) -> [1,3,3];
([0],3) -> [0,3];
([3,2],1) -> [1,3,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2
        ( Cons x1 tl2 ) )
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  
2.9595 false

([3,2],0) -> [0,3,2];
([1,0],2) -> [1,0,2];
([1],1) -> [1];
([1,2,3],0) -> [0,1,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z ->
    match (x0) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  | Sn2 ->
    match (n2) with
    | Z -> x0
    | Sn1 ->
      ( Cons n2
        ( Cons n1
          ( Cons x1
            ( Nil ) ) ) )
    
  
1.4328 false

([1],3) -> [1,3];
([1,2],2) -> [1,2];
([3,1],3) -> [3,1];
([1,1,0],2) -> [1,1,0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> x0
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2
        ( Cons x1 tl2 ) )
    | hd1::tl1 ->
      ( Cons hd2
        ( Cons hd1
          (f0
            ( tl1, x1 ))
          ) )
    
  
99.7139 false

([1,2,1],1) -> [1,2,1];
([3],0) -> [0,3];
([1,0],3) -> [1,0,3];
([3,1,2],3) -> [3,1,2];
([], 0) -> [0];

=================================
None
([3],1) -> [1,3];
([3,0,2],1) -> [1,3,0,2];
([3,1,3],2) -> [2,3,1,3];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([2,3],1) -> [1,2,3];
([1,3,2],1) -> [1,3,2];
([3,0],1) -> [1,3,0];
([3,2,0],3) -> [3,2,0];
([], 0) -> [0];

=================================
None
([3],2) -> [2,3];
([3,0],1) -> [1,3,0];
([3,1],1) -> [1,3,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    ( Cons
      match (tl2) with
      | [] ->
        ( Succ
          ( Succ ( Zero )
            ) )
      | hd1::tl1 -> x1
      match (x1) with
      | Z -> ( Nil )
      | Sn1 ->
        ( Cons
          ( Succ
            ( Succ
              ( Succ
                ( Zero )
                ) ) ) tl2
          )
      )
  
5.3314 false

([0,2],2) -> [0,2];
([2],1) -> [1,2];
([1,0],3) -> [1,0,3];
([0,1],1) -> [0,1];
([0,1,2],0) -> [0,1,2];
([], 0) -> [0];

=================================
None
([0,3],1) -> [0,1,3];
([2,2],1) -> [1,2,2];
([2,0,0],2) -> [2,0,0];
([0],1) -> [0,1];
([1],1) -> [1];
([], 0) -> [0];

=================================
None
([1,2],2) -> [1,2];
([0,3],1) -> [0,1,3];
([1],0) -> [0,1];
([0,3,0],0) -> [0,3,0];
([1,1],0) -> [0,1,1];
([], 0) -> [0];

=================================
None
([1,2,1],3) -> [1,2,1,3];
([0],1) -> [0,1];
([2,0,2],2) -> [2,0,2];
([2,2,2],3) -> [2,2,2,3];
([0,1],3) -> [0,1,3];
([], 0) -> [0];

=================================
None
([1],1) -> [1];
([0,1,2],1) -> [0,1,2];
([0],3) -> [0,3];
([1],2) -> [1,2];
([2,2,1],1) -> [1,2,2,1];
([], 0) -> [0];

=================================
None
([3,0],1) -> [1,3,0];
([2,3,0],3) -> [2,3,0];
([2],3) -> [2,3];
([1,0],3) -> [1,0,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
None
([2],1) -> [1,2];
([0],2) -> [0,2];
([0],1) -> [0,1];
([3,2,2],2) -> [2,3,2,2];
([1],0) -> [0,1];
([], 0) -> [0];

=================================
None
([3],0) -> [0,3];
([2,3],3) -> [2,3];
([0,2],3) -> [0,2,3];
([2,3,3],2) -> [2,3,3];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
None
([0],3) -> [0,3];
([2,1],2) -> [2,1];
([2],2) -> [2];
([3,1,2],2) -> [2,3,1,2];
([0,1,0],2) -> [0,1,0,2];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([1,1,3],1) -> [1,1,3];
([3,3,1],2) -> [2,3,3,1];
([3],3) -> [3];
([3,1,1],0) -> [0,3,1,1];
([], 0) -> [0];

=================================
None
([0,1],3) -> [0,1,3];
([3,3],3) -> [3,3];
([0,3,0],0) -> [0,3,0];
([2,2],3) -> [2,2,3];
([0],2) -> [0,2];
([3],3) -> [3];
([], 0) -> [0];

=================================
None
([0,3],3) -> [0,3];
([0],0) -> [0];
([0],1) -> [0,1];
([3,2,2],3) -> [3,2,2];
([0,1,1],0) -> [0,1,1];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
None
([3,3,1],3) -> [3,3,1];
([1,1,3],0) -> [0,1,1,3];
([0,0,1],2) -> [0,0,1,2];
([0,1,1],1) -> [0,1,1];
([3,1,2],1) -> [1,3,1,2];
([1,2,2],1) -> [1,2,2];
([], 0) -> [0];

=================================
None
([2,3,3],2) -> [2,3,3];
([2,0,1],2) -> [2,0,1];
([0],1) -> [0,1];
([3,0],1) -> [1,3,0];
([2,3,3],3) -> [2,3,3];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
None
([3,0,0],2) -> [2,3,0,0];
([1,1],0) -> [0,1,1];
([2,0,2],1) -> [1,2,0,2];
([1],1) -> [1];
([2,2,3],1) -> [1,2,2,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
None
([3],0) -> [0,3];
([0],0) -> [0];
([0,0],1) -> [0,0,1];
([2],3) -> [2,3];
([1,1],3) -> [1,1,3];
([1,0],0) -> [0,1,0];
([], 0) -> [0];

=================================
None
([3,3,0],3) -> [3,3,0];
([0,0,0],2) -> [0,0,0,2];
([3],2) -> [2,3];
([3,2],0) -> [0,3,2];
([1],1) -> [1];
([3],3) -> [3];
([], 0) -> [0];

=================================
None
([3,1,2],3) -> [3,1,2];
([0],0) -> [0];
([0],2) -> [0,2];
([3,1],2) -> [2,3,1];
([2],2) -> [2];
([2,0,3],3) -> [2,0,3];
([], 0) -> [0];

=================================
None
([2],3) -> [2,3];
([0,2,3],1) -> [0,1,2,3];
([3],0) -> [0,3];
([3],2) -> [2,3];
([0,2,0],2) -> [0,2,0];
([3],3) -> [3];
([], 0) -> [0];

=================================
None
([2],2) -> [2];
([0,0],3) -> [0,0,3];
([2,2],3) -> [2,2,3];
([3],0) -> [0,3];
([0],2) -> [0,2];
([1,3,3],0) -> [0,1,3,3];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([2,2],1) -> [1,2,2];
([1,1],1) -> [1,1];
([0,1],2) -> [0,1,2];
([1],1) -> [1];
([0,1,1],1) -> [0,1,1];
([1,3],2) -> [1,2,3];
([], 0) -> [0];

=================================
None
([2,3,2],0) -> [0,2,3,2];
([1],3) -> [1,3];
([2],1) -> [1,2];
([3,1,0],2) -> [2,3,1,0];
([2,0,0],2) -> [2,0,0];
([1,1],0) -> [0,1,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
None
([3,1,0],2) -> [2,3,1,0];
([0,3],1) -> [0,1,3];
([0,2],1) -> [0,1,2];
([1],3) -> [1,3];
([3,2],3) -> [3,2];
([1,0,1],1) -> [1,0,1];
([3,1,1],3) -> [3,1,1];
([], 0) -> [0];

=================================
None
([1,0,0],3) -> [1,0,0,3];
([2,2,2],1) -> [1,2,2,2];
([2],2) -> [2];
([3],2) -> [2,3];
([2,0,2],3) -> [2,0,2,3];
([3],0) -> [0,3];
([2,0,3],3) -> [2,0,3];
([], 0) -> [0];

=================================
None
([3,1],1) -> [1,3,1];
([3,3],2) -> [2,3,3];
([2],1) -> [1,2];
([1,0,3],1) -> [1,0,3];
([0,1],3) -> [0,1,3];
([1],3) -> [1,3];
([3,2,1],0) -> [0,3,2,1];
([], 0) -> [0];

=================================
None
([0,1],1) -> [0,1];
([2,2,1],2) -> [2,2,1];
([0,3,2],2) -> [0,2,3,2];
([3,0,1],0) -> [0,3,0,1];
([0,1],0) -> [0,1];
([0,1],2) -> [0,1,2];
([3,3,3],0) -> [0,3,3,3];
([], 0) -> [0];

=================================
None
([1,1],3) -> [1,1,3];
([2,3,0],2) -> [2,3,0];
([3,2,3],0) -> [0,3,2,3];
([0,2],2) -> [0,2];
([1,3],3) -> [1,3];
([3,0],1) -> [1,3,0];
([3,1,1],3) -> [3,1,1];
([], 0) -> [0];

=================================
None
([3,3,0],3) -> [3,3,0];
([2],3) -> [2,3];
([0,2,1],0) -> [0,2,1];
([3,2],1) -> [1,3,2];
([1],2) -> [1,2];
([3,1],2) -> [2,3,1];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
None
([2,2,3],0) -> [0,2,2,3];
([2,1],1) -> [1,2,1];
([3,1],0) -> [0,3,1];
([1,0,1],3) -> [1,0,1,3];
([2,0],2) -> [2,0];
([0,1,0],1) -> [0,1,0];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
None
([3],1) -> [1,3];
([2,1],0) -> [0,2,1];
([2,2],3) -> [2,2,3];
([3],3) -> [3];
([1,2,3],1) -> [1,2,3];
([1],2) -> [1,2];
([0,1],2) -> [0,1,2];
([], 0) -> [0];

=================================
None
([1,1,0],3) -> [1,1,0,3];
([1],0) -> [0,1];
([0,0,0],3) -> [0,0,0,3];
([3,3,2],2) -> [2,3,3,2];
([0,1],3) -> [0,1,3];
([2],1) -> [1,2];
([2],0) -> [0,2];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([1,0],0) -> [0,1,0];
([1,2,1],1) -> [1,2,1];
([2,0,3],2) -> [2,0,3];
([0],0) -> [0];
([2,1],0) -> [0,2,1];
([1],0) -> [0,1];
([3],3) -> [3];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
None
([0,2,0],2) -> [0,2,0];
([1,0],2) -> [1,0,2];
([2,3],0) -> [0,2,3];
([0,0,1],0) -> [0,0,1];
([3,2],2) -> [2,3,2];
([2,2,2],2) -> [2,2,2];
([0],2) -> [0,2];
([2,2,3],2) -> [2,2,3];
([], 0) -> [0];

=================================
None
([2,0],0) -> [0,2,0];
([3],2) -> [2,3];
([1],2) -> [1,2];
([0],0) -> [0];
([1,3,0],2) -> [1,2,3,0];
([3],1) -> [1,3];
([3,3,0],1) -> [1,3,3,0];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([2,2],0) -> [0,2,2];
([2],1) -> [1,2];
([1,0],0) -> [0,1,0];
([0,3,1],2) -> [0,2,3,1];
([0,0,1],1) -> [0,0,1];
([2],2) -> [2];
([2,1,2],0) -> [0,2,1,2];
([], 0) -> [0];

=================================
None
([1,0,2],0) -> [0,1,0,2];
([3],0) -> [0,3];
([0],2) -> [0,2];
([2,0,1],0) -> [0,2,0,1];
([2,3,0],1) -> [1,2,3,0];
([1],1) -> [1];
([0],1) -> [0,1];
([3,3],3) -> [3,3];
([], 0) -> [0];

=================================
None
([2,3],3) -> [2,3];
([2],1) -> [1,2];
([0,2],0) -> [0,2];
([3,2,0],2) -> [2,3,2,0];
([3,2],0) -> [0,3,2];
([2,0,2],1) -> [1,2,0,2];
([0,3,3],3) -> [0,3,3];
([1,2,1],2) -> [1,2,1];
([], 0) -> [0];

=================================
None
([2,2,1],1) -> [1,2,2,1];
([1],2) -> [1,2];
([1,1],3) -> [1,1,3];
([3],0) -> [0,3];
([3],2) -> [2,3];
([2,0],0) -> [0,2,0];
([0,2],1) -> [0,1,2];
([3,0,0],2) -> [2,3,0,0];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([2],0) -> [0,2];
([3,0,0],2) -> [2,3,0,0];
([2],3) -> [2,3];
([2,2],1) -> [1,2,2];
([2,0,1],0) -> [0,2,0,1];
([1,0],0) -> [0,1,0];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
None
([2],3) -> [2,3];
([3,0,1],0) -> [0,3,0,1];
([1],0) -> [0,1];
([0],1) -> [0,1];
([3,3,3],0) -> [0,3,3,3];
([3],2) -> [2,3];
([0,0,0],0) -> [0,0,0];
([1,1],0) -> [0,1,1];
([], 0) -> [0];

=================================
None
([1],1) -> [1];
([0,3,2],0) -> [0,3,2];
([0,0],3) -> [0,0,3];
([2,1],1) -> [1,2,1];
([0],1) -> [0,1];
([0,1],1) -> [0,1];
([2,3],0) -> [0,2,3];
([0,3,3],2) -> [0,2,3,3];
([3,1],3) -> [3,1];
([], 0) -> [0];

=================================
None
([0],2) -> [0,2];
([2],2) -> [2];
([1],0) -> [0,1];
([0],1) -> [0,1];
([2,0,0],0) -> [0,2,0,0];
([0,1,1],3) -> [0,1,1,3];
([1,0],1) -> [1,0];
([1,1],0) -> [0,1,1];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
None
([0,2,1],1) -> [0,1,2,1];
([3,2,1],1) -> [1,3,2,1];
([1],3) -> [1,3];
([0,3,0],1) -> [0,1,3,0];
([0,0],2) -> [0,0,2];
([3],2) -> [2,3];
([2,1,0],1) -> [1,2,1,0];
([3,1],0) -> [0,3,1];
([0,3,2],0) -> [0,3,2];
([], 0) -> [0];

=================================
None
([3,2,3],0) -> [0,3,2,3];
([2,2,0],0) -> [0,2,2,0];
([0],3) -> [0,3];
([3,1],2) -> [2,3,1];
([3],3) -> [3];
([1,2,3],1) -> [1,2,3];
([1,3],2) -> [1,2,3];
([1],3) -> [1,3];
([2,2,0],2) -> [2,2,0];
([], 0) -> [0];

=================================
None
([0,2,3],2) -> [0,2,3];
([2,2],3) -> [2,2,3];
([1,2],3) -> [1,2,3];
([0,0,0],3) -> [0,0,0,3];
([0,3],2) -> [0,2,3];
([0,0,2],0) -> [0,0,2];
([2],3) -> [2,3];
([0,2],0) -> [0,2];
([0,0,2],2) -> [0,0,2];
([], 0) -> [0];

=================================
None
([1],2) -> [1,2];
([1,3],2) -> [1,2,3];
([3,1,3],3) -> [3,1,3];
([1,0],2) -> [1,0,2];
([0,2,3],0) -> [0,2,3];
([0,1,1],3) -> [0,1,1,3];
([1,2,2],2) -> [1,2,2];
([1,1,1],3) -> [1,1,1,3];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
None
([3],3) -> [3];
([2,0],0) -> [0,2,0];
([1],2) -> [1,2];
([1,2,0],1) -> [1,2,0];
([2,1],1) -> [1,2,1];
([0,3,3],0) -> [0,3,3];
([1],3) -> [1,3];
([3,1,2],2) -> [2,3,1,2];
([3,2],2) -> [2,3,2];
([], 0) -> [0];

=================================
None
([3,3,2],2) -> [2,3,3,2];
([2],0) -> [0,2];
([3,0],0) -> [0,3,0];
([2,3],2) -> [2,3];
([0,3,3],2) -> [0,2,3,3];
([1,3],2) -> [1,2,3];
([0,0,2],0) -> [0,0,2];
([2,0,0],3) -> [2,0,0,3];
([0,3,3],3) -> [0,3,3];
([], 0) -> [0];

=================================
None
([3],1) -> [1,3];
([1,1,1],2) -> [1,1,1,2];
([3,1,2],3) -> [3,1,2];
([0],2) -> [0,2];
([0,0,2],1) -> [0,0,1,2];
([1,2,1],3) -> [1,2,1,3];
([0,0],0) -> [0,0];
([0,3,3],2) -> [0,2,3,3];
([1,1,0],0) -> [0,1,1,0];
([], 0) -> [0];

=================================
None
([0,0],0) -> [0,0];
([0,1],1) -> [0,1];
([1],0) -> [0,1];
([1,3,3],1) -> [1,3,3];
([2],2) -> [2];
([0,1,2],3) -> [0,1,2,3];
([3,3],2) -> [2,3,3];
([0],3) -> [0,3];
([2,1,0],0) -> [0,2,1,0];
([], 0) -> [0];

=================================
None
([2,3],3) -> [2,3];
([3,0,3],1) -> [1,3,0,3];
([0,1],2) -> [0,1,2];
([1,3],0) -> [0,1,3];
([0],2) -> [0,2];
([2,2,3],1) -> [1,2,2,3];
([3,0,0],3) -> [3,0,0];
([1],1) -> [1];
([1],3) -> [1,3];
([1,2],3) -> [1,2,3];
([], 0) -> [0];

=================================
None
([3,0,3],1) -> [1,3,0,3];
([3],2) -> [2,3];
([0,0,1],3) -> [0,0,1,3];
([3,0],2) -> [2,3,0];
([1,3],3) -> [1,3];
([1],0) -> [0,1];
([1,3,1],0) -> [0,1,3,1];
([3],1) -> [1,3];
([3,3,0],3) -> [3,3,0];
([2,3],2) -> [2,3];
([], 0) -> [0];

=================================
None
([2,3],2) -> [2,3];
([2,2,3],3) -> [2,2,3];
([1],1) -> [1];
([3],0) -> [0,3];
([1,3,3],3) -> [1,3,3];
([0,1,1],2) -> [0,1,1,2];
([2,2],1) -> [1,2,2];
([0,3],1) -> [0,1,3];
([2,3,2],2) -> [2,3,2];
([2,3,0],1) -> [1,2,3,0];
([], 0) -> [0];

=================================
None
([0,3],3) -> [0,3];
([2,0],2) -> [2,0];
([3,0],1) -> [1,3,0];
([3],2) -> [2,3];
([1],3) -> [1,3];
([0],0) -> [0];
([2],2) -> [2];
([0,0,1],1) -> [0,0,1];
([0],3) -> [0,3];
([3,0,1],1) -> [1,3,0,1];
([], 0) -> [0];

=================================
None
([3,0,1],1) -> [1,3,0,1];
([1,3,1],2) -> [1,2,3,1];
([2,3],2) -> [2,3];
([1,0,0],1) -> [1,0,0];
([0,3,0],0) -> [0,3,0];
([0,0,3],2) -> [0,0,2,3];
([0,1],3) -> [0,1,3];
([2,2],0) -> [0,2,2];
([1,0,3],3) -> [1,0,3];
([3,2],1) -> [1,3,2];
([], 0) -> [0];

=================================
None
([0,0],3) -> [0,0,3];
([2],0) -> [0,2];
([1,0],1) -> [1,0];
([2],2) -> [2];
([0,3],3) -> [0,3];
([1,2,2],0) -> [0,1,2,2];
([1],0) -> [0,1];
([3,1,1],2) -> [2,3,1,1];
([0,3,1],3) -> [0,3,1];
([1,3,3],2) -> [1,2,3,3];
([], 0) -> [0];

=================================
None
([1,1],1) -> [1,1];
([0,3,1],3) -> [0,3,1];
([2,0,3],3) -> [2,0,3];
([3,3,2],2) -> [2,3,3,2];
([2],1) -> [1,2];
([2,0,2],0) -> [0,2,0,2];
([2,3],3) -> [2,3];
([3],1) -> [1,3];
([3],0) -> [0,3];
([2,2],1) -> [1,2,2];
([], 0) -> [0];

=================================
None
([0,0],0) -> [0,0];
([2,3],1) -> [1,2,3];
([2],1) -> [1,2];
([0,1,2],1) -> [0,1,2];
([2,2],0) -> [0,2,2];
([0,3,2],0) -> [0,3,2];
([2,3,3],1) -> [1,2,3,3];
([0,2],3) -> [0,2,3];
([1,3,3],0) -> [0,1,3,3];
([1,1,1],3) -> [1,1,1,3];
([], 0) -> [0];

=================================
None
([0],2) -> [0,2];
([1,0,1],0) -> [0,1,0,1];
([1],2) -> [1,2];
([0,1],0) -> [0,1];
([0,3,3],2) -> [0,2,3,3];
([3],1) -> [1,3];
([3,2],2) -> [2,3,2];
([2,1,0],3) -> [2,1,0,3];
([0,1],3) -> [0,1,3];
([3,1,0],0) -> [0,3,1,0];
([], 0) -> [0];

=================================
None
([2,2],3) -> [2,2,3];
([1,2,0],0) -> [0,1,2,0];
([0,2],1) -> [0,1,2];
([0,1],1) -> [0,1];
([1,3],2) -> [1,2,3];
([0],1) -> [0,1];
([0,1],2) -> [0,1,2];
([0,3],0) -> [0,3];
([0,3],3) -> [0,3];
([3],1) -> [1,3];
([], 0) -> [0];

=================================
None
