([0,3,0],3) -> [0,3,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0174 false
Time(s): 0.15 
Mem(Kb): 29608

([1],3) -> [1,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0060 false
Time(s): 0.03 
Mem(Kb): 29052

([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0013 false
Time(s): 0.02 
Mem(Kb): 28064

([3,3,2],3) -> [3,3,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0146 false
Time(s): 0.04 
Mem(Kb): 29500

([3,3],1) -> [1,3,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0035 false
Time(s): 0.02 
Mem(Kb): 28984

([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0030 false
Time(s): 0.02 
Mem(Kb): 29012

([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0026 false
Time(s): 0.02 
Mem(Kb): 29036

([3,1,3],3) -> [3,1,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0152 false
Time(s): 0.04 
Mem(Kb): 29492

([1],3) -> [1,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0053 false
Time(s): 0.03 
Mem(Kb): 29124

([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0013 false
Time(s): 0.02 
Mem(Kb): 28108

([0],2) -> [0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0034 false
Time(s): 0.02 
Mem(Kb): 29056

([3,3,2],3) -> [3,3,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0133 false
Time(s): 0.03 
Mem(Kb): 29480

([0,0],2) -> [0,0,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0066 false
Time(s): 0.03 
Mem(Kb): 29148

([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0013 false
Time(s): 0.02 
Mem(Kb): 28048

([0,2,2],3) -> [0,2,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0142 false
Time(s): 0.03 
Mem(Kb): 29548

([3,1,2],2) -> [2,3,1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0098 false
Time(s): 0.03 
Mem(Kb): 29368

([3,1,0],0) -> [0,3,1,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0030 false
Time(s): 0.02 
Mem(Kb): 28952

([0,2],1) -> [0,1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons x1 tl1 ) )
  
0.0036 false
Time(s): 0.02 
Mem(Kb): 29036

([3,3,1],2) -> [2,3,3,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0100 false
Time(s): 0.03 
Mem(Kb): 29268

([0,0,3],3) -> [0,0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 -> x0
  
0.0140 false
Time(s): 0.03 
Mem(Kb): 29452

([3],1) -> [1,3];
([3,3,0],3) -> [3,3,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons hd1
        (f0 ( tl1, x1 ))
        )
    
  
0.7041 false
Time(s): 0.73 
Mem(Kb): 36648

([0],3) -> [0,3];
([3,0],0) -> [0,3,0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 ->
    ( Cons ( Zero )
      ( Cons x1 ( Nil ) )
      )
  
0.0072 false
Time(s): 0.03 
Mem(Kb): 29180

([0],0) -> [0];
([2,3],0) -> [0,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  
0.0308 false
Time(s): 0.05 
Mem(Kb): 32692

([2,2],3) -> [2,2,3];
([3,2,3],3) -> [3,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons
        ( Succ
          ( Succ ( Zero )
            ) )
        ( Cons x1 ( Nil )
          ) ) )
  
1.0274 false
Time(s): 1.05 
Mem(Kb): 37504

([2],3) -> [2,3];
([1,2],2) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons x1 ( Nil ) )
      )
  
0.0130 false
Time(s): 0.03 
Mem(Kb): 29404

([1,2,0],0) -> [0,1,2,0];
([2,1],1) -> [1,2,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0062 false
Time(s): 0.03 
Mem(Kb): 29212

([1,0],3) -> [1,0,3];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0157 false
Time(s): 0.04 
Mem(Kb): 29588

([2,1,2],0) -> [0,2,1,2];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0064 false
Time(s): 0.03 
Mem(Kb): 29172

([1,3],1) -> [1,3];
([3,2,3],0) -> [0,3,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0071 false
Time(s): 0.03 
Mem(Kb): 29160

([1],0) -> [0,1];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0039 false
Time(s): 0.03 
Mem(Kb): 29092

([1,2,0],0) -> [0,1,2,0];
([1],3) -> [1,3];
([0],0) -> [0];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, x1 ))
      then x0
      else
        ( Cons
          if
            (equal_to
              ( x1,
                ( Zero )
                ))
            then x1
            else hd1
          if
            (equal_to
              ( x1,
                ( Zero )
                ))
            then x0
            else
              (f0
                ( tl1, x1
                  )) )
  
2.7224 false
Time(s): 2.75 
Mem(Kb): 52836

([0],1) -> [0,1];
([3,0,3],0) -> [0,3,0,3];
([1,1,3],2) -> [1,1,2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2
        ( Cons x1 tl2 ) )
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2
          ( Cons x1 tl1 )
          ) )
    
  
1.4608 false
Time(s): 1.48 
Mem(Kb): 53584

([0,2,2],2) -> [0,2,2];
([2,2,0],2) -> [2,2,0];
([0,0],1) -> [0,0,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 ->
      ( Cons x1 x0 )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd2
        ( Cons hd1
          (f0
            ( tl1, x1 ))
          ) )
    
  
6.5879 false
Time(s): 6.62 
Mem(Kb): 192348

([2,1],0) -> [0,2,1];
([2],3) -> [2,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 ->
    ( Cons n1
      ( Cons x1 ( Nil ) )
      )
  
0.0070 false
Time(s): 0.03 
Mem(Kb): 29196

([3],3) -> [3];
([1],0) -> [0,1];
([2],1) -> [1,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z ->
    match (x0) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  | Sn2 ->
    match (n2) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> x0
    
  
0.1101 false
Time(s): 0.13 
Mem(Kb): 32848

([0,0,0],2) -> [0,0,0,2];
([3,2,2],0) -> [0,3,2,2];
([1,2,3],3) -> [1,2,3];
([], 0) -> [0];

=================================
None
([2,1,3],1) -> [1,2,1,3];
([2,3],0) -> [0,2,3];
([2],2) -> [2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | Z -> ( Cons x1 x0 )
    | Sn1 -> ( Nil )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  
0.5443 false
Time(s): 0.57 
Mem(Kb): 37056

([3,3],1) -> [1,3,3];
([3],0) -> [0,3];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0073 false
Time(s): 0.03 
Mem(Kb): 29232

([0,3],0) -> [0,3];
([1,3],3) -> [1,3];
([2,2,2],3) -> [2,2,2,3];
([], 0) -> [0];

=================================
None
([1,2,3],1) -> [1,2,3];
([3,3],0) -> [0,3,3];
([1,1],1) -> [1,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z -> ( Cons x1 x0 )
  | Sn1 -> x0
  
0.0202 false
Time(s): 0.04 
Mem(Kb): 29680

([1],2) -> [1,2];
([0,0,0],2) -> [0,0,0,2];
([2,0],0) -> [0,2,0];
([1,1,2],1) -> [1,1,2];
([], 0) -> [0];

=================================
None
([2,1,1],1) -> [1,2,1,1];
([0,1,2],1) -> [0,1,2];
([1,2],3) -> [1,2,3];
([0,1],1) -> [0,1];
([], 0) -> [0];

=================================
None
([1],3) -> [1,3];
([2],1) -> [1,2];
([1,2],2) -> [1,2];
([1],0) -> [0,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | Z ->
    match (x0) with
    | [] ->
      ( Cons x1 x0 )
    | hd1::tl1 ->
      ( Cons x1 x0 )
    
  | Sn2 ->
    match (n2) with
    | Z -> ( Cons x1 x0 )
    | Sn1 ->
      ( Cons
        ( Succ ( Zero ) )
        ( Cons x1 ( Nil )
          ) )
    
  
1.2218 false
Time(s): 1.28 
Mem(Kb): 35768

([2,1],1) -> [1,2,1];
([2,1,0],0) -> [0,2,1,0];
([1,2],3) -> [1,2,3];
([0,1,1],1) -> [0,1,1];
([], 0) -> [0];

=================================
None
([1,2],3) -> [1,2,3];
([0],1) -> [0,1];
([3,2],1) -> [1,3,2];
([0,3],2) -> [0,2,3];
([], 0) -> [0];

=================================
None
([2,0],1) -> [1,2,0];
([0],2) -> [0,2];
([2,0],2) -> [2,0];
([3,3,2],0) -> [0,3,3,2];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, x1 ))
      then x0
      else
        ( Cons
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then hd1
            else x1
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then
              (f0
                ( tl1, x1
                  ))
            else x0 )
  
62.1562 false
Time(s): 62.24 
Mem(Kb): 406780

([3,1],3) -> [3,1];
([2,3,3],3) -> [2,3,3];
([0,2],1) -> [0,1,2];
([2],2) -> [2];
([], 0) -> [0];

=================================
None
([1,2,1],1) -> [1,2,1];
([3],0) -> [0,3];
([1,0],3) -> [1,0,3];
([3,1,2],3) -> [3,1,2];
([], 0) -> [0];

=================================
None
([2,2,1],3) -> [2,2,1,3];
([1],2) -> [1,2];
([0,3],3) -> [0,3];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
None
([1,1],2) -> [1,1,2];
([0],3) -> [0,3];
([2,0],2) -> [2,0];
([0,0,0],2) -> [0,0,0,2];
([], 0) -> [0];

=================================
None
([2],0) -> [0,2];
([3,0,2],2) -> [2,3,0,2];
([2,0],3) -> [2,0,3];
([2,0,1],1) -> [1,2,0,1];
([3,3],3) -> [3,3];
([], 0) -> [0];

=================================
None
([0,2,0],0) -> [0,2,0];
([0,3],0) -> [0,3];
([3,0],2) -> [2,3,0];
([2,2],1) -> [1,2,2];
([3,1,1],0) -> [0,3,1,1];
([], 0) -> [0];

=================================
None
([1,1],0) -> [0,1,1];
([2],2) -> [2];
([2,0,0],3) -> [2,0,0,3];
([3,2,0],3) -> [3,2,0];
([2,3,2],2) -> [2,3,2];
([], 0) -> [0];

=================================
None
([0],3) -> [0,3];
([2,1],2) -> [2,1];
([2],2) -> [2];
([3,1,2],2) -> [2,3,1,2];
([0,1,0],2) -> [0,1,0,2];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([1,1,3],1) -> [1,1,3];
([3,3,1],2) -> [2,3,3,1];
([3],3) -> [3];
([3,1,1],0) -> [0,3,1,1];
([], 0) -> [0];

=================================
None
([3,0],1) -> [1,3,0];
([2,3,0],3) -> [2,3,0];
([2],3) -> [2,3];
([1,0],3) -> [1,0,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
None
([3],0) -> [0,3];
([2,3],3) -> [2,3];
([0,2],3) -> [0,2,3];
([2,3,3],2) -> [2,3,3];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
None
([0,0,1],2) -> [0,0,1,2];
([3,1],0) -> [0,3,1];
([1,2,2],1) -> [1,2,2];
([0],2) -> [0,2];
([3,2,2],3) -> [3,2,2];
([], 0) -> [0];

=================================
None
([2,3,2],0) -> [0,2,3,2];
([3],1) -> [1,3];
([1],0) -> [0,1];
([2,3],1) -> [1,2,3];
([2,2,1],0) -> [0,2,2,1];
([], 0) -> [0];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> ( Cons x1 x0 )
  | hd1::tl1 ->
    ( Cons x1 x0 )
  
0.0155 false
Time(s): 0.04 
Mem(Kb): 29536

([0,2],2) -> [0,2];
([2],1) -> [1,2];
([1,0],3) -> [1,0,3];
([0,1],1) -> [0,1];
([0,1,2],0) -> [0,1,2];
([], 0) -> [0];

=================================
None
([3],0) -> [0,3];
([0],1) -> [0,1];
([3],1) -> [1,3];
([3,2,2],1) -> [1,3,2,2];
([2],1) -> [1,2];
([1,1],3) -> [1,1,3];
([], 0) -> [0];

=================================
None
([0,3],3) -> [0,3];
([0],0) -> [0];
([0],1) -> [0,1];
([3,2,2],3) -> [3,2,2];
([0,1,1],0) -> [0,1,1];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
None
([3,3,1],3) -> [3,3,1];
([1,1,3],0) -> [0,1,1,3];
([0,0,1],2) -> [0,0,1,2];
([0,1,1],1) -> [0,1,1];
([3,1,2],1) -> [1,3,1,2];
([1,2,2],1) -> [1,2,2];
([], 0) -> [0];

=================================
None
([3],1) -> [1,3];
([2,2,1],0) -> [0,2,2,1];
([3,0,2],2) -> [2,3,0,2];
([3,0,0],0) -> [0,3,0,0];
([0,1],2) -> [0,1,2];
([3,2,2],1) -> [1,3,2,2];
([], 0) -> [0];

=================================
None
([3,0,0],2) -> [2,3,0,0];
([1,1],0) -> [0,1,1];
([2,0,2],1) -> [1,2,0,2];
([1],1) -> [1];
([2,2,3],1) -> [1,2,2,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
None
([3,3,0],3) -> [3,3,0];
([0,0,0],2) -> [0,0,0,2];
([3],2) -> [2,3];
([3,2],0) -> [0,3,2];
([1],1) -> [1];
([3],3) -> [3];
([], 0) -> [0];

=================================
None
([0],1) -> [0,1];
([2,1],0) -> [0,2,1];
([0],3) -> [0,3];
([3,3,3],0) -> [0,3,3,3];
([3],1) -> [1,3];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
None
([1],1) -> [1];
([0],1) -> [0,1];
([3,0],2) -> [2,3,0];
([2,0],3) -> [2,0,3];
([1],3) -> [1,3];
([3,0,1],3) -> [3,0,1];
([], 0) -> [0];

=================================
None
([2],3) -> [2,3];
([0,1],3) -> [0,1,3];
([2,2,1],2) -> [2,2,1];
([3,0,1],3) -> [3,0,1];
([0,2,1],1) -> [0,1,2,1];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
None
([1,0],1) -> [1,0];
([0],2) -> [0,2];
([3,0],1) -> [1,3,0];
([2,3,1],3) -> [2,3,1];
([0,2,3],2) -> [0,2,3];
([1],1) -> [1];
([], 0) -> [0];

=================================
None
([2,2],3) -> [2,2,3];
([0],3) -> [0,3];
([3,3,1],3) -> [3,3,1];
([1,2],3) -> [1,2,3];
([2],0) -> [0,2];
([0],0) -> [0];
([3,1],3) -> [3,1];
([], 0) -> [0];

=================================
None
([3,3,3],1) -> [1,3,3,3];
([3,3,2],2) -> [2,3,3,2];
([3],2) -> [2,3];
([1,2,3],0) -> [0,1,2,3];
([0],0) -> [0];
([1,2],2) -> [1,2];
([1],3) -> [1,3];
([], 0) -> [0];

=================================
None
([1,2,1],1) -> [1,2,1];
([2],1) -> [1,2];
([2],2) -> [2];
([2,3],0) -> [0,2,3];
([1,0],3) -> [1,0,3];
([0,3],0) -> [0,3];
([2],0) -> [0,2];
([], 0) -> [0];

=================================
None
([2],2) -> [2];
([3,3,2],3) -> [3,3,2];
([3],3) -> [3];
([0,3,2],0) -> [0,3,2];
([1],2) -> [1,2];
([3,2,0],1) -> [1,3,2,0];
([2,0,3],0) -> [0,2,0,3];
([], 0) -> [0];

=================================
None
([1,1],3) -> [1,1,3];
([2,0,1],1) -> [1,2,0,1];
([3,2,0],3) -> [3,2,0];
([1],0) -> [0,1];
([3,3],0) -> [0,3,3];
([1],1) -> [1];
([3,2,0],2) -> [2,3,2,0];
([], 0) -> [0];

=================================
None
([1,3,1],3) -> [1,3,1];
([1],2) -> [1,2];
([2,3,0],2) -> [2,3,0];
([2,0],0) -> [0,2,0];
([3,0],3) -> [3,0];
([2,1,3],3) -> [2,1,3];
([2],1) -> [1,2];
([], 0) -> [0];

=================================
None
([1,0],0) -> [0,1,0];
([0,2,0],0) -> [0,2,0];
([1],3) -> [1,3];
([2],3) -> [2,3];
([3,0],0) -> [0,3,0];
([0,0],0) -> [0,0];
([3,1,2],0) -> [0,3,1,2];
([], 0) -> [0];

=================================
None
([0,3],0) -> [0,3];
([3,3,3],0) -> [0,3,3,3];
([2,0,3],3) -> [2,0,3];
([3,2],2) -> [2,3,2];
([2,0,0],3) -> [2,0,0,3];
([3,0],2) -> [2,3,0];
([0,1],3) -> [0,1,3];
([], 0) -> [0];

=================================
None
([2,1],1) -> [1,2,1];
([1],3) -> [1,3];
([3,2],0) -> [0,3,2];
([2,2,2],3) -> [2,2,2,3];
([0],2) -> [0,2];
([3],3) -> [3];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
None
([1],3) -> [1,3];
([2],2) -> [2];
([1,0,0],1) -> [1,0,0];
([1],0) -> [0,1];
([3,1,3],2) -> [2,3,1,3];
([3,3],3) -> [3,3];
([0,0,0],1) -> [0,0,0,1];
([], 0) -> [0];

=================================
None
