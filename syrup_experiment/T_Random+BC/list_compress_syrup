[3,2,1] -> [3,2,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0023 false

[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0003 false

[3,3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0013 false

[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0015 false

[2,2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0023 false

[3,0,3] -> [3,0,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0023 false

[1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0014 false

[3,3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0023 false

[2,2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0014 false

[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0003 false

[2,0,3] -> [2,0,3];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0025 false

[1,3] -> [1,3];
[1,2] -> [1,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0023 false

[1,1,2] -> [1,2];
[2,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      ( Cons ( Succ hd1 )
        ( Nil ) ) )
  
0.0088 false

[0] -> [0];
[3,3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 ( Nil ) )
  
0.0018 false

[0] -> [0];
[3,3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 ( Nil ) )
  
0.0017 false

[0,3] -> [0,3];
[2,0] -> [2,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0023 false

[2] -> [2];
[1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0020 false

[3,2] -> [3,2];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0020 false

[1] -> [1];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0013 false

[3,1,1] -> [3,1];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        ( False )
    then tl1
      else
        ( Cons
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then ( Zero )
            else hd1
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then tl1
            else (f0 tl1)
          )
  
0.3324 false

[1] -> [1];
[0,3,3] -> [0,3];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then (f0 tl1)
        else ( Nil ) )
  
0.1819 false

[1,3] -> [1,3];
[0,0,3] -> [0,3];
[2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, ( Zero ) ))
      then tl1 else x0
  
0.1885 false

[3,1,0] -> [3,1,0];
[2] -> [2];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0020 false

[0,2,1] -> [0,2,1];
[1,3] -> [1,3];
[1,0,2] -> [1,0,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0059 false

[3,1] -> [3,1];
[3,3] -> [3];
[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        ( False )
    then tl1
      else
        ( Cons hd1
          if
            match (tl1)
              with
            | [] ->
              ( True )
            | hd'1::tl'1
              ->
              (equal_to
                ( hd'1,
                  hd1 ))
          then (f0 tl1)
            else tl1 )
  
0.4332 false

[3] -> [3];
[1] -> [1];
[3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0016 false

[3,2,2] -> [3,2];
[1,1] -> [1];
[0,3,0] -> [0,3,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] ->
        (equal_to
          ( hd1, ( Zero )
            ))
      | hd'1::tl'1 ->
        ( True )
    then
      ( Cons hd1 (f0 tl1)
        ) else tl1
  
1.4328 false

[0,0] -> [0];
[1,3] -> [1,3];
[0,3,1] -> [0,3,1];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (equal_to
        ( hd'1, ( Zero )
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then tl1
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
0.4983 false

[3] -> [3];
[1,2,0] -> [1,2,0];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0026 false

[0,1] -> [0,1];
[3] -> [3];
[3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0025 false

[1,1,2] -> [1,2];
[2,3,0] -> [2,3,0];
[0,2,2] -> [0,2];
[0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then tl1
      else
        ( Cons hd1
          (f0 tl1) )
  
12.5266 false

[2,2,3] -> [2,3];
[2] -> [2];
[0] -> [0];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd1, hd'1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
1.3850 false

[1] -> [1];
[2,2] -> [2];
[2] -> [2];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 ( Nil ) )
  
0.0021 false

[0] -> [0];
[0,2,3] -> [0,2,3];
[1,0,3] -> [1,0,3];
[2,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0046 false

[1,1,1] -> [1];
[2,0] -> [2,0];
[0,3,3] -> [0,3];
[3,0,0] -> [3,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
15.5183 true

[2,3] -> [2,3];
[3,2,2] -> [3,2];
[1] -> [1];
[2,0] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
4.6546 true

[1] -> [1];
[2,3,2] -> [2,3,2];
[0] -> [0];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0029 false

[2,3] -> [2,3];
[0,1] -> [0,1];
[1,1] -> [1];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then ( Nil )
        else (f0 tl1) )
  
0.6273 false

[3] -> [3];
[0,0,0] -> [0];
[0,2] -> [0,2];
[1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1) else x0
  
4.5765 false

[0] -> [0];
[1,0] -> [1,0];
[1] -> [1];
[0,2] -> [0,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0027 false

[0,1,0] -> [0,1,0];
[1] -> [1];
[2,3,0] -> [2,3,0];
[3,1] -> [3,1];
[3,3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
6.7879 false

[1,0,3] -> [1,0,3];
[2] -> [2];
[3,0] -> [3,0];
[3,3] -> [3];
[2,3,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
1.7262 false

[1] -> [1];
[2,1,1] -> [2,1];
[2] -> [2];
[0,1,2] -> [0,1,2];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then ( Nil )
        else (f0 tl1) )
  
2.2302 false

[0] -> [0];
[3,2,1] -> [3,2,1];
[3,1,3] -> [3,1,3];
[1] -> [1];
[1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0056 false

[0,1,1] -> [0,1];
[0] -> [0];
[0,1] -> [0,1];
[2,1,2] -> [2,1,2];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
18.7065 true

[2,0,1] -> [2,0,1];
[2,1] -> [2,1];
[1] -> [1];
[3,3] -> [3];
[0,1] -> [0,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1) else x0
  
0.4104 false

[0] -> [0];
[1,1] -> [1];
[2] -> [2];
[0,1] -> [0,1];
[0,3] -> [0,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then (f0 tl1)
        else ( Nil ) )
  
1.0810 false

[3,1,0] -> [3,1,0];
[0,1,1] -> [0,1];
[3] -> [3];
[1,1,0] -> [1,0];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then (f0 tl1)
            else tl1 )
  
5.6239 false

[3,2,2] -> [3,2];
[0,3] -> [0,3];
[1] -> [1];
[3] -> [3];
[2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then ( Nil )
        else (f0 tl1) )
  
1.0472 false

[1,1,1] -> [1];
[3,1] -> [3,1];
[2,2] -> [2];
[1,2] -> [1,2];
[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1) else x0
  
17.2511 false

[1,1,0] -> [1,0];
[2,3] -> [2,3];
[3] -> [3];
[2,0,2] -> [2,0,2];
[2,1,3] -> [2,1,3];
[1,2] -> [1,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
78.1240 true

[2,2,1] -> [2,1];
[2,1,3] -> [2,1,3];
[3,1] -> [3,1];
[1] -> [1];
[0,0,3] -> [0,3];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1) else x0
  
22.7520 false

[2,2] -> [2];
[0] -> [0];
[2] -> [2];
[1,3,0] -> [1,3,0];
[3] -> [3];
[0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons
        if
          match (tl1)
            with
          | [] ->
            ( True )
          | hd'1::tl'1 ->
            ( False )
        then hd1
          else
            ( Succ
              ( Zero ) )
        if
          match (tl1)
            with
          | [] ->
            ( True )
          | hd'1::tl'1 ->
            ( False )
        then tl1 else x0
        ) else (f0 tl1)
  
6.2038 false

[1,2,1] -> [1,2,1];
[2] -> [2];
[1,0] -> [1,0];
[2,0] -> [2,0];
[1,1] -> [1];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
55.5492 true

[1] -> [1];
[1,0] -> [1,0];
[2] -> [2];
[0,2,0] -> [0,2,0];
[0,0,2] -> [0,2];
[2,3,3] -> [2,3];
[] -> [];

=================================
None
[1,3] -> [1,3];
[1,0] -> [1,0];
[0,3,3] -> [0,3];
[0,0,3] -> [0,3];
[3,3,0] -> [3,0];
[0,0] -> [0];
[] -> [];

=================================
None
[2] -> [2];
[1] -> [1];
[3,2] -> [3,2];
[0] -> [0];
[2,3] -> [2,3];
[3,0] -> [3,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0059 false

[1,0] -> [1,0];
[0,1,1] -> [0,1];
[2] -> [2];
[1,3,2] -> [1,3,2];
[0,1] -> [0,1];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
64.4045 true

[2] -> [2];
[2,0,0] -> [2,0];
[0] -> [0];
[3,2,1] -> [3,2,1];
[2,2] -> [2];
[1,1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
19.1593 false

[1,3,2] -> [1,3,2];
[0] -> [0];
[1] -> [1];
[2,1] -> [2,1];
[2,3] -> [2,3];
[1,1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
22.0928 true

[2,3,2] -> [2,3,2];
[0,3,0] -> [0,3,0];
[0,0] -> [0];
[1,2,0] -> [1,2,0];
[3] -> [3];
[0] -> [0];
[1,1,2] -> [1,2];
[] -> [];

=================================
None
[3,1,2] -> [3,1,2];
[3,1,3] -> [3,1,3];
[3,0] -> [3,0];
[1] -> [1];
[1,3,3] -> [1,3];
[2,2,2] -> [2];
[2] -> [2];
[] -> [];

=================================
None
[2,0,1] -> [2,0,1];
[1,3] -> [1,3];
[0] -> [0];
[3,2] -> [3,2];
[0,1] -> [0,1];
[2,3,2] -> [2,3,2];
[1,2,0] -> [1,2,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0457 false

[1,0] -> [1,0];
[2,1,2] -> [2,1,2];
[2,2,0] -> [2,0];
[1] -> [1];
[1,0,3] -> [1,0,3];
[1,1] -> [1];
[3,1,2] -> [3,1,2];
[] -> [];

=================================
None
[3] -> [3];
[2] -> [2];
[3,3,1] -> [3,1];
[1,1] -> [1];
[3,1,0] -> [3,1,0];
[3,1] -> [3,1];
[2,2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (less_than
            ( hd'1, hd1 ))
      then
        ( Cons hd1
          (f0 tl1) )
        else (f0 tl1)
  else
    ( Cons ( Zero )
      ( Nil ) )
11.3806 false

[1,1] -> [1];
[2,2,1] -> [2,1];
[3] -> [3];
[3,1] -> [3,1];
[2,0,1] -> [2,0,1];
[1,2] -> [1,2];
[0,2] -> [0,2];
[] -> [];

=================================
None
[2] -> [2];
[0,0,2] -> [0,2];
[0,1] -> [0,1];
[3] -> [3];
[2,0] -> [2,0];
[2,2,3] -> [2,3];
[2,2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1) else x0
  
49.0319 false

[2] -> [2];
[3,0,0] -> [3,0];
[3] -> [3];
[0] -> [0];
[1] -> [1];
[3,0,1] -> [3,0,1];
[2,1,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (less_than
            ( ( Zero ),
              hd1 ))
      then hd1
        else ( Zero )
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then ( Nil )
        else (f0 tl1) )
  
41.7560 false

[1] -> [1];
[3,2,2] -> [3,2];
[0,2,2] -> [0,2];
[0,3,1] -> [0,3,1];
[0,3] -> [0,3];
[3,1,3] -> [3,1,3];
[2,1] -> [2,1];
[] -> [];

=================================
None
[0,2] -> [0,2];
[2,1] -> [2,1];
[2,2] -> [2];
[0] -> [0];
[2,1,0] -> [2,1,0];
[0,3,0] -> [0,3,0];
[2,3] -> [2,3];
[] -> [];

=================================
None
[1,2,0] -> [1,2,0];
[2,1] -> [2,1];
[3,1,2] -> [3,1,2];
[2] -> [2];
[2,1,3] -> [2,1,3];
[1,0] -> [1,0];
[2,0,3] -> [2,0,3];
[1,1] -> [1];
[] -> [];

=================================
None
[2,2,0] -> [2,0];
[3] -> [3];
[0,2,0] -> [0,2,0];
[2,3] -> [2,3];
[1,1,2] -> [1,2];
[0,3,3] -> [0,3];
[2,2] -> [2];
[1] -> [1];
[] -> [];

=================================
None
[1,3,3] -> [1,3];
[0] -> [0];
[2,1,3] -> [2,1,3];
[2,1] -> [2,1];
[3,2,3] -> [3,2,3];
[0,2,1] -> [0,2,1];
[0,0] -> [0];
[2,3,0] -> [2,3,0];
[] -> [];

=================================
None
[2,2] -> [2];
[0,1,1] -> [0,1];
[1,3] -> [1,3];
[3,2,1] -> [3,2,1];
[2] -> [2];
[1,0,1] -> [1,0,1];
[0] -> [0];
[1] -> [1];
[] -> [];

=================================
None
[1,3,3] -> [1,3];
[2] -> [2];
[1,0] -> [1,0];
[0,0,2] -> [0,2];
[1] -> [1];
[2,2,0] -> [2,0];
[1,1,1] -> [1];
[3,2,1] -> [3,2,1];
[] -> [];

=================================
None
[0,1,2] -> [0,1,2];
[3,0,1] -> [3,0,1];
[3,1] -> [3,1];
[3] -> [3];
[3,2,3] -> [3,2,3];
[1,3] -> [1,3];
[0,0,0] -> [0];
[1] -> [1];
[] -> [];

=================================
None
[1,1] -> [1];
[0] -> [0];
[2,0,0] -> [2,0];
[3] -> [3];
[0,3,0] -> [0,3,0];
[0,2] -> [0,2];
[2] -> [2];
[2,3] -> [2,3];
[] -> [];

=================================
None
[3] -> [3];
[2,3] -> [2,3];
[2,3,0] -> [2,3,0];
[0,1,0] -> [0,1,0];
[0,2,0] -> [0,2,0];
[0] -> [0];
[0,3] -> [0,3];
[1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0687 false

[1,0] -> [1,0];
[3,0] -> [3,0];
[0,1,3] -> [0,1,3];
[3,3,0] -> [3,0];
[1,3] -> [1,3];
[1,3,2] -> [1,3,2];
[0] -> [0];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then tl1
      else
        ( Cons hd1
          (f0 tl1) )
  
94.3495 false

[0] -> [0];
[2,1,3] -> [2,1,3];
[1,1,3] -> [1,3];
[1,2,0] -> [1,2,0];
[0,0,3] -> [0,3];
[0,1,0] -> [0,1,0];
[0,3] -> [0,3];
[0,2,2] -> [0,2];
[] -> [];

=================================
None
[1,1,0] -> [1,0];
[1] -> [1];
[1,0] -> [1,0];
[2,1] -> [2,1];
[0] -> [0];
[3] -> [3];
[0,2,0] -> [0,2,0];
[2] -> [2];
[2,0,1] -> [2,0,1];
[] -> [];

=================================
None
[2] -> [2];
[3] -> [3];
[0,0] -> [0];
[2,3,2] -> [2,3,2];
[1,3,0] -> [1,3,0];
[2,1,0] -> [2,1,0];
[1] -> [1];
[0,0,0] -> [0];
[0,2] -> [0,2];
[] -> [];

=================================
None
[3,1] -> [3,1];
[2] -> [2];
[0,1,0] -> [0,1,0];
[0,0] -> [0];
[1,2] -> [1,2];
[2,0] -> [2,0];
[0,2] -> [0,2];
[3,2,1] -> [3,2,1];
[3,0] -> [3,0];
[] -> [];

=================================
None
[3,0,0] -> [3,0];
[1] -> [1];
[0,1,3] -> [0,1,3];
[1,3,2] -> [1,3,2];
[3,2] -> [3,2];
[0,2,0] -> [0,2,0];
[1,3] -> [1,3];
[3,2,2] -> [3,2];
[3,3] -> [3];
[] -> [];

=================================
None
[0,2] -> [0,2];
[2,0] -> [2,0];
[1,3,0] -> [1,3,0];
[0,3,3] -> [0,3];
[0,0,1] -> [0,1];
[3] -> [3];
[3,2] -> [3,2];
[2] -> [2];
[0] -> [0];
[] -> [];

=================================
None
[1,3,3] -> [1,3];
[2] -> [2];
[1,3,2] -> [1,3,2];
[1,1] -> [1];
[1,3] -> [1,3];
[3,2,1] -> [3,2,1];
[2,1,3] -> [2,1,3];
[3,2] -> [3,2];
[2,2,2] -> [2];
[] -> [];

=================================
None
[3,2] -> [3,2];
[0] -> [0];
[3] -> [3];
[2] -> [2];
[1] -> [1];
[1,2,1] -> [1,2,1];
[0,1] -> [0,1];
[3,1] -> [3,1];
[3,3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then tl1
      else
        ( Cons hd1
          (f0 tl1) )
  
99.3600 false

[0,2] -> [0,2];
[0,1,3] -> [0,1,3];
[2] -> [2];
[1,3] -> [1,3];
[3] -> [3];
[2,0,3] -> [2,0,3];
[3,3] -> [3];
[0,3] -> [0,3];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then tl1 else x0
  
60.9655 false

[1,2,1] -> [1,2,1];
[1,0,0] -> [1,0];
[3] -> [3];
[3,3] -> [3];
[0] -> [0];
[3,1] -> [3,1];
[2,1] -> [2,1];
[1,2] -> [1,2];
[2] -> [2];
[] -> [];

=================================
None
[2,2,3] -> [2,3];
[0,1,3] -> [0,1,3];
[1,1] -> [1];
[3,2,1] -> [3,2,1];
[0,2,0] -> [0,2,0];
[1] -> [1];
[3] -> [3];
[3,0,1] -> [3,0,1];
[1,2,3] -> [1,2,3];
[] -> [];

=================================
None
[0] -> [0];
[3,1,0] -> [3,1,0];
[2,0] -> [2,0];
[1,3] -> [1,3];
[3,3] -> [3];
[1] -> [1];
[1,3,3] -> [1,3];
[3] -> [3];
[2] -> [2];
[0,2] -> [0,2];
[] -> [];

=================================
None
[1] -> [1];
[3,0,2] -> [3,0,2];
[0,1] -> [0,1];
[3,3,1] -> [3,1];
[0,3] -> [0,3];
[3,1] -> [3,1];
[3,0,0] -> [3,0];
[0,0,2] -> [0,2];
[3,2,0] -> [3,2,0];
[0] -> [0];
[] -> [];

=================================
None
[0,2,3] -> [0,2,3];
[1] -> [1];
[1,0,2] -> [1,0,2];
[3,0] -> [3,0];
[0,1,2] -> [0,1,2];
[3,2] -> [3,2];
[3] -> [3];
[0] -> [0];
[3,1,1] -> [3,1];
[1,0] -> [1,0];
[] -> [];

=================================
None
[1,0,1] -> [1,0,1];
[0] -> [0];
[0,3] -> [0,3];
[1,3] -> [1,3];
[3,0,2] -> [3,0,2];
[0,0,0] -> [0];
[1] -> [1];
[3] -> [3];
[1,0] -> [1,0];
[3,2,1] -> [3,2,1];
[] -> [];

=================================
None
[0] -> [0];
[0,3,0] -> [0,3,0];
[2,2] -> [2];
[3,0,1] -> [3,0,1];
[0,0,2] -> [0,2];
[3,1] -> [3,1];
[1] -> [1];
[2,3,0] -> [2,3,0];
[1,3] -> [1,3];
[3] -> [3];
[] -> [];

=================================
None
[3,3] -> [3];
[3] -> [3];
[2,3] -> [2,3];
[0] -> [0];
[0,1] -> [0,1];
[3,0,3] -> [3,0,3];
[2] -> [2];
[3,1] -> [3,1];
[1,0] -> [1,0];
[0,1,2] -> [0,1,2];
[] -> [];

=================================
None
[1] -> [1];
[1,2,1] -> [1,2,1];
[0,0,1] -> [0,1];
[1,0,3] -> [1,0,3];
[3] -> [3];
[3,3,2] -> [3,2];
[0] -> [0];
[0,2] -> [0,2];
[2,0] -> [2,0];
[2,1] -> [2,1];
[] -> [];

=================================
None
[2,0] -> [2,0];
[0] -> [0];
[3,0] -> [3,0];
[1,1] -> [1];
[3,1,1] -> [3,1];
[3,2] -> [3,2];
[0,3,2] -> [0,3,2];
[0,1] -> [0,1];
[3] -> [3];
[2] -> [2];
[] -> [];

=================================
None
[0] -> [0];
[3] -> [3];
[3,0] -> [3,0];
[3,2,3] -> [3,2,3];
[2] -> [2];
[1] -> [1];
[0,3] -> [0,3];
[0,0,2] -> [0,2];
[2,3,3] -> [2,3];
[1,0] -> [1,0];
[] -> [];

=================================
None
[3,0,2] -> [3,0,2];
[3,0] -> [3,0];
[1,3,0] -> [1,3,0];
[0,0] -> [0];
[0,2] -> [0,2];
[1,2] -> [1,2];
[3,2] -> [3,2];
[1] -> [1];
[0] -> [0];
[2] -> [2];
[] -> [];

=================================
None
