[1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0052 false
Time(s): 0.12 
Mem(Kb): 28476

[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0012 false
Time(s): 0.08 
Mem(Kb): 27776

[0,0,1] -> [0,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0627 false
Time(s): 0.19 
Mem(Kb): 29236

[3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0090 false
Time(s): 0.27 
Mem(Kb): 28764

[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0046 false
Time(s): 0.31 
Mem(Kb): 27852

[1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0217 false
Time(s): 0.32 
Mem(Kb): 28568

[3,2,0] -> [3,2,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0049 false
Time(s): 0.13 
Mem(Kb): 29096

[1] -> [1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0007 false
Time(s): 0.10 
Mem(Kb): 27744

[1,0,3] -> [1,0,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0115 false
Time(s): 0.14 
Mem(Kb): 29224

[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0048 false
Time(s): 0.11 
Mem(Kb): 28752

[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0255 false
Time(s): 0.31 
Mem(Kb): 28768

[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0008 false
Time(s): 0.11 
Mem(Kb): 27800

[2,2,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0050 false
Time(s): 0.08 
Mem(Kb): 29196

[1] -> [1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0006 false
Time(s): 0.16 
Mem(Kb): 27728

[0,3,0] -> [0,3,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0047 false
Time(s): 0.10 
Mem(Kb): 29248

[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0008 false
Time(s): 0.25 
Mem(Kb): 27772

[1] -> [1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0007 false
Time(s): 0.24 
Mem(Kb): 27764

[3,3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 -> tl1
  
0.0042 false
Time(s): 0.16 
Mem(Kb): 28528

[2,1] -> [2,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0107 false
Time(s): 0.19 
Mem(Kb): 28692

[3,0,3] -> [3,0,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0066 false
Time(s): 0.07 
Mem(Kb): 29184

[2,0] -> [2,0];
[3,1,2] -> [3,1,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0063 false
Time(s): 0.07 
Mem(Kb): 29156

[3] -> [3];
[1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1 ( Nil ) )
  
0.0111 false
Time(s): 0.09 
Mem(Kb): 28984

[0,0,3] -> [0,3];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, ( Zero ) ))
      then tl1 else x0
  
0.3436 false
Time(s): 0.41 
Mem(Kb): 32544

[0,2] -> [0,2];
[2] -> [2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0028 false
Time(s): 0.10 
Mem(Kb): 28388

[2,3] -> [2,3];
[0,0,2] -> [0,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, ( Zero ) ))
      then tl1 else x0
  
1.5229 false
Time(s): 1.61 
Mem(Kb): 33576

[3,0] -> [3,0];
[0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      (equal_to
        ( hd1, ( Zero ) ))
      then tl1 else x0
  
0.1157 false
Time(s): 0.52 
Mem(Kb): 32460

[3,2,0] -> [3,2,0];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0045 false
Time(s): 0.08 
Mem(Kb): 29172

[1] -> [1];
[2,0,1] -> [2,0,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0044 false
Time(s): 0.06 
Mem(Kb): 29136

[0,3,0] -> [0,3,0];
[0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (equal_to
        ( hd'1, ( Zero )
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then tl1
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
2.2609 false
Time(s): 2.33 
Mem(Kb): 33096

[1,2,1] -> [1,2,1];
[1,0] -> [1,0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0678 false
Time(s): 0.46 
Mem(Kb): 29140

[1] -> [1];
[1,0] -> [1,0];
[2] -> [2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0054 false
Time(s): 0.06 
Mem(Kb): 29120

[1,0,0] -> [1,0];
[0,1,1] -> [0,1];
[1,1,3] -> [1,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
99.7088 true
Time(s): 99.79 
Mem(Kb): 42528

[3] -> [3];
[0,3] -> [0,3];
[1,3] -> [1,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.3004 false
Time(s): 4.27 
Mem(Kb): 28148

[0,2,1] -> [0,2,1];
[1,3] -> [1,3];
[1,0,2] -> [1,0,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0221 false
Time(s): 0.21 
Mem(Kb): 29340

[0,0] -> [0];
[0] -> [0];
[1,3] -> [1,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Nil )
        else (f0 tl1) )
  
1.4429 false
Time(s): 1.62 
Mem(Kb): 32932

[2] -> [2];
[3] -> [3];
[3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0053 false
Time(s): 0.06 
Mem(Kb): 29032

[1,2] -> [1,2];
[0] -> [0];
[2,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0. x0
0.0063 false
Time(s): 0.12 
Mem(Kb): 29144

[0,0] -> [0];
[1,3] -> [1,3];
[0,3,1] -> [0,3,1];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (equal_to
        ( hd'1, ( Zero )
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          ( False )
      then tl1
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
8.8456 false
Time(s): 8.98 
Mem(Kb): 35052

[1] -> [1];
[0,3,3] -> [0,3];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then (f0 tl1)
        else ( Nil ) )
  
2.2107 false
Time(s): 3.00 
Mem(Kb): 34380

[2,2,0] -> [2,0];
[3,1] -> [3,1];
[0,0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (less_than
            ( ( Zero ),
              hd'1 ))
      then
        ( Cons hd1
          (f0 tl1) )
        else (f0 tl1)
  else
    ( Cons ( Zero )
      ( Nil ) )
10.5104 false
Time(s): 10.56 
Mem(Kb): 38540

[2,3] -> [2,3];
[3,2,2] -> [3,2];
[1] -> [1];
[2,0] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
56.7849 true
Time(s): 56.86 
Mem(Kb): 47752

[0] -> [0];
[2,1] -> [2,1];
[3] -> [3];
[3,1,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
19.6908 false
Time(s): 19.75 
Mem(Kb): 40852

[1,1] -> [1];
[3,1,2] -> [3,1,2];
[2,0] -> [2,0];
[0,0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
72.9652 true
Time(s): 73.14 
Mem(Kb): 54296

[1] -> [1];
[1,2,2] -> [1,2];
[2,1] -> [2,1];
[2,2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons hd1
          (f0 tl1) )
  
2.2509 true
Time(s): 2.37 
Mem(Kb): 33636

[3,1,3] -> [3,1,3];
[3,3,0] -> [3,0];
[2,3,1] -> [2,3,1];
[3,2,3] -> [3,2,3];
[] -> [];

=================================
None
[3] -> [3];
[0,0] -> [0];
[2,1,0] -> [2,1,0];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Nil )
        else (f0 tl1) )
  
0.7411 false
Time(s): 0.83 
Mem(Kb): 34300

[0] -> [0];
[1] -> [1];
[2,1,0] -> [2,1,0];
[1,2] -> [1,2];
[] -> [];

=================================
fix f0.fun x0. x0
0.0119 false
Time(s): 0.09 
Mem(Kb): 29296

[3,2,1] -> [3,2,1];
[3,0] -> [3,0];
[0] -> [0];
[1] -> [1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0084 false
Time(s): 0.06 
Mem(Kb): 29040

[2,0] -> [2,0];
[1,3] -> [1,3];
[2] -> [2];
[3,3,2] -> [3,2];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then (f0 tl1)
      else
        ( Cons
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then
              ( Succ
                ( Succ
                  hd1 ) )
            else hd1
          if
            (equal_to
              ( hd1,
                ( Zero )
                ))
            then x0
            else (f0 tl1)
          )
  
78.0562 false
Time(s): 78.36 
Mem(Kb): 40840

[3,3] -> [3];
[0] -> [0];
[1,2,2] -> [1,2];
[2,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd1, hd'1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
96.9137 false
Time(s): 97.46 
Mem(Kb): 43064

[1,0,3] -> [1,0,3];
[2] -> [2];
[3,0] -> [3,0];
[3,3] -> [3];
[2,3,3] -> [2,3];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( False )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then (f0 tl1)
        else
          ( Cons hd1
            (f0 tl1) )
  else x0
21.1473 false
Time(s): 21.20 
Mem(Kb): 39852

[1,3] -> [1,3];
[3,0] -> [3,0];
[3,2] -> [3,2];
[3] -> [3];
[3,1] -> [3,1];
[] -> [];

=================================
fix f0.fun x0. x0
0.0211 false
Time(s): 0.15 
Mem(Kb): 29532

[3,1] -> [3,1];
[1,0] -> [1,0];
[3] -> [3];
[3,2,2] -> [3,2];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( hd'1, hd1 ))
    then
      ( Cons hd1 (f0 tl1)
        ) else (f0 tl1)
  
70.9926 false
Time(s): 71.71 
Mem(Kb): 45380

[0,0,0] -> [0];
[3] -> [3];
[1,1,0] -> [1,0];
[3,1] -> [3,1];
[2] -> [2];
[] -> [];

=================================
fix f0.fun x0.
  if
    match (x0) with
    | [] -> ( True )
    | hd'1::tl'1 ->
      (less_than
        ( ( Zero ), hd'1
          ))
  then
    match (x0) with
    | [] -> x0
    | hd1::tl1 ->
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (less_than
            ( ( Zero ),
              hd'1 ))
      then
        ( Cons hd1
          (f0 tl1) )
        else (f0 tl1)
  else
    ( Cons ( Zero )
      ( Nil ) )
48.9353 false
Time(s): 49.01 
Mem(Kb): 80664

[1,0] -> [1,0];
[1] -> [1];
[1,1] -> [1];
[3,1] -> [3,1];
[1,3] -> [1,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( False )
      | hd'1::tl'1 ->
        (equal_to
          ( hd'1, hd1 ))
    then tl1 else x0
  
28.6699 false
Time(s): 28.76 
Mem(Kb): 44956

[1,1,1] -> [1];
[3,1] -> [3,1];
[2,2] -> [2];
[1,2] -> [1,2];
[2,1] -> [2,1];
[] -> [];

=================================
None
[3] -> [3];
[0] -> [0];
[2] -> [2];
[2,3] -> [2,3];
[0,3,3] -> [0,3];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    if
      match (tl1) with
      | [] -> ( True )
      | hd'1::tl'1 ->
        (less_than
          ( ( Zero ), hd1
            ))
    then
      ( Cons
        if
          match (tl1)
            with
          | [] ->
            (equal_to
              ( hd1,
                ( Zero )
                ))
          | hd'1::tl'1 ->
            (equal_to
              ( hd'1, hd1
                ))
        then ( Zero )
          else hd1
        if
          match (tl1)
            with
          | [] ->
            ( True )
          | hd'1::tl'1 ->
            ( False )
        then ( Nil )
          else tl1 )
      else (f0 tl1)
  
13.7997 false
Time(s): 13.88 
Mem(Kb): 38508

[1,0,1] -> [1,0,1];
[0,1] -> [0,1];
[0] -> [0];
[1,2] -> [1,2];
[0,3,3] -> [0,3];
[] -> [];

=================================
None
[0,1,1] -> [0,1];
[0,2] -> [0,2];
[0] -> [0];
[3,3] -> [3];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
None
[1] -> [1];
[2] -> [2];
[0] -> [0];
[3,1,1] -> [3,1];
[1,1] -> [1];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons hd1
      if
        match (tl1) with
        | [] -> ( True )
        | hd'1::tl'1 ->
          (equal_to
            ( hd'1, hd1 ))
      then ( Nil )
        else (f0 tl1) )
  
5.4814 false
Time(s): 5.61 
Mem(Kb): 31236

[2] -> [2];
[3,3] -> [3];
[2,3] -> [2,3];
[1] -> [1];
[3,2] -> [3,2];
[3,0] -> [3,0];
[] -> [];

=================================
None
[0,2,0] -> [0,2,0];
[1] -> [1];
[1,2,0] -> [1,2,0];
[1,2] -> [1,2];
[0,1,2] -> [0,1,2];
[0] -> [0];
[] -> [];

=================================
fix f0.fun x0. x0
0.0972 false
Time(s): 0.16 
Mem(Kb): 31028

[3,0] -> [3,0];
[3] -> [3];
[1,1] -> [1];
[0] -> [0];
[1,2] -> [1,2];
[3,0,3] -> [3,0,3];
[] -> [];

=================================
None
[0] -> [0];
[3,3] -> [3];
[1,3,2] -> [1,3,2];
[2,1] -> [2,1];
[2,0,3] -> [2,0,3];
[2,2] -> [2];
[] -> [];

=================================
None
[1,3,1] -> [1,3,1];
[1] -> [1];
[2,2] -> [2];
[2,0] -> [2,0];
[3,3] -> [3];
[2] -> [2];
[] -> [];

=================================
None
[3,2,0] -> [3,2,0];
[1,3] -> [1,3];
[0,0] -> [0];
[3,3] -> [3];
[3,2,2] -> [3,2];
[2,2,0] -> [2,0];
[] -> [];

=================================
None
[0,0] -> [0];
[1] -> [1];
[3] -> [3];
[2] -> [2];
[2,0] -> [2,0];
[2,0,0] -> [2,0];
[] -> [];

=================================
fix f0.fun x0.
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Zero )
        else hd1
      if
        (equal_to
          ( hd1, ( Zero )
            ))
        then ( Nil )
        else (f0 tl1) )
  
12.1370 false
Time(s): 12.31 
Mem(Kb): 37860

[2] -> [2];
[1] -> [1];
[1,3] -> [1,3];
[3,0] -> [3,0];
[0,3,0] -> [0,3,0];
[3] -> [3];
[] -> [];

=================================
fix f0.fun x0. x0
0.1035 false
Time(s): 0.17 
Mem(Kb): 29660

[2,2] -> [2];
[0] -> [0];
[2] -> [2];
[1,3,0] -> [1,3,0];
[3] -> [3];
[0,0] -> [0];
[] -> [];

=================================
None
[1,3,2] -> [1,3,2];
[0] -> [0];
[1] -> [1];
[2,1] -> [2,1];
[2,3] -> [2,3];
[1,1,1] -> [1];
[] -> [];

=================================
None
[3,1,1] -> [3,1];
[2,0,1] -> [2,0,1];
[2,1] -> [2,1];
[0,1,1] -> [0,1];
[3] -> [3];
[2,0] -> [2,0];
[3,2] -> [3,2];
[] -> [];

=================================
None
[1,0] -> [1,0];
[2,1,2] -> [2,1,2];
[2,2,0] -> [2,0];
[1] -> [1];
[1,0,3] -> [1,0,3];
[1,1] -> [1];
[3,1,2] -> [3,1,2];
[] -> [];

=================================
None
[1] -> [1];
[3,2,2] -> [3,2];
[0,2,2] -> [0,2];
[0,3,1] -> [0,3,1];
[0,3] -> [0,3];
[3,1,3] -> [3,1,3];
[2,1] -> [2,1];
[] -> [];

=================================
None
[1,1] -> [1];
[2,2] -> [2];
[3] -> [3];
[0] -> [0];
[3,0,3] -> [3,0,3];
[0,0] -> [0];
[3,2,2] -> [3,2];
[] -> [];

=================================
None
[0,2] -> [0,2];
[2,1] -> [2,1];
[1,2] -> [1,2];
[1] -> [1];
[0,1] -> [0,1];
[1,2,0] -> [1,2,0];
[0,3,3] -> [0,3];
[] -> [];

=================================
None
[1,0] -> [1,0];
[3] -> [3];
[3,2] -> [3,2];
[2,1,1] -> [2,1];
[1] -> [1];
[2] -> [2];
[3,2,2] -> [3,2];
[] -> [];

=================================
None
[1] -> [1];
[3] -> [3];
[2,0] -> [2,0];
[2,0,2] -> [2,0,2];
[0] -> [0];
[3,2,3] -> [3,2,3];
[3,3,3] -> [3];
[] -> [];

=================================
None
[1] -> [1];
[3,2] -> [3,2];
[1,3,3] -> [1,3];
[1,0] -> [1,0];
[0,2] -> [0,2];
[1,2] -> [1,2];
[1,3,0] -> [1,3,0];
[] -> [];

=================================
None
[2] -> [2];
[3,0,0] -> [3,0];
[3] -> [3];
[0] -> [0];
[1] -> [1];
[3,0,1] -> [3,0,1];
[2,1,1] -> [2,1];
[] -> [];

=================================
None
[1,3] -> [1,3];
[3,0,2] -> [3,0,2];
[0,1,3] -> [0,1,3];
[1,3,0] -> [1,3,0];
[1] -> [1];
[2,1] -> [2,1];
[2,0] -> [2,0];
[] -> [];

=================================
fix f0.fun x0. x0
2.5205 false
Time(s): 3.11 
Mem(Kb): 35208

