([3,0,2],[3,2]) -> [2,0,3,3,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      ( Succ
        ( Succ ( Zero ) )
        )
      ( Cons ( Zero )
        ( Cons hd1 x1 ) )
      )
  
7.1594 false
Time(s): 7.22 
Mem(Kb): 30560

([1],[1,3,1]) -> [1,1,3,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0138 false
Time(s): 0.10 
Mem(Kb): 29244

([1],[1]) -> [1,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1253 false
Time(s): 0.84 
Mem(Kb): 29244

([3],[3,3,1]) -> [3,3,3,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.1816 false
Time(s): 1.11 
Mem(Kb): 29304

([2],[2,3]) -> [2,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0139 false
Time(s): 0.96 
Mem(Kb): 28904

([3,1,2],[2]) -> [2,1,3,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      ( Succ
        ( Succ ( Zero ) )
        )
      ( Cons
        ( Succ ( Zero ) )
        ( Cons hd1 x1 ) )
      )
  
4.4982 false
Time(s): 5.30 
Mem(Kb): 32848

([3],[0,2]) -> [3,0,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0460 false
Time(s): 1.08 
Mem(Kb): 28956

([2,2,0],[1,2,3]) -> [0,2,2,1,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Zero )
      ( Cons hd1
        ( Cons hd1 x1 ) )
      )
  
10.8100 false
Time(s): 11.58 
Mem(Kb): 29496

([0],[2,1]) -> [0,2,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0098 false
Time(s): 0.58 
Mem(Kb): 29208

([3,3],[1,2]) -> [3,3,1,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5468 false
Time(s): 0.71 
Mem(Kb): 29356

([0,3,2],[0,3,0]) -> [2,3,0,0,3,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons ( Zero ) x1
        )
    | hd1::tl1 ->
      ( Cons
        ( Succ
          ( Succ hd2 ) )
        ( Cons hd1
          (f0
            ( tl1, x1 ))
          ) )
    
  
54.2491 false
Time(s): 54.83 
Mem(Kb): 31552

([0],[0]) -> [0,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0070 false
Time(s): 0.37 
Mem(Kb): 29252

([0,0],[1,1,3]) -> [0,0,1,1,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.2737 false
Time(s): 1.16 
Mem(Kb): 29360

([3,0,0],[3]) -> [0,0,3,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Zero )
      ( Cons ( Zero )
        ( Cons hd1 x1 ) )
      )
  
2.6584 false
Time(s): 2.77 
Mem(Kb): 32824

([2],[2,3]) -> [2,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0133 false
Time(s): 0.72 
Mem(Kb): 29176

([1,2],[2]) -> [2,1,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Succ hd1 )
      x0 )
  
0.0090 false
Time(s): 0.50 
Mem(Kb): 29284

([3,0,2],[3,2]) -> [2,0,3,3,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons
      ( Succ
        ( Succ ( Zero ) )
        )
      ( Cons ( Zero )
        ( Cons hd1 x1 ) )
      )
  
6.7518 false
Time(s): 7.03 
Mem(Kb): 32252

([2,2,0],[1,2,3]) -> [0,2,2,1,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd1::tl1 ->
    ( Cons ( Zero )
      ( Cons hd1
        ( Cons hd1 x1 ) )
      )
  
11.2424 false
Time(s): 11.79 
Mem(Kb): 29796

([1],[1]) -> [1,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0087 false
Time(s): 0.78 
Mem(Kb): 29208

([1],[0,1,2]) -> [1,0,1,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0658 false
Time(s): 0.87 
Mem(Kb): 29344

([3,0],[0]) -> [0,3,0];
([2,1],[1,0,3]) -> [1,2,1,0,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd2::tl2 ->
    match (tl2) with
    | [] -> ( Nil )
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2
          (f0
            ( tl1, x1 ))
          ) )
    
  
36.2504 false
Time(s): 37.53 
Mem(Kb): 30588

([3,2],[3]) -> [2,3,3];
([0,1,0],[0,2]) -> [0,1,0,0,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x1) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons
        ( Succ
          ( Succ ( Zero )
            ) )
        ( Cons hd2 x1 ) )
    | hd1::tl1 ->
      ( Cons hd2
        ( Cons
          ( Succ hd2 )
          ( Cons hd2 x1 )
          ) )
    
  
47.5815 false
Time(s): 48.77 
Mem(Kb): 29296

([1],[2]) -> [1,2];
([3],[0,0,0]) -> [3,0,0,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0154 false
Time(s): 0.08 
Mem(Kb): 29324

([1,2,0],[0,3]) -> [0,2,1,0,3];
([2],[0,1,2]) -> [2,0,1,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x0
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2 x1 )
    | hd1::tl1 ->
      ( Cons ( Zero )
        ( Cons hd1
          ( Cons hd2 x1 )
          ) )
    
  
43.4748 false
Time(s): 44.16 
Mem(Kb): 29360

([2,1,1],[2]) -> [1,1,2,2];
([1,0],[3,2,3]) -> [0,1,3,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd2::tl2 ->
    ( Cons
      match (tl2) with
      | [] ->
        ( Succ hd2 )
      | hd1::tl1 -> hd1
      (f0 ( tl2, x1 )) )
  
40.9406 false
Time(s): 41.61 
Mem(Kb): 29508

([2,1,3],[2,1,3]) -> [3,1,2,2,1,3];
([2,3,1],[0,2]) -> [1,3,2,0,2];
([], []) -> [];

=================================
None
([3],[2,1]) -> [3,2,1];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.4185 false
Time(s): 1.11 
Mem(Kb): 29168

([3,0,3],[0]) -> [3,0,3,0];
([0,3],[0]) -> [3,0,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons hd1 x1 )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons ( Zero )
        ( Cons hd2 x1 ) )
    | hd1::tl1 ->
      ( Cons
        ( Succ
          ( Succ
            ( Succ
              ( Zero ) )
            ) )
        (f0 ( tl1, x1 ))
        )
    
  
6.8047 false
Time(s): 8.09 
Mem(Kb): 32144

([3],[0]) -> [3,0];
([2],[3]) -> [2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.0083 false
Time(s): 0.51 
Mem(Kb): 29196

([2,2,1],[0,1]) -> [1,2,2,0,1];
([0,1,2],[2,2]) -> [2,1,0,2,2];
([], []) -> [];

=================================
None
([0,0,3],[2]) -> [3,0,0,2];
([0,0],[2]) -> [0,0,2];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
None
([1,0],[1,3,1]) -> [0,1,1,3,1];
([2,1,1],[0,2]) -> [1,1,2,0,2];
([3,0],[1,0]) -> [0,3,1,0];
([], []) -> [];

=================================
None
([2,2],[2,3]) -> [2,2,2,3];
([3,0],[0,0]) -> [0,3,0,0];
([0,0,1],[1,2,1]) -> [1,0,0,1,2,1];
([], []) -> [];

=================================
None
([1,1,2],[3]) -> [2,1,1,3];
([3,2,2],[2,0]) -> [2,2,3,2,0];
([2,1,1],[0]) -> [1,1,2,0];
([], []) -> [];

=================================
None
([2,3,1],[0,3]) -> [1,3,2,0,3];
([1,3],[0,3]) -> [3,1,0,3];
([3,1],[3,2,3]) -> [1,3,3,2,3];
([], []) -> [];

=================================
None
([3,2],[1,2,1]) -> [2,3,1,2,1];
([3,3],[3,1,3]) -> [3,3,3,1,3];
([2,3,0],[0]) -> [0,3,2,0];
([], []) -> [];

=================================
None
([3],[0,3]) -> [3,0,3];
([2,0,1],[1,3]) -> [1,0,2,1,3];
([1,0,2],[1,1]) -> [2,0,1,1,1];
([], []) -> [];

=================================
None
([2],[1]) -> [2,1];
([2,2],[3,0,3]) -> [2,2,3,0,3];
([3,2,2],[2,2,1]) -> [2,2,3,2,2,1];
([], []) -> [];

=================================
None
([0],[3,1,1]) -> [0,3,1,1];
([0,0],[3]) -> [0,0,3];
([3],[2,3]) -> [3,2,3];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
0.5620 false
Time(s): 1.26 
Mem(Kb): 29764

([0],[3,2]) -> [0,3,2];
([1,2],[3,1]) -> [2,1,3,1];
([0],[1]) -> [0,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons
        ( Succ ( Zero ) )
        x1 )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2 x1 )
    | hd1::tl1 ->
      ( Cons hd1
        (f0 ( tl1, x1 ))
        )
    
  
17.8754 false
Time(s): 19.23 
Mem(Kb): 29100

([1],[0,2,3]) -> [1,0,2,3];
([2,0,2],[0,0,2]) -> [2,0,2,0,0,2];
([3],[3,1]) -> [3,3,1];
([3,0],[2,0,0]) -> [0,3,2,0,0];
([], []) -> [];

=================================
None
([3,1],[0]) -> [1,3,0];
([1,3,2],[3]) -> [2,3,1,3];
([1,3,3],[1,1,0]) -> [3,3,1,1,1,0];
([1,3],[1,0]) -> [3,1,1,0];
([], []) -> [];

=================================
None
([3,3],[3,3,2]) -> [3,3,3,3,2];
([3,2,1],[2,1]) -> [1,2,3,2,1];
([1,3],[2,2,1]) -> [3,1,2,2,1];
([1,2,1],[2,2,2]) -> [1,2,1,2,2,2];
([], []) -> [];

=================================
None
([3],[3,0]) -> [3,3,0];
([3,1],[3,0,2]) -> [1,3,3,0,2];
([0,3,2],[1,2]) -> [2,3,0,1,2];
([2],[0,3,2]) -> [2,0,3,2];
([], []) -> [];

=================================
None
([1,1],[3]) -> [1,1,3];
([1,2],[1,3,1]) -> [2,1,1,3,1];
([2,1],[2,1,3]) -> [1,2,2,1,3];
([1],[3,1]) -> [1,3,1];
([], []) -> [];

=================================
None
([0],[1,3]) -> [0,1,3];
([3,0],[3]) -> [0,3,3];
([3],[1]) -> [3,1];
([2,2],[1,0]) -> [2,2,1,0];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2 x1 )
    | hd1::tl1 ->
      ( Cons hd1
        ( Cons hd2
          (f0
            ( tl1, x1 ))
          ) )
    
  
57.8671 false
Time(s): 59.07 
Mem(Kb): 32260

([3,0],[1,0]) -> [0,3,1,0];
([0,3],[3,1]) -> [3,0,3,1];
([0],[1,1,3]) -> [0,1,1,3];
([1,3,3],[3,0]) -> [3,3,1,3,0];
([], []) -> [];

=================================
None
([1],[3,2]) -> [1,3,2];
([1,0],[3,0]) -> [0,1,3,0];
([0,3],[1]) -> [3,0,1];
([3,0],[2,3]) -> [0,3,2,3];
([], []) -> [];

=================================
None
([3],[2]) -> [3,2];
([1,3],[0]) -> [3,1,0];
([2],[3,0,1]) -> [2,3,0,1];
([1,3],[2]) -> [3,1,2];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] ->
    match (x1) with
    | [] -> x0
    | hd1::tl1 ->
      ( Cons
        ( Succ ( Zero ) )
        x1 )
    
  | hd2::tl2 ->
    match (tl2) with
    | [] ->
      ( Cons hd2 x1 )
    | hd1::tl1 ->
      ( Cons hd1
        (f0 ( tl1, x1 ))
        )
    
  
24.7955 false
Time(s): 25.45 
Mem(Kb): 29908

([0,3,2],[0]) -> [2,3,0,0];
([0,2],[0,0,2]) -> [2,0,0,0,2];
([1],[0,1,0]) -> [1,0,1,0];
([0,3],[3]) -> [3,0,3];
([], []) -> [];

=================================
None
([2,1,3],[0,1]) -> [3,1,2,0,1];
([3],[2,0]) -> [3,2,0];
([2],[1,0,0]) -> [2,1,0,0];
([1,2],[3,3]) -> [2,1,3,3];
([2],[3]) -> [2,3];
([], []) -> [];

=================================
None
([3,1,0],[1,3,0]) -> [0,1,3,1,3,0];
([0,0],[1,2]) -> [0,0,1,2];
([3,0],[0,2,1]) -> [0,3,0,2,1];
([2,2],[0,0]) -> [2,2,0,0];
([1,2,3],[1]) -> [3,2,1,1];
([], []) -> [];

=================================
None
([0,3],[3]) -> [3,0,3];
([2],[1]) -> [2,1];
([3,2,1],[3,2]) -> [1,2,3,3,2];
([0,2],[0,3]) -> [2,0,0,3];
([2,0],[3,2,1]) -> [0,2,3,2,1];
([], []) -> [];

=================================
None
([2,2,2],[2,1,1]) -> [2,2,2,2,1,1];
([2,1],[2,3]) -> [1,2,2,3];
([2,2,2],[2,3,3]) -> [2,2,2,2,3,3];
([1],[2]) -> [1,2];
([1,1],[1,3,3]) -> [1,1,1,3,3];
([], []) -> [];

=================================
None
([0,2,2],[0]) -> [2,2,0,0];
([3,2,0],[0]) -> [0,2,3,0];
([0],[2,0,2]) -> [0,2,0,2];
([0,3],[2]) -> [3,0,2];
([0],[2,2,2]) -> [0,2,2,2];
([], []) -> [];

=================================
None
([3,3,2],[1,3]) -> [2,3,3,1,3];
([3,0,3],[1,0,0]) -> [3,0,3,1,0,0];
([3,0],[0,2,3]) -> [0,3,0,2,3];
([0,3],[1,3,3]) -> [3,0,1,3,3];
([0,3,2],[2,2]) -> [2,3,0,2,2];
([], []) -> [];

=================================
None
([0,1],[2]) -> [1,0,2];
([2],[3]) -> [2,3];
([3,1],[0,0]) -> [1,3,0,0];
([0,2],[2]) -> [2,0,2];
([1,2,1],[3,3]) -> [1,2,1,3,3];
([], []) -> [];

=================================
None
([3,3],[1]) -> [3,3,1];
([3,2],[0,3,3]) -> [2,3,0,3,3];
([0],[0]) -> [0,0];
([2,1,0],[1]) -> [0,1,2,1];
([0,0],[0,2]) -> [0,0,0,2];
([], []) -> [];

=================================
None
([2,0],[0,2,1]) -> [0,2,0,2,1];
([0,3],[3,1]) -> [3,0,3,1];
([2,1],[2]) -> [1,2,2];
([1,1,3],[3]) -> [3,1,1,3];
([1],[3,1,0]) -> [1,3,1,0];
([], []) -> [];

=================================
None
([0],[3,0]) -> [0,3,0];
([1],[1,0,0]) -> [1,1,0,0];
([3,0],[1]) -> [0,3,1];
([2],[3,3,3]) -> [2,3,3,3];
([0,0],[1,1]) -> [0,0,1,1];
([], []) -> [];

=================================
None
([3,0],[1,2]) -> [0,3,1,2];
([3,1,1],[3,0,3]) -> [1,1,3,3,0,3];
([0,2],[0,0,0]) -> [2,0,0,0,0];
([2,0,2],[1,2,2]) -> [2,0,2,1,2,2];
([2,0],[2,0,2]) -> [0,2,2,0,2];
([0,1,1],[3,1,3]) -> [1,1,0,3,1,3];
([], []) -> [];

=================================
None
([1],[3,3]) -> [1,3,3];
([3],[1]) -> [3,1];
([0],[1,1,2]) -> [0,1,1,2];
([0,2,3],[0]) -> [3,2,0,0];
([0],[0,0]) -> [0,0,0];
([0,0,0],[0,3,2]) -> [0,0,0,0,3,2];
([], []) -> [];

=================================
None
([2],[1,2,1]) -> [2,1,2,1];
([0,2],[2]) -> [2,0,2];
([0],[0,0]) -> [0,0,0];
([0,0,3],[3,3,1]) -> [3,0,0,3,3,1];
([1],[0,0,2]) -> [1,0,0,2];
([3,0,0],[3,0]) -> [0,0,3,3,0];
([], []) -> [];

=================================
None
([3,2,1],[3]) -> [1,2,3,3];
([3,2],[3]) -> [2,3,3];
([1,2,2],[0,1,1]) -> [2,2,1,0,1,1];
([2],[3,1,1]) -> [2,3,1,1];
([1,0],[3,0,3]) -> [0,1,3,0,3];
([3,1,2],[2,2]) -> [2,1,3,2,2];
([], []) -> [];

=================================
None
([2,3,2],[2,1,1]) -> [2,3,2,2,1,1];
([0,2],[1,3,0]) -> [2,0,1,3,0];
([3,2],[3,3]) -> [2,3,3,3];
([0,1,3],[2,3,3]) -> [3,1,0,2,3,3];
([1,1],[3,2,1]) -> [1,1,3,2,1];
([0,2,1],[3,2,1]) -> [1,2,0,3,2,1];
([], []) -> [];

=================================
None
([3,3],[3,2,0]) -> [3,3,3,2,0];
([2,0],[3,1]) -> [0,2,3,1];
([2,0,0],[0,2,1]) -> [0,0,2,0,2,1];
([1,2],[0,2,3]) -> [2,1,0,2,3];
([2,2,1],[1]) -> [1,2,2,1];
([1],[3,2,2]) -> [1,3,2,2];
([], []) -> [];

=================================
None
([3],[0,0]) -> [3,0,0];
([1],[2,2]) -> [1,2,2];
([0],[1,1,3]) -> [0,1,1,3];
([0],[2,3]) -> [0,2,3];
([3],[0,0,2]) -> [3,0,0,2];
([0],[1]) -> [0,1];
([], []) -> [];

=================================
fix f0.fun (x0, x1).
  match (x0) with
  | [] -> x1
  | hd1::tl1 ->
    ( Cons hd1
      (f0 ( tl1, x1 )) )
  
93.2804 false
Time(s): 93.52 
Mem(Kb): 31516

([1,2,2],[1,1]) -> [2,2,1,1,1];
([3],[3,2,2]) -> [3,3,2,2];
([2,3],[2,2]) -> [3,2,2,2];
([2],[0,2,0]) -> [2,0,2,0];
([2,1],[1,3,1]) -> [1,2,1,3,1];
([3,1,3],[0,3]) -> [3,1,3,0,3];
([], []) -> [];

=================================
None
([1],[3,0,2]) -> [1,3,0,2];
([0],[1,1,3]) -> [0,1,1,3];
([2,3,1],[0,0]) -> [1,3,2,0,0];
([2,1,0],[0]) -> [0,1,2,0];
([3,3],[3,0,2]) -> [3,3,3,0,2];
([3,0,0],[1]) -> [0,0,3,1];
([], []) -> [];

=================================
None
([1],[1]) -> [1,1];
([2,0,2],[0,2,0]) -> [2,0,2,0,2,0];
([2,3],[2,0,0]) -> [3,2,2,0,0];
([2,1,2],[3,2,0]) -> [2,1,2,3,2,0];
([1,3],[3]) -> [3,1,3];
([2,2,2],[2,3,3]) -> [2,2,2,2,3,3];
([], []) -> [];

=================================
None
([3,1],[0]) -> [1,3,0];
([0],[0,3,0]) -> [0,0,3,0];
([0,1,2],[2,2,1]) -> [2,1,0,2,2,1];
([3],[2]) -> [3,2];
([1],[2,3,1]) -> [1,2,3,1];
([1,2],[1,0,1]) -> [2,1,1,0,1];
([3],[0,2,1]) -> [3,0,2,1];
([], []) -> [];

=================================
None
([0],[1,0]) -> [0,1,0];
([3],[3,0,0]) -> [3,3,0,0];
([3],[3]) -> [3,3];
([0],[3,2,0]) -> [0,3,2,0];
([1,1],[0]) -> [1,1,0];
([1,0],[3]) -> [0,1,3];
([3,1],[1,2]) -> [1,3,1,2];
([], []) -> [];

=================================
None
([3],[2,2]) -> [3,2,2];
([2],[2,1,3]) -> [2,2,1,3];
([3],[2,1,3]) -> [3,2,1,3];
([2],[3]) -> [2,3];
([0],[3,2]) -> [0,3,2];
([1,1,0],[3,0,1]) -> [0,1,1,3,0,1];
([0,1,0],[1,3]) -> [0,1,0,1,3];
([], []) -> [];

=================================
None
([1,2,2],[1,0]) -> [2,2,1,1,0];
([1,1],[0,2,1]) -> [1,1,0,2,1];
([0],[2,2]) -> [0,2,2];
([2,2,0],[1]) -> [0,2,2,1];
([1,2,2],[3,1,3]) -> [2,2,1,3,1,3];
([0],[1]) -> [0,1];
([3],[3]) -> [3,3];
([], []) -> [];

=================================
None
([0,3],[0,2,0]) -> [3,0,0,2,0];
([0,2],[0]) -> [2,0,0];
([0,2],[3,3,0]) -> [2,0,3,3,0];
([0,3,2],[2,3,3]) -> [2,3,0,2,3,3];
([2,3,1],[0,3,0]) -> [1,3,2,0,3,0];
([3,1,0],[2]) -> [0,1,3,2];
([0,1],[2,3]) -> [1,0,2,3];
([], []) -> [];

=================================
None
([1,3,0],[0]) -> [0,3,1,0];
([2],[1]) -> [2,1];
([0,1],[0,3,2]) -> [1,0,0,3,2];
([0,1],[1,2,1]) -> [1,0,1,2,1];
([0],[1,2]) -> [0,1,2];
([1,2],[0]) -> [2,1,0];
([0,2,3],[2]) -> [3,2,0,2];
([], []) -> [];

=================================
None
([1,2],[0,0]) -> [2,1,0,0];
([3,3,0],[2,0]) -> [0,3,3,2,0];
([2],[0,0]) -> [2,0,0];
([1],[2,1]) -> [1,2,1];
([1,3],[0,3,1]) -> [3,1,0,3,1];
([2,1],[3,2,2]) -> [1,2,3,2,2];
([2,0],[0]) -> [0,2,0];
([], []) -> [];

=================================
None
([1],[3,3]) -> [1,3,3];
([3],[2]) -> [3,2];
([1,0,0],[2]) -> [0,0,1,2];
([1,3],[2,2]) -> [3,1,2,2];
([2,3,0],[1,2,0]) -> [0,3,2,1,2,0];
([1,3,0],[0]) -> [0,3,1,0];
([2,3],[1,2,0]) -> [3,2,1,2,0];
([], []) -> [];

=================================
None
([1,2],[3,3]) -> [2,1,3,3];
([3],[3]) -> [3,3];
([1],[2,0]) -> [1,2,0];
([0],[1]) -> [0,1];
([2,3,0],[1]) -> [0,3,2,1];
([2,1],[3,3,3]) -> [1,2,3,3,3];
([1],[0,0,3]) -> [1,0,0,3];
([], []) -> [];

=================================
None
([3],[3,2]) -> [3,3,2];
([1],[3]) -> [1,3];
([2],[2,2]) -> [2,2,2];
([2,2,3],[3,0]) -> [3,2,2,3,0];
([3,2,0],[3,3]) -> [0,2,3,3,3];
([1,1],[2,2,0]) -> [1,1,2,2,0];
([0],[3]) -> [0,3];
([], []) -> [];

=================================
None
