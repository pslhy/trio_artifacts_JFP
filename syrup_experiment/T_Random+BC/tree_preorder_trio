Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0272 false
Time(s): 0.05 
Mem(Kb): 17052

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0464 false
Time(s): 0.07 
Mem(Kb): 19648

Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 2))
                    Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0258 false
Time(s): 0.05 
Mem(Kb): 17208

Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [2,0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0379 false
Time(s): 0.06 
Mem(Kb): 17928

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0353 true
Time(s): 0.06 
Mem(Kb): 17960

Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0095 false
Time(s): 0.03 
Mem(Kb): 16340

Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Cons (0, Nil))

0.0265 false
Time(s): 0.05 
Mem(Kb): 17468

Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [0,3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0233 false
Time(s): 0.05 
Mem(Kb): 17308

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0290 false
Time(s): 0.05 
Mem(Kb): 17200

Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Cons (0, Nil))

0.0229 false
Time(s): 0.04 
Mem(Kb): 17212

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0596 true
Time(s): 0.08 
Mem(Kb): 18492

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0260 true
Time(s): 0.05 
Mem(Kb): 17144

Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0360 false
Time(s): 0.06 
Mem(Kb): 17964

Node (Leaf (),2,Leaf ()) -> [2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0103 false
Time(s): 0.03 
Mem(Kb): 16440

Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 0))

0.0176 false
Time(s): 0.04 
Mem(Kb): 16692

Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, Nil)

0.0110 false
Time(s): 0.03 
Mem(Kb): 16476

Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [1,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0382 false
Time(s): 0.06 
Mem(Kb): 17544

Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),0,Leaf ())) -> [2,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 0))

0.0254 false
Time(s): 0.05 
Mem(Kb): 17380

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 0))

0.0293 false
Time(s): 0.05 
Mem(Kb): 17084

Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0677 true
Time(s): 0.09 
Mem(Kb): 19088

Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,3,3];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1213 true
Time(s): 0.14 
Mem(Kb): 21560

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),1,Leaf ()) -> [1,2,3];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [1,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1114 true
Time(s): 0.14 
Mem(Kb): 20360

Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1051 true
Time(s): 0.13 
Mem(Kb): 20020

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,0,1];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0451 true
Time(s): 0.07 
Mem(Kb): 18856

Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.1033 false
Time(s): 0.13 
Mem(Kb): 20364

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,0,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),2,Leaf ())) -> [2,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1222 true
Time(s): 0.14 
Mem(Kb): 21860

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Leaf (),3,Leaf ()) -> [3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0707 false
Time(s): 0.09 
Mem(Kb): 22128

Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,0,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0949 true
Time(s): 0.12 
Mem(Kb): 20744

Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1, f (Un_Node x . 2))

0.0432 false
Time(s): 0.06 
Mem(Kb): 18168

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0988 true
Time(s): 0.13 
Mem(Kb): 19940

Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Leaf (),3,Node (Leaf (),0,Node (Leaf (),2,Leaf ()))) -> [3,0,2];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1593 true
Time(s): 0.18 
Mem(Kb): 23740

Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [1,1,2];
Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1740 true
Time(s): 0.20 
Mem(Kb): 23280

Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),0,Leaf ()) -> [0,1,2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [2,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1612 true
Time(s): 0.18 
Mem(Kb): 22640

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [0,2,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0704 true
Time(s): 0.09 
Mem(Kb): 19596

Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),2,Leaf ()) -> [2,2,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1233 true
Time(s): 0.14 
Mem(Kb): 21752

Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,1];
Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1678 true
Time(s): 0.19 
Mem(Kb): 23084

Node (Leaf (),0,Node (Node (Leaf (),1,Leaf ()),3,Leaf ())) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,3,3];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1557 true
Time(s): 0.18 
Mem(Kb): 23916

Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,3,1];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1591 true
Time(s): 0.18 
Mem(Kb): 22416

Node (Leaf (),0,Node (Node (Leaf (),2,Leaf ()),3,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.0712 true
Time(s): 0.09 
Mem(Kb): 19276

Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1116 true
Time(s): 0.13 
Mem(Kb): 21040

Node (Node (Node (Leaf (),0,Leaf ()),3,Leaf ()),1,Leaf ()) -> [1,3,0];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,3,0];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2072 true
Time(s): 0.23 
Mem(Kb): 26556

Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,3,1];
Node (Node (Leaf (),3,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [1,3,2];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1910 true
Time(s): 0.21 
Mem(Kb): 24920

Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,1,0];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [2,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2431 true
Time(s): 0.27 
Mem(Kb): 29544

Node (Node (Leaf (),2,Leaf ()),3,Node (Leaf (),2,Leaf ())) -> [3,2,2];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,3];
Node (Node (Node (Leaf (),1,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2157 true
Time(s): 0.24 
Mem(Kb): 26044

Node (Node (Leaf (),0,Node (Leaf (),2,Leaf ())),2,Leaf ()) -> [2,0,2];
Node (Node (Leaf (),0,Leaf ()),3,Leaf ()) -> [3,0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,0];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1199 true
Time(s): 0.14 
Mem(Kb): 21860

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),3,Leaf ())) -> [1,3,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2087 false
Time(s): 0.23 
Mem(Kb): 25476

Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,2];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1917 true
Time(s): 0.21 
Mem(Kb): 22860

Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,0];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,0,0];
Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),0,Leaf ())) -> [3,3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2422 true
Time(s): 0.26 
Mem(Kb): 26724

Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Node (Leaf (),0,Node (Leaf (),0,Leaf ())) -> [0,0];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [1,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1923 true
Time(s): 0.21 
Mem(Kb): 25460

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,3,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),0,Leaf ())) -> [3,0,0];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2031 true
Time(s): 0.22 
Mem(Kb): 25596

Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,0,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Leaf (),2,Node (Leaf (),0,Node (Leaf (),1,Leaf ()))) -> [2,0,1];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))

0.2262 false
Time(s): 0.25 
Mem(Kb): 23632

Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,0];
Node (Leaf (),0,Node (Leaf (),3,Leaf ())) -> [0,3];
Node (Node (Leaf (),0,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,0,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2315 true
Time(s): 0.25 
Mem(Kb): 25592

Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [0,2,1];
Node (Node (Leaf (),3,Leaf ()),1,Leaf ()) -> [1,3];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),2,Leaf ())) -> [2,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2140 true
Time(s): 0.24 
Mem(Kb): 23452

Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,3,0];
Node (Leaf (),2,Node (Leaf (),0,Leaf ())) -> [2,0];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2424 true
Time(s): 0.26 
Mem(Kb): 25328

Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Leaf (),1,Node (Leaf (),0,Leaf ())) -> [1,0];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,3];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2625 true
Time(s): 0.29 
Mem(Kb): 27068

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,3];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2910 true
Time(s): 0.31 
Mem(Kb): 30252

Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,1,0];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2309 true
Time(s): 0.26 
Mem(Kb): 23920

Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,1];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [2,1,3];
Node (Leaf (),3,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [3,1,0];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Node (Leaf (),1,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2866 true
Time(s): 0.31 
Mem(Kb): 30660

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,3,1];
Node (Node (Node (Leaf (),2,Leaf ()),2,Leaf ()),0,Leaf ()) -> [0,2,2];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,1,2];
Node (Node (Leaf (),0,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,0,3];
Node (Node (Leaf (),1,Node (Leaf (),1,Leaf ())),2,Leaf ()) -> [2,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.1556 true
Time(s): 0.18 
Mem(Kb): 22424

Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,1,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [3,2,1];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [1,2,0];
Node (Leaf (),0,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [0,1,2];
Node (Node (Node (Leaf (),3,Leaf ()),0,Leaf ()),0,Leaf ()) -> [0,0,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2978 true
Time(s): 0.32 
Mem(Kb): 29088

Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),0,Leaf ()) -> [0,3,0];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [2,3,1];
Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),1,Leaf ()) -> [1,2,0];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,1,3];
Node (Node (Leaf (),0,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,0,2];
Node (Leaf (),3,Node (Leaf (),0,Leaf ())) -> [3,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3345 true
Time(s): 0.36 
Mem(Kb): 28924

Node (Node (Leaf (),3,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,3,0];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [3,1,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),1,Leaf ()) -> [1,3,1];
Node (Leaf (),3,Node (Leaf (),1,Leaf ())) -> [3,1];
Node (Leaf (),0,Node (Leaf (),2,Node (Leaf (),1,Leaf ()))) -> [0,2,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2888 true
Time(s): 0.31 
Mem(Kb): 26984

Node (Node (Leaf (),2,Node (Leaf (),0,Leaf ())),3,Leaf ()) -> [3,2,0];
Node (Node (Leaf (),3,Leaf ()),0,Leaf ()) -> [0,3];
Node (Node (Leaf (),0,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,0,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,2,1];
Node (Leaf (),1,Node (Leaf (),3,Leaf ())) -> [1,3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3246 true
Time(s): 0.35 
Mem(Kb): 29080

Node (Leaf (),1,Node (Leaf (),2,Leaf ())) -> [1,2];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),1,Leaf ())) -> [1,1,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),1,Leaf ()))) -> [0,3,1];
Node (Node (Leaf (),3,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,3,3];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2541 true
Time(s): 0.28 
Mem(Kb): 25300

Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),2,Leaf ()) -> [2,0,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),0,Leaf ()))) -> [1,0,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Leaf (),2,Leaf ()),2,Node (Leaf (),3,Leaf ())) -> [2,2,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [1,3,2];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2830 true
Time(s): 0.31 
Mem(Kb): 27756

Node (Leaf (),0,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [0,1,0];
Node (Node (Leaf (),2,Node (Leaf (),2,Leaf ())),1,Leaf ()) -> [1,2,2];
Node (Leaf (),3,Node (Leaf (),2,Leaf ())) -> [3,2];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),0,Leaf ()) -> [0,3,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),0,Leaf ()) -> [0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2713 true
Time(s): 0.29 
Mem(Kb): 26432

Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Node (Leaf (),0,Node (Leaf (),2,Leaf ())) -> [0,2];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Node (Node (Leaf (),3,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,3];
Node (Leaf (),1,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [1,3,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2991 true
Time(s): 0.32 
Mem(Kb): 26288

Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [2,1,0];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [3,2,2];
Node (Node (Leaf (),1,Leaf ()),2,Leaf ()) -> [2,1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),0,Leaf ()))) -> [1,1,0];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [1,1,3];
Node (Node (Leaf (),2,Leaf ()),1,Leaf ()) -> [1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3271 true
Time(s): 0.35 
Mem(Kb): 25636

Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),0,Leaf ()))) -> [2,2,0];
Node (Node (Node (Leaf (),2,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,2];
Node (Leaf (),2,Node (Leaf (),2,Node (Leaf (),2,Leaf ()))) -> [2,2,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Node (Node (Leaf (),1,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,1,1];
Node (Leaf (),1,Node (Node (Leaf (),3,Leaf ()),2,Leaf ())) -> [1,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3966 true
Time(s): 0.42 
Mem(Kb): 31912

Node (Node (Leaf (),3,Node (Leaf (),1,Leaf ())),3,Leaf ()) -> [3,3,1];
Node (Node (Leaf (),0,Leaf ()),0,Leaf ()) -> [0,0];
Node (Node (Leaf (),3,Leaf ()),2,Leaf ()) -> [2,3];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),0,Leaf ())) -> [0,3,0];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,2,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2774 true
Time(s): 0.30 
Mem(Kb): 24992

Node (Node (Leaf (),2,Node (Leaf (),1,Leaf ())),0,Leaf ()) -> [0,2,1];
Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Leaf (),1,Node (Leaf (),0,Node (Leaf (),3,Leaf ()))) -> [1,0,3];
Node (Leaf (),0,Node (Leaf (),3,Node (Leaf (),2,Leaf ()))) -> [0,3,2];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Node (Leaf (),2,Node (Node (Leaf (),1,Leaf ()),1,Leaf ())) -> [2,1,1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3776 true
Time(s): 0.40 
Mem(Kb): 28512

Node (Node (Leaf (),0,Leaf ()),2,Leaf ()) -> [2,0];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),1,Leaf ()))) -> [3,1,1];
Node (Leaf (),3,Node (Leaf (),2,Node (Leaf (),3,Leaf ()))) -> [3,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),3,Leaf ())) -> [1,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.2992 true
Time(s): 0.32 
Mem(Kb): 27284

Node (Node (Leaf (),3,Leaf ()),3,Node (Leaf (),3,Leaf ())) -> [3,3,3];
Node (Node (Leaf (),1,Leaf ()),1,Leaf ()) -> [1,1];
Node (Leaf (),0,Leaf ()) -> [0];
Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),0,Leaf ())) -> [1,2,0];
Node (Node (Node (Leaf (),3,Leaf ()),2,Leaf ()),3,Leaf ()) -> [3,2,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3505 true
Time(s): 0.37 
Mem(Kb): 28220

Node (Node (Leaf (),0,Leaf ()),1,Node (Leaf (),1,Leaf ())) -> [1,0,1];
Node (Leaf (),3,Leaf ()) -> [3];
Node (Leaf (),1,Node (Node (Leaf (),2,Leaf ()),0,Leaf ())) -> [1,0,2];
Node (Node (Leaf (),2,Leaf ()),1,Node (Leaf (),2,Leaf ())) -> [1,2,2];
Node (Node (Leaf (),1,Leaf ()),0,Leaf ()) -> [0,1];
Node (Node (Leaf (),3,Leaf ()),3,Leaf ()) -> [3,3];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3135 true
Time(s): 0.34 
Mem(Kb): 27288

Node (Leaf (),0,Leaf ()) -> [0];
Node (Node (Node (Leaf (),0,Leaf ()),0,Leaf ()),3,Leaf ()) -> [3,0,0];
Node (Node (Node (Leaf (),0,Leaf ()),1,Leaf ()),2,Leaf ()) -> [2,1,0];
Node (Node (Leaf (),2,Leaf ()),3,Leaf ()) -> [3,2];
Node (Leaf (),3,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [3,1,3];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Leaf (),1,Leaf ()) -> [1];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 2))
                    Cons (Un_Node x . 1, f (Un_Node x . 0))

0.3213 false
Time(s): 0.34 
Mem(Kb): 26948

Node (Leaf (),0,Node (Leaf (),1,Leaf ())) -> [0,1];
Node (Node (Leaf (),1,Node (Leaf (),3,Leaf ())),2,Leaf ()) -> [2,1,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),1,Leaf ()) -> [1,2,3];
Node (Node (Leaf (),0,Leaf ()),2,Node (Leaf (),1,Leaf ())) -> [2,0,1];
Node (Node (Leaf (),3,Leaf ()),0,Node (Leaf (),2,Leaf ())) -> [0,3,2];
Node (Leaf (),3,Node (Leaf (),3,Node (Leaf (),0,Leaf ()))) -> [3,3,0];
Node (Node (Leaf (),2,Leaf ()),0,Leaf ()) -> [0,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3715 true
Time(s): 0.39 
Mem(Kb): 29100

Node (Node (Leaf (),3,Node (Leaf (),3,Leaf ())),3,Leaf ()) -> [3,3,3];
Node (Leaf (),2,Leaf ()) -> [2];
Node (Leaf (),2,Node (Leaf (),3,Leaf ())) -> [2,3];
Node (Leaf (),2,Node (Node (Leaf (),0,Leaf ()),2,Leaf ())) -> [2,2,0];
Node (Node (Leaf (),1,Leaf ()),3,Leaf ()) -> [3,1];
Node (Leaf (),2,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [2,1,2];
Node (Leaf (),2,Node (Leaf (),1,Node (Leaf (),2,Leaf ()))) -> [2,1,2];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3822 true
Time(s): 0.41 
Mem(Kb): 26120

Node (Node (Node (Leaf (),1,Leaf ()),0,Leaf ()),1,Leaf ()) -> [1,0,1];
Node (Leaf (),2,Node (Leaf (),2,Leaf ())) -> [2,2];
Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),3,Leaf ()) -> [3,1,1];
Node (Node (Leaf (),2,Leaf ()),2,Leaf ()) -> [2,2];
Node (Leaf (),2,Node (Leaf (),1,Leaf ())) -> [2,1];
Node (Node (Node (Leaf (),1,Leaf ()),3,Leaf ()),2,Leaf ()) -> [2,3,1];
Node (Leaf (),1,Node (Leaf (),1,Node (Leaf (),3,Leaf ()))) -> [1,1,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3778 true
Time(s): 0.40 
Mem(Kb): 27300

Node (Node (Node (Leaf (),1,Leaf ()),1,Leaf ()),1,Leaf ()) -> [1,1,1];
Node (Node (Leaf (),1,Node (Leaf (),2,Leaf ())),0,Leaf ()) -> [0,1,2];
Node (Node (Leaf (),1,Node (Leaf (),0,Leaf ())),2,Leaf ()) -> [2,1,0];
Node (Leaf (),1,Node (Leaf (),1,Leaf ())) -> [1,1];
Node (Leaf (),0,Node (Node (Leaf (),3,Leaf ()),0,Leaf ())) -> [0,0,3];
Node (Leaf (),3,Node (Node (Leaf (),2,Leaf ()),1,Leaf ())) -> [3,1,2];
Node (Leaf (),3,Node (Leaf (),3,Leaf ())) -> [3,3];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3750 true
Time(s): 0.40 
Mem(Kb): 28088

Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),3,Leaf ())) -> [0,2,3];
Node (Node (Leaf (),2,Node (Leaf (),3,Leaf ())),0,Leaf ()) -> [0,2,3];
Node (Node (Leaf (),2,Leaf ()),0,Node (Leaf (),1,Leaf ())) -> [0,2,1];
Node (Leaf (),1,Leaf ()) -> [1];
Node (Node (Node (Leaf (),3,Leaf ()),3,Leaf ()),3,Leaf ()) -> [3,3,3];
Node (Leaf (),2,Node (Leaf (),3,Node (Leaf (),3,Leaf ()))) -> [2,3,3];
Node (Leaf (),1,Node (Node (Leaf (),0,Leaf ()),1,Leaf ())) -> [1,1,0];
Leaf () -> [];

=================================
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append Cons (Un_Node x . 1, f (Un_Node x . 0))
                    (f (Un_Node x . 2))

0.3648 true
Time(s): 0.39 
Mem(Kb): 31868

