([1,0],3) -> [1,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0220 true
Time(s): 0.06 
Mem(Kb): 19744

([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (1, Cons (x . 1, Nil))

0.0186 false
Time(s): 0.05 
Mem(Kb): 18336

([0],0) -> [0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0052 false
Time(s): 0.04 
Mem(Kb): 15968

([2],1) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))

0.3601 false
Time(s): 0.92 
Mem(Kb): 19568

([2],2) -> [2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0636 false
Time(s): 0.29 
Mem(Kb): 16068

([0,0,3],1) -> [0,0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1),
                      Cons (Un_S (x . 1),
                             Cons (S (S (x . 1)), Cons (x . 1, Nil))))

1.0538 false
Time(s): 1.59 
Mem(Kb): 27596

([1,1],0) -> [1,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0255 true
Time(s): 0.10 
Mem(Kb): 16672

([0,3,2],0) -> [0,3,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0112 true
Time(s): 0.07 
Mem(Kb): 16576

([0,3],1) -> [0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (S (S (x . 1)), Cons (x . 1, Nil)))

0.1613 false
Time(s): 0.20 
Mem(Kb): 17436

([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0059 false
Time(s): 0.05 
Mem(Kb): 16052

([1,1,1],3) -> [1,1,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0527 true
Time(s): 0.14 
Mem(Kb): 20012

([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0095 false
Time(s): 0.06 
Mem(Kb): 16068

([3,2,1],1) -> [3,2,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         f (Un_Cons (x . 0) . 1, Un_Cons (x . 0) . 0))

0.1796 false
Time(s): 0.23 
Mem(Kb): 19868

([0,0,3],1) -> [0,0,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1),
                      Cons (Un_S (x . 1),
                             Cons (S (S (x . 1)), Cons (x . 1, Nil))))

0.6429 false
Time(s): 0.71 
Mem(Kb): 27544

([0,1],0) -> [0,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0519 true
Time(s): 0.09 
Mem(Kb): 16592

([1,0],3) -> [1,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0808 true
Time(s): 0.13 
Mem(Kb): 19844

([1,1],0) -> [1,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0146 true
Time(s): 0.07 
Mem(Kb): 16716

([0,0,3],2) -> [0,0,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2303 true
Time(s): 0.62 
Mem(Kb): 18852

([2,3],1) -> [2,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0544 true
Time(s): 0.11 
Mem(Kb): 19832

([2],1) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))

0.1026 false
Time(s): 0.14 
Mem(Kb): 19516

([0,1],0) -> [0,1,0];
([3,0,2],0) -> [3,0,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0224 true
Time(s): 0.07 
Mem(Kb): 16968

([1,0,2],1) -> [1,0,2,1];
([1,2],2) -> [1,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2099 true
Time(s): 0.35 
Mem(Kb): 23672

([3,2,0],3) -> [3,2,0,3];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1271 true
Time(s): 0.17 
Mem(Kb): 25596

([0,1],0) -> [0,1,0];
([0,2],0) -> [0,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0782 true
Time(s): 0.12 
Mem(Kb): 16652

([1,3],1) -> [1,3,1];
([0,0],0) -> [0,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1245 true
Time(s): 0.17 
Mem(Kb): 19580

([0,1],3) -> [0,1,3];
([2,0],0) -> [2,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1777 true
Time(s): 0.22 
Mem(Kb): 24996

([0,1],3) -> [0,1,3];
([1,2],0) -> [1,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1988 true
Time(s): 0.26 
Mem(Kb): 25020

([2,1],0) -> [2,1,0];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0976 true
Time(s): 0.14 
Mem(Kb): 16804

([1,0,1],0) -> [1,0,1,0];
([2,0,1],3) -> [2,0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1567 true
Time(s): 0.20 
Mem(Kb): 25508

([0],0) -> [0,0];
([0,0,1],0) -> [0,0,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0537 true
Time(s): 0.10 
Mem(Kb): 16632

([3,3,3],0) -> [3,3,3,0];
([2,0,1],2) -> [2,0,1,2];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1805 true
Time(s): 0.23 
Mem(Kb): 26384

([0,1],2) -> [0,1,2];
([3],2) -> [3,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1154 true
Time(s): 0.16 
Mem(Kb): 23492

([2],2) -> [2,2];
([1],2) -> [1,2];
([1],3) -> [1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))

0.0737 false
Time(s): 0.11 
Mem(Kb): 25692

([0],3) -> [0,3];
([2,0,2],0) -> [2,0,2,0];
([1,3],1) -> [1,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1358 true
Time(s): 0.18 
Mem(Kb): 26100

([3],3) -> [3,3];
([1],3) -> [1,3];
([0,1,1],1) -> [0,1,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1025 true
Time(s): 0.14 
Mem(Kb): 26208

([3,0,2],2) -> [3,0,2,2];
([2,1,2],0) -> [2,1,2,0];
([1],1) -> [1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1809 true
Time(s): 0.22 
Mem(Kb): 24272

([0,2,2],2) -> [0,2,2,2];
([1,2],0) -> [1,2,0];
([1],1) -> [1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0984 true
Time(s): 0.14 
Mem(Kb): 24204

([0],1) -> [0,1];
([0,3,3],2) -> [0,3,3,2];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1061 true
Time(s): 0.15 
Mem(Kb): 23908

([2,1,2],0) -> [2,1,2,0];
([3,0],1) -> [3,0,1];
([3,3],3) -> [3,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1777 true
Time(s): 0.22 
Mem(Kb): 26300

([3,0],2) -> [3,0,2];
([3],2) -> [3,2];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0870 true
Time(s): 0.12 
Mem(Kb): 26140

([1,1],2) -> [1,1,2];
([0,3,0],1) -> [0,3,0,1];
([0],3) -> [0,3];
([0,1,1],3) -> [0,1,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0862 true
Time(s): 0.19 
Mem(Kb): 26416

([2,0],1) -> [2,0,1];
([3],0) -> [3,0];
([1],1) -> [1,1];
([2,2],1) -> [2,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0982 true
Time(s): 0.16 
Mem(Kb): 21212

([2,1],3) -> [2,1,3];
([0],3) -> [0,3];
([2],2) -> [2,2];
([2,0,1],3) -> [2,0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3074 true
Time(s): 0.38 
Mem(Kb): 26672

([0,3,1],1) -> [0,3,1,1];
([3,0,2],2) -> [3,0,2,2];
([1,0],0) -> [1,0,0];
([1,3],0) -> [1,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2149 true
Time(s): 0.25 
Mem(Kb): 24516

([3,2],2) -> [3,2,2];
([0],0) -> [0,0];
([1,3,2],1) -> [1,3,2,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1691 true
Time(s): 0.21 
Mem(Kb): 26396

([0,0,1],3) -> [0,0,1,3];
([1],1) -> [1,1];
([1],3) -> [1,3];
([3,1],0) -> [3,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2164 true
Time(s): 0.26 
Mem(Kb): 26548

([1],1) -> [1,1];
([3,0,1],2) -> [3,0,1,2];
([1],0) -> [1,0];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1127 true
Time(s): 0.24 
Mem(Kb): 26352

([3],0) -> [3,0];
([1,3],2) -> [1,3,2];
([2],1) -> [2,1];
([2,3],1) -> [2,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1290 true
Time(s): 0.17 
Mem(Kb): 24324

([0,2,1],2) -> [0,2,1,2];
([0,3],2) -> [0,3,2];
([2,1,1],3) -> [2,1,1,3];
([0],0) -> [0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3991 true
Time(s): 0.60 
Mem(Kb): 26600

([3],3) -> [3,3];
([3],1) -> [3,1];
([0],0) -> [0,0];
([3,2,0],2) -> [3,2,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2168 true
Time(s): 0.26 
Mem(Kb): 26400

([3,3],3) -> [3,3,3];
([0],1) -> [0,1];
([2,2],1) -> [2,2,1];
([1],1) -> [1,1];
([1,2],3) -> [1,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2444 true
Time(s): 0.29 
Mem(Kb): 26728

([2,2,3],1) -> [2,2,3,1];
([2],0) -> [2,0];
([0,1],2) -> [0,1,2];
([3,0],3) -> [3,0,3];
([3,1,1],3) -> [3,1,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3747 true
Time(s): 0.41 
Mem(Kb): 26812

([0,2,0],1) -> [0,2,0,1];
([3],2) -> [3,2];
([0],2) -> [0,2];
([2,2,2],0) -> [2,2,2,0];
([2],0) -> [2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1802 true
Time(s): 0.22 
Mem(Kb): 24372

([1],3) -> [1,3];
([0,2],0) -> [0,2,0];
([1],2) -> [1,2];
([1,1,1],2) -> [1,1,1,2];
([3,3,0],3) -> [3,3,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2475 true
Time(s): 0.29 
Mem(Kb): 26804

([2,3,3],1) -> [2,3,3,1];
([1,2],3) -> [1,2,3];
([3,3],1) -> [3,3,1];
([3,3,2],1) -> [3,3,2,1];
([2,0],1) -> [2,0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.7992 true
Time(s): 0.84 
Mem(Kb): 26648

([0,1,0],0) -> [0,1,0,0];
([0,2,2],1) -> [0,2,2,1];
([0,3,0],3) -> [0,3,0,3];
([1,2],0) -> [1,2,0];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1809 true
Time(s): 0.27 
Mem(Kb): 26648

([1,0],3) -> [1,0,3];
([2,2],3) -> [2,2,3];
([1,1],3) -> [1,1,3];
([0,2,3],0) -> [0,2,3,0];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1385 true
Time(s): 0.18 
Mem(Kb): 26732

([2,0,0],2) -> [2,0,0,2];
([3,3,1],3) -> [3,3,1,3];
([0],1) -> [0,1];
([3,2,1],0) -> [3,2,1,0];
([3],0) -> [3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1501 true
Time(s): 0.22 
Mem(Kb): 26708

([2,3,3],2) -> [2,3,3,2];
([2],2) -> [2,2];
([2,0,3],2) -> [2,0,3,2];
([2],1) -> [2,1];
([1,0],0) -> [1,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6273 true
Time(s): 1.27 
Mem(Kb): 24604

([0],3) -> [0,3];
([1,0,3],0) -> [1,0,3,0];
([1,1],1) -> [1,1,1];
([0,3],1) -> [0,3,1];
([3,1,0],3) -> [3,1,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2762 true
Time(s): 0.32 
Mem(Kb): 26764

([2,2,0],1) -> [2,2,0,1];
([1,3,0],0) -> [1,3,0,0];
([2,1],2) -> [2,1,2];
([1,1,3],0) -> [1,1,3,0];
([2],0) -> [2,0];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3357 true
Time(s): 0.38 
Mem(Kb): 24724

([3,2],1) -> [3,2,1];
([0],1) -> [0,1];
([1,3],3) -> [1,3,3];
([3],3) -> [3,3];
([3,0,3],2) -> [3,0,3,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2298 true
Time(s): 0.28 
Mem(Kb): 26872

([1,0],3) -> [1,0,3];
([3,2],1) -> [3,2,1];
([3],0) -> [3,0];
([1,1],2) -> [1,1,2];
([2,3],0) -> [2,3,0];
([2],1) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2640 true
Time(s): 0.33 
Mem(Kb): 26800

([1,2],3) -> [1,2,3];
([2],3) -> [2,3];
([1],1) -> [1,1];
([0],1) -> [0,1];
([1,1,0],3) -> [1,1,0,3];
([2,1,0],3) -> [2,1,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4143 true
Time(s): 0.46 
Mem(Kb): 27012

([2,2,1],2) -> [2,2,1,2];
([2,2],1) -> [2,2,1];
([1,0,2],1) -> [1,0,2,1];
([3],3) -> [3,3];
([3,2,2],0) -> [3,2,2,0];
([0,2,2],0) -> [0,2,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4689 true
Time(s): 0.51 
Mem(Kb): 26860

([2,0,1],3) -> [2,0,1,3];
([0,0,3],3) -> [0,0,3,3];
([2],3) -> [2,3];
([0,2],2) -> [0,2,2];
([1,0],1) -> [1,0,1];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4256 true
Time(s): 0.47 
Mem(Kb): 26992

([0,3],0) -> [0,3,0];
([1,0,0],3) -> [1,0,0,3];
([2],3) -> [2,3];
([2,0],2) -> [2,0,2];
([1],0) -> [1,0];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3793 true
Time(s): 0.42 
Mem(Kb): 26776

([3,2],3) -> [3,2,3];
([0,1],3) -> [0,1,3];
([0,0,2],1) -> [0,0,2,1];
([1,0],0) -> [1,0,0];
([2],1) -> [2,1];
([3,3],1) -> [3,3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3225 true
Time(s): 0.41 
Mem(Kb): 26816

([3,0,2],0) -> [3,0,2,0];
([2,3,3],2) -> [2,3,3,2];
([1,1,3],3) -> [1,1,3,3];
([0,1],0) -> [0,1,0];
([0,2,1],3) -> [0,2,1,3];
([3],1) -> [3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3601 true
Time(s): 0.41 
Mem(Kb): 26928

([1],0) -> [1,0];
([1],3) -> [1,3];
([3],2) -> [3,2];
([1,0],2) -> [1,0,2];
([1,1],2) -> [1,1,2];
([3,0,2],0) -> [3,0,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2074 true
Time(s): 0.24 
Mem(Kb): 26624

([3,2],0) -> [3,2,0];
([0],3) -> [0,3];
([3,0],0) -> [3,0,0];
([0,3,1],2) -> [0,3,1,2];
([2,1,1],0) -> [2,1,1,0];
([3,1],2) -> [3,1,2];
([3,0,1],2) -> [3,0,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5641 true
Time(s): 0.64 
Mem(Kb): 26964

([1,1],3) -> [1,1,3];
([1,2],1) -> [1,2,1];
([0,1,1],1) -> [0,1,1,1];
([3,1,3],0) -> [3,1,3,0];
([2,2],0) -> [2,2,0];
([2],0) -> [2,0];
([0,2],1) -> [0,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4603 true
Time(s): 0.50 
Mem(Kb): 26896

([0],3) -> [0,3];
([0],1) -> [0,1];
([1,2],2) -> [1,2,2];
([3,3,3],1) -> [3,3,3,1];
([1],0) -> [1,0];
([3],1) -> [3,1];
([3,0,0],2) -> [3,0,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3911 true
Time(s): 0.46 
Mem(Kb): 26896

([1],2) -> [1,2];
([2],3) -> [2,3];
([3],0) -> [3,0];
([2,3,3],3) -> [2,3,3,3];
([0,0,3],3) -> [0,0,3,3];
([0,0],1) -> [0,0,1];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3533 true
Time(s): 0.45 
Mem(Kb): 27080

([0],3) -> [0,3];
([0,2],0) -> [0,2,0];
([0,1,2],0) -> [0,1,2,0];
([0,0,1],2) -> [0,0,1,2];
([0,0],1) -> [0,0,1];
([2,2,1],2) -> [2,2,1,2];
([3,3],2) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5444 true
Time(s): 0.60 
Mem(Kb): 26880

([2,0,2],2) -> [2,0,2,2];
([0,2,1],2) -> [0,2,1,2];
([2],1) -> [2,1];
([1],1) -> [1,1];
([0,0],1) -> [0,0,1];
([0,1],1) -> [0,1,1];
([2,0,1],0) -> [2,0,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.3260 true
Time(s): 1.43 
Mem(Kb): 24660

([2],3) -> [2,3];
([2],1) -> [2,1];
([0,3],2) -> [0,3,2];
([2,2,0],1) -> [2,2,0,1];
([2,0,0],1) -> [2,0,0,1];
([0,0,1],0) -> [0,0,1,0];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5474 true
Time(s): 0.59 
Mem(Kb): 26948

([2,3],3) -> [2,3,3];
([1,0,0],2) -> [1,0,0,2];
([0,3],2) -> [0,3,2];
([0],0) -> [0,0];
([1,3],3) -> [1,3,3];
([3],1) -> [3,1];
([3,3,2],3) -> [3,3,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8145 true
Time(s): 0.99 
Mem(Kb): 26932

([3,3],2) -> [3,3,2];
([1,3],3) -> [1,3,3];
([1,0],0) -> [1,0,0];
([2,0,2],0) -> [2,0,2,0];
([1,0],1) -> [1,0,1];
([3],0) -> [3,0];
([2,2,2],2) -> [2,2,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.8910 true
Time(s): 1.13 
Mem(Kb): 27048

([3,0,0],2) -> [3,0,0,2];
([1,2,2],2) -> [1,2,2,2];
([2,1],1) -> [2,1,1];
([1,1],3) -> [1,1,3];
([2,0,0],2) -> [2,0,0,2];
([1],1) -> [1,1];
([3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.7451 true
Time(s): 0.81 
Mem(Kb): 27196

