([2,3,0],[3]) -> [2,3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (2, Cons (Un_Cons (x . 1) . 0, Cons (0, x . 1)))

0.2508 false
Time(s): 0.37 
Mem(Kb): 21548

([1,0,3],[0,3,0]) -> [1,0,3,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2350 true
Time(s): 0.33 
Mem(Kb): 21168

([3],[2,1]) -> [3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.2380 false
Time(s): 0.29 
Mem(Kb): 21344

([1,0],[3,0]) -> [1,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0449 false
Time(s): 0.09 
Mem(Kb): 17864

([1,1],[3]) -> [1,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (1, x . 1))

0.0697 false
Time(s): 0.14 
Mem(Kb): 21808

([2,0,0],[1,2]) -> [2,0,0,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0788 true
Time(s): 0.12 
Mem(Kb): 21696

([1,2,0],[3]) -> [1,2,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (S (Un_Cons (x . 0) . 0), Cons (0, x . 1)))

0.0671 false
Time(s): 0.10 
Mem(Kb): 21960

([1,0],[1,3,3]) -> [1,0,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0618 false
Time(s): 0.10 
Mem(Kb): 20748

([2,3,0],[3]) -> [2,3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (2, Cons (Un_Cons (x . 1) . 0, Cons (0, x . 1)))

0.0764 false
Time(s): 0.12 
Mem(Kb): 21472

([3,2],[1]) -> [3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0400 true
Time(s): 0.08 
Mem(Kb): 21816

([2,3,0],[3]) -> [2,3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (2, Cons (Un_Cons (x . 1) . 0, Cons (0, x . 1)))

0.0609 false
Time(s): 0.10 
Mem(Kb): 21524

([1,0],[1,3,3]) -> [1,0,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0391 false
Time(s): 0.09 
Mem(Kb): 20840

([3,3],[0,1]) -> [3,3,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0668 true
Time(s): 0.11 
Mem(Kb): 22136

([3,1],[3,1,0]) -> [3,1,3,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (1, x . 1))

0.1323 false
Time(s): 0.19 
Mem(Kb): 20948

([0],[0,0]) -> [0,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (0, x . 1)

0.2092 false
Time(s): 0.25 
Mem(Kb): 19808

([2],[2,2,1]) -> [2,2,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.1068 false
Time(s): 0.16 
Mem(Kb): 20764

([1,1],[3]) -> [1,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (1, x . 1))

0.1379 false
Time(s): 0.17 
Mem(Kb): 21768

([1,2],[1,0,2]) -> [1,2,1,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0655 true
Time(s): 0.11 
Mem(Kb): 20980

([0,2],[3,3,0]) -> [0,2,3,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (2, x . 1))

0.0728 false
Time(s): 0.12 
Mem(Kb): 22252

([2,0,3],[1,1]) -> [2,0,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1634 true
Time(s): 0.21 
Mem(Kb): 21540

([1,0],[0,1]) -> [1,0,0,1];
([2],[1,2,2]) -> [2,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1951 true
Time(s): 0.23 
Mem(Kb): 22132

([3],[1,3,3]) -> [3,1,3,3];
([0],[0,3,1]) -> [0,0,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0817 false
Time(s): 0.12 
Mem(Kb): 23128

([3,2],[2,0]) -> [3,2,2,0];
([1,1],[1,2]) -> [1,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0856 true
Time(s): 0.12 
Mem(Kb): 23484

([0],[1,2]) -> [0,1,2];
([3],[3,3,1]) -> [3,3,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0510 false
Time(s): 0.09 
Mem(Kb): 23088

([3],[2,3]) -> [3,2,3];
([2,1],[2]) -> [2,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0848 true
Time(s): 0.12 
Mem(Kb): 23336

([3,0],[3,0]) -> [3,0,3,0];
([3,3,2],[1]) -> [3,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0717 true
Time(s): 0.11 
Mem(Kb): 23460

([1],[3]) -> [1,3];
([0],[0,1,1]) -> [0,0,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0957 false
Time(s): 0.13 
Mem(Kb): 22952

([0,0],[2,3]) -> [0,0,2,3];
([2],[0]) -> [2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0, x . 1))

0.1111 false
Time(s): 0.15 
Mem(Kb): 23336

([1,3,3],[0,1]) -> [1,3,3,0,1];
([1,3],[3,0]) -> [1,3,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0766 true
Time(s): 0.13 
Mem(Kb): 23284

([3,0,3],[3,3,2]) -> [3,0,3,3,3,2];
([3],[1]) -> [3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1957 false
Time(s): 0.24 
Mem(Kb): 23432

([0],[0]) -> [0,0];
([1,1,3],[2]) -> [1,1,3,2];
([0],[2]) -> [0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.2816 false
Time(s): 0.32 
Mem(Kb): 23284

([0,2],[0,1]) -> [0,2,0,1];
([0],[0,1]) -> [0,0,1];
([0],[2,0,2]) -> [0,2,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0444 true
Time(s): 0.09 
Mem(Kb): 22696

([0,1,1],[0]) -> [0,1,1,0];
([0,0],[2,0]) -> [0,0,2,0];
([3,1,1],[1,1,2]) -> [3,1,1,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 1) . 0,
                                       Cons (S (Un_Cons (x . 1) . 0),
                                              Cons (1, x . 1)))
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 0 with
                                    | O _ -> Cons (0, Cons (0, x . 1))
                                    | S _ -> Cons (S (S (Un_Cons (x . 1) . 0)),
                                                    Cons (Un_Cons (x . 1) . 0,
                                                           Cons (1, x . 1)))))

0.4220 false
Time(s): 0.46 
Mem(Kb): 23708

([0,0],[2,2,3]) -> [0,0,2,2,3];
([1,2],[0]) -> [1,2,0];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.3419 false
Time(s): 0.84 
Mem(Kb): 23612

([3,3],[2,0,2]) -> [3,3,2,0,2];
([0,1,3],[3]) -> [0,1,3,3];
([2,2,2],[1]) -> [2,2,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3532 true
Time(s): 0.41 
Mem(Kb): 23840

([0,0,1],[3]) -> [0,0,1,3];
([3,3],[3,2]) -> [3,3,3,2];
([3,3],[1,2,3]) -> [3,3,1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (Un_Cons (x . 0) . 0,
                                            Cons (1, x . 1)))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (Un_Cons (x . 0) . 0, x . 1)))

1.3054 false
Time(s): 1.36 
Mem(Kb): 23780

([0,2,2],[1,0]) -> [0,2,2,1,0];
([2,0],[1]) -> [2,0,1];
([3],[3,1,1]) -> [3,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.6008 false
Time(s): 0.72 
Mem(Kb): 23748

([2],[1,1,1]) -> [2,1,1,1];
([0],[2]) -> [0,2];
([1,1,0],[1,2]) -> [1,1,0,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1540 true
Time(s): 0.19 
Mem(Kb): 23704

([1,0,0],[2,3]) -> [1,0,0,2,3];
([3,0,1],[3,2]) -> [3,0,1,3,2];
([0,0],[0,1]) -> [0,0,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))
                     | S _ -> (match Un_S (Un_Cons (x . 0) . 0) with
                                 | O _ -> Cons (Un_Cons (x . 0) . 0,
                                                 f
                                                   (Un_Cons (x . 0) . 1,
                                                     x . 1))
                                 | S _ -> Cons (Un_Cons (x . 0) . 0,
                                                 Cons (0, Cons (1, x . 1)))))

0.3684 false
Time(s): 0.40 
Mem(Kb): 23720

([3,1],[3,1,1]) -> [3,1,3,1,1];
([2,2,0],[0]) -> [2,2,0,0];
([3],[3]) -> [3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1169 true
Time(s): 0.15 
Mem(Kb): 23716

([3],[0,2,2]) -> [3,0,2,2];
([2],[3,3,3]) -> [2,3,3,3];
([0,3],[1,3,3]) -> [0,3,1,3,3];
([2,1],[3]) -> [2,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2350 true
Time(s): 0.35 
Mem(Kb): 23972

([1,3],[0,2]) -> [1,3,0,2];
([3,2],[3,3,1]) -> [3,2,3,3,1];
([0,1],[3,3,2]) -> [0,1,3,3,2];
([2],[3,2,3]) -> [2,3,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1381 true
Time(s): 0.18 
Mem(Kb): 24028

([3,3,1],[1,1]) -> [3,3,1,1,1];
([0,0,0],[0,2,2]) -> [0,0,0,0,2,2];
([3],[2,0,0]) -> [3,2,0,0];
([3,0],[0,0,3]) -> [3,0,0,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2041 true
Time(s): 0.31 
Mem(Kb): 24060

([2],[1]) -> [2,1];
([2],[0]) -> [2,0];
([2,1,3],[3]) -> [2,1,3,3];
([1],[2,1,1]) -> [1,2,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1072 true
Time(s): 0.14 
Mem(Kb): 23792

([1,1],[1,3,2]) -> [1,1,1,3,2];
([0],[1]) -> [0,1];
([2,1,3],[0,0,0]) -> [2,1,3,0,0,0];
([3,2],[0]) -> [3,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.2168 false
Time(s): 0.25 
Mem(Kb): 23848

([0,3,2],[3,1]) -> [0,3,2,3,1];
([0],[0]) -> [0,0];
([1,1,3],[3,1,2]) -> [1,1,3,3,1,2];
([0],[1]) -> [0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.4335 false
Time(s): 0.49 
Mem(Kb): 23824

([0,2,0],[2,0,2]) -> [0,2,0,2,0,2];
([2],[0]) -> [2,0];
([1,1,1],[1]) -> [1,1,1,1];
([1,1,1],[3,1,1]) -> [1,1,1,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.4961 false
Time(s): 0.54 
Mem(Kb): 24212

([2,0],[1,3,2]) -> [2,0,1,3,2];
([3,2],[3,0,0]) -> [3,2,3,0,0];
([1,1],[2]) -> [1,1,2];
([1],[0]) -> [1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1788 true
Time(s): 0.29 
Mem(Kb): 23896

([0,2],[1]) -> [0,2,1];
([3,3,0],[3,1,2]) -> [3,3,0,3,1,2];
([2,1],[0]) -> [2,1,0];
([3,1,0],[1,1]) -> [3,1,0,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (S (S (Un_Cons (x . 1) . 0)),
                                     Cons (1, x . 1))
                     | S _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> Cons (Un_S (Un_Cons (x . 1) . 0),
                                                   Cons (2, x . 1))
                                 | Cons _ -> Cons (3,
                                                    Cons (Un_Cons (x . 1) . 0,
                                                           Cons (0, x . 1)))))

1.8467 false
Time(s): 1.90 
Mem(Kb): 24284

([3],[3,0]) -> [3,3,0];
([0],[0,3,1]) -> [0,0,3,1];
([2,3,3],[3]) -> [2,3,3,3];
([2,0,1],[1,2]) -> [2,0,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2109 true
Time(s): 0.26 
Mem(Kb): 23952

([2,2],[0,2,3]) -> [2,2,0,2,3];
([0,1],[0]) -> [0,1,0];
([3],[0]) -> [3,0];
([1,3],[0]) -> [1,3,0];
([2,2,3],[0]) -> [2,2,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4029 true
Time(s): 0.46 
Mem(Kb): 23160

([3,3],[0]) -> [3,3,0];
([1,0],[3,3,3]) -> [1,0,3,3,3];
([0],[1]) -> [0,1];
([3,2],[1,3]) -> [3,2,1,3];
([2],[1,1,1]) -> [2,1,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2481 true
Time(s): 0.30 
Mem(Kb): 24116

([3],[0]) -> [3,0];
([0,3],[1,0]) -> [0,3,1,0];
([2,2],[0]) -> [2,2,0];
([0,2],[0,0]) -> [0,2,0,0];
([3],[3,1,2]) -> [3,3,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1408 true
Time(s): 0.20 
Mem(Kb): 24004

([3],[1,0]) -> [3,1,0];
([2],[1,2]) -> [2,1,2];
([2],[3]) -> [2,3];
([0,0],[2]) -> [0,0,2];
([3],[2]) -> [3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1582 true
Time(s): 0.20 
Mem(Kb): 23868

([0],[1,3]) -> [0,1,3];
([3,0,1],[1,1]) -> [3,0,1,1,1];
([1],[0]) -> [1,0];
([0,3,3],[2]) -> [0,3,3,2];
([0,2],[1,1,2]) -> [0,2,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.3831 false
Time(s): 0.43 
Mem(Kb): 24084

([0],[0,0]) -> [0,0,0];
([3,2,1],[0,0]) -> [3,2,1,0,0];
([3],[2,3,2]) -> [3,2,3,2];
([1,2,0],[0,0]) -> [1,2,0,0,0];
([3,1,2],[2]) -> [3,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.7666 true
Time(s): 2.26 
Mem(Kb): 24244

([1,3,3],[3,0]) -> [1,3,3,3,0];
([1,3,2],[2,1,3]) -> [1,3,2,2,1,3];
([0,2,0],[3,2,1]) -> [0,2,0,3,2,1];
([0],[1]) -> [0,1];
([0],[2,1,0]) -> [0,2,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.5206 false
Time(s): 0.58 
Mem(Kb): 24136

([2,2],[1]) -> [2,2,1];
([1,2,0],[3,1,0]) -> [1,2,0,3,1,0];
([1,1],[3]) -> [1,1,3];
([2,1,1],[3]) -> [2,1,1,3];
([3,2,2],[0,2,1]) -> [3,2,2,0,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4465 true
Time(s): 0.49 
Mem(Kb): 24012

([0],[3,0]) -> [0,3,0];
([0],[0,0,0]) -> [0,0,0,0];
([0,2],[0]) -> [0,2,0];
([2,2,3],[0,3,2]) -> [2,2,3,0,3,2];
([0,3],[3,0]) -> [0,3,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.7579 false
Time(s): 0.93 
Mem(Kb): 24176

([0,1,2],[2]) -> [0,1,2,2];
([3,1,0],[0]) -> [3,1,0,0];
([1,1,0],[3]) -> [1,1,0,3];
([3],[3,0,2]) -> [3,3,0,2];
([0,0],[0,2]) -> [0,0,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.6021 false
Time(s): 0.65 
Mem(Kb): 24160

([3,0,2],[2,1,2]) -> [3,0,2,2,1,2];
([2,0,2],[2,0]) -> [2,0,2,2,0];
([3,2],[0,2,2]) -> [3,2,0,2,2];
([1],[0,1]) -> [1,0,1];
([1],[1]) -> [1,1];
([0],[0,1,0]) -> [0,0,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.2624 true
Time(s): 0.35 
Mem(Kb): 24256

([1,1,0],[0,1]) -> [1,1,0,0,1];
([3,3],[2,3,0]) -> [3,3,2,3,0];
([3],[2,0,0]) -> [3,2,0,0];
([3,2],[0,3]) -> [3,2,0,3];
([3,1,2],[1]) -> [3,1,2,1];
([3,1],[0]) -> [3,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6257 true
Time(s): 0.68 
Mem(Kb): 24296

([2,1,2],[1,2,3]) -> [2,1,2,1,2,3];
([1,1],[2,2,0]) -> [1,1,2,2,0];
([2,3],[2]) -> [2,3,2];
([1],[2,3,3]) -> [1,2,3,3];
([1,1],[1,0,2]) -> [1,1,1,0,2];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3320 true
Time(s): 0.39 
Mem(Kb): 24248

([1],[3,0,3]) -> [1,3,0,3];
([2,2],[0,3,2]) -> [2,2,0,3,2];
([3,0],[0,3]) -> [3,0,0,3];
([1,3,0],[3,3]) -> [1,3,0,3,3];
([0],[1,2,1]) -> [0,1,2,1];
([1],[2,2]) -> [1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

1.7742 false
Time(s): 1.91 
Mem(Kb): 21360

([1,2,1],[0,1]) -> [1,2,1,0,1];
([3,1],[3,2,2]) -> [3,1,3,2,2];
([2,0],[1]) -> [2,0,1];
([1,0,1],[1,0]) -> [1,0,1,1,0];
([2],[3,2,1]) -> [2,3,2,1];
([0,3],[0]) -> [0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.5955 true
Time(s): 0.72 
Mem(Kb): 24276

([1,0,1],[3,0]) -> [1,0,1,3,0];
([1],[2]) -> [1,2];
([0],[3,0,1]) -> [0,3,0,1];
([1,3,3],[2]) -> [1,3,3,2];
([0],[3,2]) -> [0,3,2];
([1],[3]) -> [1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.7106 false
Time(s): 0.76 
Mem(Kb): 24256

([3],[1,1,3]) -> [3,1,1,3];
([0],[2,2,1]) -> [0,2,2,1];
([3],[3,1]) -> [3,3,1];
([0],[0,1]) -> [0,0,1];
([0,1],[3,2,2]) -> [0,1,3,2,2];
([3,0,1],[3,2]) -> [3,0,1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.4369 true
Time(s): 0.54 
Mem(Kb): 24240

([0,0,3],[0,2,2]) -> [0,0,3,0,2,2];
([0,1],[1,2]) -> [0,1,1,2];
([1,1,2],[2,0,0]) -> [1,1,2,2,0,0];
([2,2],[0,0]) -> [2,2,0,0];
([2,3,1],[0,1]) -> [2,3,1,0,1];
([1],[0,3]) -> [1,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

1.2530 false
Time(s): 1.50 
Mem(Kb): 24268

([1,3],[2,2]) -> [1,3,2,2];
([0,0],[2,3]) -> [0,0,2,3];
([1],[3,3]) -> [1,3,3];
([0,3],[3,2,2]) -> [0,3,3,2,2];
([2],[3]) -> [2,3];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.4473 false
Time(s): 0.49 
Mem(Kb): 24184

([0],[0,1,0]) -> [0,0,1,0];
([3,1,0],[1]) -> [3,1,0,1];
([0,3],[3,2,0]) -> [0,3,3,2,0];
([0],[2]) -> [0,2];
([2,2,0],[3,2]) -> [2,2,0,3,2];
([3,2,1],[3,0]) -> [3,2,1,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.3445 true
Time(s): 0.40 
Mem(Kb): 24192

([1],[0,3,1]) -> [1,0,3,1];
([2],[2,3]) -> [2,2,3];
([3],[1,3,0]) -> [3,1,3,0];
([3,3,1],[1,0,2]) -> [3,3,1,1,0,2];
([1,0,1],[1,0]) -> [1,0,1,1,0];
([1,3],[1]) -> [1,3,1];
([1,0,3],[0,3]) -> [1,0,3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6899 true
Time(s): 0.75 
Mem(Kb): 24448

([1,2,1],[3]) -> [1,2,1,3];
([0,3],[3]) -> [0,3,3];
([3],[2,2,1]) -> [3,2,2,1];
([1],[3]) -> [1,3];
([0,0,2],[0,1,0]) -> [0,0,2,0,1,0];
([3,0],[2]) -> [3,0,2];
([3],[2,1,3]) -> [3,2,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.9746 false
Time(s): 1.03 
Mem(Kb): 24388

([1,3],[1]) -> [1,3,1];
([0,1],[1,0,3]) -> [0,1,1,0,3];
([1],[1]) -> [1,1];
([3,3,0],[2]) -> [3,3,0,2];
([3],[2]) -> [3,2];
([3,1],[1]) -> [3,1,1];
([3,0],[1,2,3]) -> [3,0,1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

1.4707 false
Time(s): 1.52 
Mem(Kb): 24432

([2,3],[0,3]) -> [2,3,0,3];
([3,1],[2,1,2]) -> [3,1,2,1,2];
([3,2,3],[3,2,0]) -> [3,2,3,3,2,0];
([1,2,0],[3,3]) -> [1,2,0,3,3];
([0],[1,1]) -> [0,1,1];
([3,1,2],[0]) -> [3,1,2,0];
([0,2],[3,3]) -> [0,2,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.6777 true
Time(s): 0.74 
Mem(Kb): 24488

([2],[2]) -> [2,2];
([0,0,2],[2,1,0]) -> [0,0,2,2,1,0];
([2],[2,2]) -> [2,2,2];
([1],[0,2]) -> [1,0,2];
([2],[0,3]) -> [2,0,3];
([0,0,1],[0,3,3]) -> [0,0,1,0,3,3];
([1],[3,1]) -> [1,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.7344 false
Time(s): 0.80 
Mem(Kb): 24340

([3,1],[0,3,0]) -> [3,1,0,3,0];
([0],[1,1,0]) -> [0,1,1,0];
([3,3,3],[0,0]) -> [3,3,3,0,0];
([3,2],[3]) -> [3,2,3];
([0],[3,2]) -> [0,3,2];
([1],[2,1,0]) -> [1,2,1,0];
([1],[1,1]) -> [1,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

1.4420 true
Time(s): 1.81 
Mem(Kb): 24476

([2,0],[3,3]) -> [2,0,3,3];
([1,0,2],[2,1]) -> [1,0,2,2,1];
([3],[0,3,1]) -> [3,0,3,1];
([2,2],[3,1]) -> [2,2,3,1];
([1,3],[1]) -> [1,3,1];
([0,1,0],[0,3,3]) -> [0,1,0,0,3,3];
([2,0],[0,1,1]) -> [2,0,0,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

1.2241 false
Time(s): 1.81 
Mem(Kb): 24308

([1],[2,1,3]) -> [1,2,1,3];
([0,2],[2,3]) -> [0,2,2,3];
([0],[2,0]) -> [0,2,0];
([0,0],[0,0]) -> [0,0,0,0];
([2,3],[1]) -> [2,3,1];
([2,0,1],[0,1,2]) -> [2,0,1,0,1,2];
([1],[1,1,0]) -> [1,1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

2.4235 false
Time(s): 2.47 
Mem(Kb): 22068

([3],[0,0,0]) -> [3,0,0,0];
([3],[2,3]) -> [3,2,3];
([1,2],[1,0]) -> [1,2,1,0];
([0,1,2],[0,2,3]) -> [0,1,2,0,2,3];
([2],[2]) -> [2,2];
([2,1],[3,0,2]) -> [2,1,3,0,2];
([2,0,3],[3,0]) -> [2,0,3,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.7543 true
Time(s): 0.82 
Mem(Kb): 24468

([1,1],[3]) -> [1,1,3];
([1],[0]) -> [1,0];
([2,0],[1,0]) -> [2,0,1,0];
([0,2],[2]) -> [0,2,2];
([1,0,2],[3]) -> [1,0,2,3];
([3,0],[1]) -> [3,0,1];
([1],[2,1,2]) -> [1,2,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

1.1679 false
Time(s): 1.23 
Mem(Kb): 24304

