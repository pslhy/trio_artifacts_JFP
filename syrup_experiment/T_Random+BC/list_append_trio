([1,0],[3,0]) -> [1,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0073 false

([2,0,3],[1,1]) -> [2,0,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0140 true

([3,2],[1]) -> [3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0127 true

([0],[1]) -> [0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0060 false

([1,0],[1,3,3]) -> [1,0,1,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0119 false

([0,0],[3,0]) -> [0,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, x . 1))

0.0083 false

([2,2],[2,0,1]) -> [2,2,2,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0124 true

([2,0,0],[1,2]) -> [2,0,0,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0142 true

([3,3],[3,1,3]) -> [3,3,3,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0123 true

([2,0,0],[2,3,1]) -> [2,0,0,2,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (0, Cons (0, x . 1)))

0.0139 false

([0,3],[3,0,2]) -> [0,3,3,0,2];
([1,0,3],[0,3]) -> [1,0,3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (3, x . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     f (Un_Cons (x . 0) . 1, x . 1)))

0.1680 false

([1,1,0],[1,3,2]) -> [1,1,0,1,3,2];
([1],[3,3,3]) -> [1,3,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0303 false

([1],[3]) -> [1,3];
([0],[0,1,1]) -> [0,0,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0221 false

([1,0,2],[0,1]) -> [1,0,2,0,1];
([1,3,2],[3,1,0]) -> [1,3,2,3,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0246 true

([1,1,0],[2]) -> [1,1,0,2];
([0,2],[2]) -> [0,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (2, Un_Cons (x . 0) . 1))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     f (Un_Cons (x . 0) . 1, x . 0)))

0.0643 false

([0,0,0],[3,3]) -> [0,0,0,3,3];
([3],[0,3]) -> [3,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> f (Un_Cons (x . 0) . 1, Cons (0, x . 1)))

0.0303 false

([0,0,0],[1,2]) -> [0,0,0,1,2];
([3,3,2],[0,3]) -> [3,3,2,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (Un_Cons (x . 0) . 0,
                                            Cons (0, x . 1)))
                     | S _ -> Cons (Un_Cons (x . 0) . 0,
                                     Cons (Un_Cons (x . 0) . 0,
                                            Cons (2, x . 1))))

0.0521 false

([1,0,3],[3,0]) -> [1,0,3,3,0];
([2,1,1],[0,0]) -> [2,1,1,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (S (S (Un_Cons (x . 1) . 0)),
                                     Cons (S (Un_Cons (x . 1) . 0),
                                            Cons (1, x . 1)))
                     | S _ -> Cons (1,
                                     Cons (0,
                                            Cons (Un_Cons (x . 1) . 0, x . 1))))

0.0345 false

([3,1],[0,0,0]) -> [3,1,0,0,0];
([3,1,0],[0]) -> [3,1,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0189 true

([1],[3,0]) -> [1,3,0];
([2],[1,1,2]) -> [2,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0173 false

([2,0],[2,0,2]) -> [2,0,2,0,2];
([3,2],[2,1]) -> [3,2,2,1];
([0,1],[2,1,1]) -> [0,1,2,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0269 true

([2],[2,2]) -> [2,2,2];
([1],[3,2,1]) -> [1,3,2,1];
([2,1,1],[3]) -> [2,1,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0242 true

([0,1,1],[0]) -> [0,1,1,0];
([0,0],[2,0]) -> [0,0,2,0];
([3,1,1],[1,1,2]) -> [3,1,1,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 1 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 1) . 0,
                                       Cons (S (Un_Cons (x . 1) . 0),
                                              Cons (1, x . 1)))
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 0 with
                                    | O _ -> Cons (0, Cons (0, x . 1))
                                    | S _ -> Cons (S (S (Un_Cons (x . 1) . 0)),
                                                    Cons (Un_Cons (x . 1) . 0,
                                                           Cons (1, x . 1)))))

0.0650 false

([1,0,0],[0,3]) -> [1,0,0,0,3];
([2],[2]) -> [2,2];
([3,0,2],[2,3,2]) -> [3,0,2,2,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0334 true

([0,2],[0,1]) -> [0,2,0,1];
([0],[0,1]) -> [0,0,1];
([0],[2,0,2]) -> [0,2,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0215 true

([3,1],[3,1,1]) -> [3,1,3,1,1];
([2,2,0],[0]) -> [2,2,0,0];
([3],[3]) -> [3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0239 true

([1],[1,2,0]) -> [1,1,2,0];
([0,3],[3]) -> [0,3,3];
([2],[0,2,1]) -> [2,0,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0240 true

([0],[3,3,1]) -> [0,3,3,1];
([1],[3,3,0]) -> [1,3,3,0];
([2],[3,1]) -> [2,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, x . 1)

0.0196 false

([3,2],[0,2]) -> [3,2,0,2];
([0,3],[3]) -> [0,3,3];
([2,2,2],[2,3,3]) -> [2,2,2,2,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0271 true

([1,1,2],[0,0,2]) -> [1,1,2,0,0,2];
([1],[3,3,1]) -> [1,3,3,1];
([3,1],[3]) -> [3,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0253 true

([3,0,1],[3,1]) -> [3,0,1,3,1];
([2,0],[2,0]) -> [2,0,2,0];
([1,1,1],[3,0,0]) -> [1,1,1,3,0,0];
([3],[2,0,2]) -> [3,2,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0438 false

([3,0],[2]) -> [3,0,2];
([0,3],[0,0,3]) -> [0,3,0,0,3];
([1,2],[3]) -> [1,2,3];
([0,1,1],[0]) -> [0,1,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0270 true

([3],[1,0,2]) -> [3,1,0,2];
([2,0],[2,2,2]) -> [2,0,2,2,2];
([2],[2,3]) -> [2,2,3];
([3,3,2],[2,2]) -> [3,3,2,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0394 true

([2,3,0],[1,3,0]) -> [2,3,0,1,3,0];
([2,2,0],[2]) -> [2,2,0,2];
([2,3],[2]) -> [2,3,2];
([0,2],[2,0,1]) -> [0,2,2,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0302 true

([1,1,0],[1,0]) -> [1,1,0,1,0];
([1,0],[3,1]) -> [1,0,3,1];
([1],[3,1,3]) -> [1,3,1,3];
([1,1,2],[3]) -> [1,1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0338 true

([2,2,0],[0]) -> [2,2,0,0];
([0],[2]) -> [0,2];
([3],[1,1,0]) -> [3,1,1,0];
([1],[2,2]) -> [1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0292 true

([2],[1,3,2]) -> [2,1,3,2];
([2],[1,0,2]) -> [2,1,0,2];
([1,2],[3,2,1]) -> [1,2,3,2,1];
([0,3,1],[0,1,3]) -> [0,3,1,0,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0346 true

([2],[0,0]) -> [2,0,0];
([3,0,0],[2,0,0]) -> [3,0,0,2,0,0];
([0],[3,1,3]) -> [0,3,1,3];
([3,0,3],[0,0]) -> [3,0,3,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0336 true

([3],[0,1]) -> [3,0,1];
([3,1,1],[3]) -> [3,1,1,3];
([2],[0,0,2]) -> [2,0,0,2];
([0,3],[3,3]) -> [0,3,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0313 true

([3,0,3],[1,0]) -> [3,0,3,1,0];
([1,1],[3]) -> [1,1,3];
([2,1,2],[3,2]) -> [2,1,2,3,2];
([2,1],[3]) -> [2,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0312 true

([3],[1,3]) -> [3,1,3];
([3],[3,2,2]) -> [3,3,2,2];
([3,1],[3,1,0]) -> [3,1,3,1,0];
([1,3,0],[2,0,1]) -> [1,3,0,2,0,1];
([3,0,2],[1]) -> [3,0,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0463 true

([0],[0,0]) -> [0,0,0];
([3,2,1],[0,0]) -> [3,2,1,0,0];
([3],[2,3,2]) -> [3,2,3,2];
([1,2,0],[0,0]) -> [1,2,0,0,0];
([3,1,2],[2]) -> [3,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0480 true

([1,3,3],[3,0]) -> [1,3,3,3,0];
([1,3,2],[2,1,3]) -> [1,3,2,2,1,3];
([0,2,0],[3,2,1]) -> [0,2,0,3,2,1];
([0],[1]) -> [0,1];
([0],[2,1,0]) -> [0,2,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0525 false

([3],[3,0]) -> [3,3,0];
([1,1,1],[3,1]) -> [1,1,1,3,1];
([0,0],[0,0]) -> [0,0,0,0];
([2],[1,0]) -> [2,1,0];
([1],[1,0,3]) -> [1,1,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0375 true

([0],[3,3]) -> [0,3,3];
([1,0],[2]) -> [1,0,2];
([0,2,3],[2,3]) -> [0,2,3,2,3];
([1,3],[2,2,0]) -> [1,3,2,2,0];
([3,3],[3,2,0]) -> [3,3,3,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0468 false

([3,2],[2,1]) -> [3,2,2,1];
([1],[2]) -> [1,2];
([2,1],[3]) -> [2,1,3];
([2,0,2],[1]) -> [2,0,2,1];
([0],[0,3]) -> [0,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0332 true

([0],[1,3]) -> [0,1,3];
([3,0,1],[1,1]) -> [3,0,1,1,1];
([1],[0]) -> [1,0];
([0,3,3],[2]) -> [0,3,3,2];
([0,2],[1,1,2]) -> [0,2,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0494 false

([3,3],[0]) -> [3,3,0];
([1,0],[3,3,3]) -> [1,0,3,3,3];
([0],[1]) -> [0,1];
([3,2],[1,3]) -> [3,2,1,3];
([2],[1,1,1]) -> [2,1,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0363 true

([2,2,2],[0]) -> [2,2,2,0];
([1,1,2],[2]) -> [1,1,2,2];
([0,1,0],[3,0]) -> [0,1,0,3,0];
([0,3,3],[3,1]) -> [0,3,3,3,1];
([3],[2,1]) -> [3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0516 true

([1,0],[0,0]) -> [1,0,0,0];
([2],[1,3,0]) -> [2,1,3,0];
([2,2,1],[3]) -> [2,2,1,3];
([2],[2]) -> [2,2];
([1],[2,3,1]) -> [1,2,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0417 true

([3,0,2],[2,1,2]) -> [3,0,2,2,1,2];
([2,0,2],[2,0]) -> [2,0,2,2,0];
([3,2],[0,2,2]) -> [3,2,0,2,2];
([1],[0,1]) -> [1,0,1];
([1],[1]) -> [1,1];
([0],[0,1,0]) -> [0,0,1,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0513 true

([1,2,1],[0,1]) -> [1,2,1,0,1];
([3,1],[3,2,2]) -> [3,1,3,2,2];
([2,0],[1]) -> [2,0,1];
([1,0,1],[1,0]) -> [1,0,1,1,0];
([2],[3,2,1]) -> [2,3,2,1];
([0,3],[0]) -> [0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0543 true

([1,1],[0]) -> [1,1,0];
([1],[3,2,3]) -> [1,3,2,3];
([0],[2,1,3]) -> [0,2,1,3];
([3,1],[1,3,3]) -> [3,1,1,3,3];
([1,2],[0,3]) -> [1,2,0,3];
([3],[1,2]) -> [3,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0511 true

([1,3,0],[3,0,2]) -> [1,3,0,3,0,2];
([2,0,0],[3]) -> [2,0,0,3];
([3,2],[3,3]) -> [3,2,3,3];
([2,1],[2,3,0]) -> [2,1,2,3,0];
([1,3,0],[3,2]) -> [1,3,0,3,2];
([3,1,2],[1]) -> [3,1,2,1];
([], []) -> [];

=================================
None
([0,0],[2,3,1]) -> [0,0,2,3,1];
([0,1,3],[0,3]) -> [0,1,3,0,3];
([2],[2,1,0]) -> [2,2,1,0];
([0,1],[2,2]) -> [0,1,2,2];
([1,3,0],[2,0]) -> [1,3,0,2,0];
([0,1,0],[1,2,2]) -> [0,1,0,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0648 false

([2],[0]) -> [2,0];
([1,2,0],[1]) -> [1,2,0,1];
([3,1],[1]) -> [3,1,1];
([0,2,1],[3]) -> [0,2,1,3];
([0,0],[0,0]) -> [0,0,0,0];
([3,1],[3,1,3]) -> [3,1,3,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0474 true

([3],[1,1,3]) -> [3,1,1,3];
([0],[2,2,1]) -> [0,2,2,1];
([3],[3,1]) -> [3,3,1];
([0],[0,1]) -> [0,0,1];
([0,1],[3,2,2]) -> [0,1,3,2,2];
([3,0,1],[3,2]) -> [3,0,1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0475 true

([2],[1,1,2]) -> [2,1,1,2];
([2,3,3],[1,0,2]) -> [2,3,3,1,0,2];
([3],[2,0]) -> [3,2,0];
([1,0,2],[2]) -> [1,0,2,2];
([1,1,0],[1]) -> [1,1,0,1];
([3],[0,2]) -> [3,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0551 true

([0,3],[1]) -> [0,3,1];
([3,3],[0,0,0]) -> [3,3,0,0,0];
([3,3,3],[0,0,2]) -> [3,3,3,0,0,2];
([2,3,1],[1]) -> [2,3,1,1];
([0,1],[3]) -> [0,1,3];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 0)
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (x . 0) . 0,
                                                      Cons (Un_Cons (
                                                              Un_Cons (x . 0)
                                                                . 1)
                                                              . 0,
                                                             x . 1))
                                    | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                                       f
                                                         (Un_Cons (x . 0) . 1,
                                                           x . 1))))

2.5406 false

([1],[2,0]) -> [1,2,0];
([0],[2,2,0]) -> [0,2,2,0];
([2,3,0],[3,2,3]) -> [2,3,0,3,2,3];
([3,2,1],[2,2,1]) -> [3,2,1,2,2,1];
([2],[0]) -> [2,0];
([1],[1,1,2]) -> [1,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0665 false

([0,3,0],[3,3]) -> [0,3,0,3,3];
([2],[2,1]) -> [2,2,1];
([1,3,0],[1]) -> [1,3,0,1];
([1,0,2],[3]) -> [1,0,2,3];
([2,3,3],[0]) -> [2,3,3,0];
([3],[1,0,3]) -> [3,1,0,3];
([0,3],[2,1]) -> [0,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1035 false

([2],[1,0,0]) -> [2,1,0,0];
([2,2,2],[2]) -> [2,2,2,2];
([1],[1,2]) -> [1,1,2];
([2,1,0],[3]) -> [2,1,0,3];
([1,0],[0,0]) -> [1,0,0,0];
([0,2],[0,1]) -> [0,2,0,1];
([2,0],[1,0,0]) -> [2,0,1,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0580 true

([2,2],[3]) -> [2,2,3];
([3,1],[3,1]) -> [3,1,3,1];
([0,2,1],[0,0]) -> [0,2,1,0,0];
([3,1],[1,0,1]) -> [3,1,1,0,1];
([1,0],[1,2]) -> [1,0,1,2];
([1],[1,1,0]) -> [1,1,1,0];
([1,2,2],[1]) -> [1,2,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0983 false

([0],[2,1,1]) -> [0,2,1,1];
([1,2,2],[0,0,3]) -> [1,2,2,0,0,3];
([0],[3,2]) -> [0,3,2];
([1,0,3],[2]) -> [1,0,3,2];
([3,1],[0,1]) -> [3,1,0,1];
([3,0],[2]) -> [3,0,2];
([2],[1,2]) -> [2,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0660 false

([1,3],[0,3,3]) -> [1,3,0,3,3];
([1,1],[1]) -> [1,1,1];
([0,1,0],[2,3,3]) -> [0,1,0,2,3,3];
([2,1],[0,1,1]) -> [2,1,0,1,1];
([1,2],[0,3]) -> [1,2,0,3];
([0,2,0],[3,2,0]) -> [0,2,0,3,2,0];
([0],[3,1]) -> [0,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0622 true

([3,1,2],[3,1,1]) -> [3,1,2,3,1,1];
([0,3,1],[0,2]) -> [0,3,1,0,2];
([3],[2]) -> [3,2];
([0],[3,0]) -> [0,3,0];
([2],[3]) -> [2,3];
([3,1,0],[1,2,0]) -> [3,1,0,1,2,0];
([3,2],[2]) -> [3,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0537 true

([0],[0]) -> [0,0];
([0,2,1],[2,2,1]) -> [0,2,1,2,2,1];
([1,3],[2,2,0]) -> [1,3,2,2,0];
([3,2,1],[0,0,0]) -> [3,2,1,0,0,0];
([3,0],[1]) -> [3,0,1];
([1],[1,1,1]) -> [1,1,1,1];
([1,0,1],[1,2]) -> [1,0,1,1,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0813 false

([3],[2]) -> [3,2];
([3,2,3],[0,0,2]) -> [3,2,3,0,0,2];
([2],[2,1,1]) -> [2,2,1,1];
([1,0],[2,1]) -> [1,0,2,1];
([3],[2,0,3]) -> [3,2,0,3];
([2],[3,3]) -> [2,3,3];
([0,0,2],[2,2]) -> [0,0,2,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0747 true

([3,1],[0]) -> [3,1,0];
([0],[3,0,2]) -> [0,3,0,2];
([0,3,2],[1,0,1]) -> [0,3,2,1,0,1];
([0],[2,0]) -> [0,2,0];
([3,0,2],[3,1]) -> [3,0,2,3,1];
([1],[3,3,3]) -> [1,3,3,3];
([2],[3]) -> [2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0637 true

([1,3],[1]) -> [1,3,1];
([0,1],[1,0,3]) -> [0,1,1,0,3];
([1],[1]) -> [1,1];
([3,3,0],[2]) -> [3,3,0,2];
([3],[2]) -> [3,2];
([3,1],[1]) -> [3,1,1];
([3,0],[1,2,3]) -> [3,0,1,2,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0897 false

([0],[1,3]) -> [0,1,3];
([0,1,0],[3,3,1]) -> [0,1,0,3,3,1];
([0],[2,0,3]) -> [0,2,0,3];
([0,0,2],[0]) -> [0,0,2,0];
([1,1],[3,3,2]) -> [1,1,3,3,2];
([2,1],[1,0,0]) -> [2,1,1,0,0];
([2,3],[0]) -> [2,3,0];
([2,2],[0,3]) -> [2,2,0,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1000 false

([1,0,1],[0,0]) -> [1,0,1,0,0];
([1],[2]) -> [1,2];
([1,2],[3,3,3]) -> [1,2,3,3,3];
([1],[1]) -> [1,1];
([1],[3]) -> [1,3];
([3],[0,0,1]) -> [3,0,0,1];
([3,0],[1]) -> [3,0,1];
([3,0],[2,2]) -> [3,0,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0648 true

([2],[0,0,3]) -> [2,0,0,3];
([3,1],[2]) -> [3,1,2];
([0,2],[3,2,2]) -> [0,2,3,2,2];
([1,3,1],[1]) -> [1,3,1,1];
([2,3],[1,0]) -> [2,3,1,0];
([3],[0,3]) -> [3,0,3];
([3,0,2],[1,3]) -> [3,0,2,1,3];
([2,2,0],[1,1,3]) -> [2,2,0,1,1,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0780 true

([3],[1,1]) -> [3,1,1];
([3,1,0],[2]) -> [3,1,0,2];
([2,0],[2]) -> [2,0,2];
([0,2],[2]) -> [0,2,2];
([3],[3,2]) -> [3,3,2];
([1,2],[3,0,3]) -> [1,2,3,0,3];
([0],[3,3,0]) -> [0,3,3,0];
([0,0],[0,3,3]) -> [0,0,0,3,3];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0686 true

([1,0],[0,3]) -> [1,0,0,3];
([3,0],[1,1]) -> [3,0,1,1];
([2,2],[1]) -> [2,2,1];
([3],[3,3,1]) -> [3,3,3,1];
([0,1,2],[1]) -> [0,1,2,1];
([3,1],[2,2,2]) -> [3,1,2,2,2];
([3,0,1],[3,3,3]) -> [3,0,1,3,3,3];
([1,3,1],[3,2,1]) -> [1,3,1,3,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0927 true

([3,3,3],[1]) -> [3,3,3,1];
([0,2],[0,1,1]) -> [0,2,0,1,1];
([0,3],[0,2,2]) -> [0,3,0,2,2];
([0,0,2],[3,3]) -> [0,0,2,3,3];
([1],[3]) -> [1,3];
([1,1],[3]) -> [1,1,3];
([3],[1]) -> [3,1];
([1,0,3],[2]) -> [1,0,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0678 true

([3,3],[3]) -> [3,3,3];
([3,0,2],[3,0,2]) -> [3,0,2,3,0,2];
([0],[2]) -> [0,2];
([0],[1]) -> [0,1];
([3,2],[1,2]) -> [3,2,1,2];
([0,2,0],[0,2,2]) -> [0,2,0,0,2,2];
([3],[3]) -> [3,3];
([0],[3,0,2]) -> [0,3,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0764 false

([3,2],[2]) -> [3,2,2];
([3,2,0],[2,2]) -> [3,2,0,2,2];
([0],[0,3,2]) -> [0,0,3,2];
([1,3],[0,2,0]) -> [1,3,0,2,0];
([3,0],[1,0,3]) -> [3,0,1,0,3];
([3,3,1],[1,3,0]) -> [3,3,1,1,3,0];
([3],[2]) -> [3,2];
([2,0,0],[1]) -> [2,0,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0849 true

([3],[2,2]) -> [3,2,2];
([3],[0,1]) -> [3,0,1];
([3,1],[2]) -> [3,1,2];
([2,3,2],[2]) -> [2,3,2,2];
([0,0],[2,1]) -> [0,0,2,1];
([1,2],[1]) -> [1,2,1];
([1,1,1],[1,2,2]) -> [1,1,1,1,2,2];
([3],[0,3,1]) -> [3,0,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0683 true

([1],[0,0]) -> [1,0,0];
([0,1,3],[3,3,2]) -> [0,1,3,3,3,2];
([2],[1]) -> [2,1];
([2,3],[1]) -> [2,3,1];
([1,3,3],[2]) -> [1,3,3,2];
([1],[2,1]) -> [1,2,1];
([3,1],[2,0]) -> [3,1,2,0];
([2,0,2],[0,0]) -> [2,0,2,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0629 true

([0,2],[0,3]) -> [0,2,0,3];
([2,3],[3,1]) -> [2,3,3,1];
([2,3,3],[2,0,1]) -> [2,3,3,2,0,1];
([3,2,0],[1,1,1]) -> [3,2,0,1,1,1];
([3],[3,2,3]) -> [3,3,2,3];
([3,1],[0]) -> [3,1,0];
([2,1,3],[3,0]) -> [2,1,3,3,0];
([3,2,3],[0,1,3]) -> [3,2,3,0,1,3];
([0,0],[3,1,1]) -> [0,0,3,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1235 false

([2],[0,3,2]) -> [2,0,3,2];
([2],[2]) -> [2,2];
([3,1],[0]) -> [3,1,0];
([3],[1,0]) -> [3,1,0];
([0,3],[1]) -> [0,3,1];
([2],[1,2]) -> [2,1,2];
([3],[3,2]) -> [3,3,2];
([1,3],[3,3]) -> [1,3,3,3];
([1,0],[2,0,1]) -> [1,0,2,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0774 true

([1],[1]) -> [1,1];
([1,1],[3,0]) -> [1,1,3,0];
([1,2],[0]) -> [1,2,0];
([3,1,1],[1,1,0]) -> [3,1,1,1,1,0];
([1],[0,2,1]) -> [1,0,2,1];
([2,2,2],[2,0,1]) -> [2,2,2,2,0,1];
([2,3,2],[3,1]) -> [2,3,2,3,1];
([3,3],[1,3]) -> [3,3,1,3];
([1,1,2],[2,0]) -> [1,1,2,2,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1180 false

([0],[1,0]) -> [0,1,0];
([0,3],[0]) -> [0,3,0];
([2],[1]) -> [2,1];
([0,3,0],[0,3]) -> [0,3,0,0,3];
([1],[3,0]) -> [1,3,0];
([0,0],[0,0,2]) -> [0,0,0,0,2];
([0,2,1],[1,0]) -> [0,2,1,1,0];
([2,1,2],[0]) -> [2,1,2,0];
([1],[3,2]) -> [1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0905 false

([0,3],[3]) -> [0,3,3];
([2,3,2],[3,3]) -> [2,3,2,3,3];
([0,3],[2]) -> [0,3,2];
([0,3],[0,1]) -> [0,3,0,1];
([1,0],[1]) -> [1,0,1];
([0],[3,2,1]) -> [0,3,2,1];
([1,1],[2,1]) -> [1,1,2,1];
([2],[1,3]) -> [2,1,3];
([0],[0]) -> [0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0829 false

([0],[2,1,3]) -> [0,2,1,3];
([1],[1,1]) -> [1,1,1];
([3,0],[3,3]) -> [3,0,3,3];
([1],[1]) -> [1,1];
([3,3],[3,0]) -> [3,3,3,0];
([0,1,3],[2]) -> [0,1,3,2];
([1,2],[0,2]) -> [1,2,0,2];
([0],[0,0]) -> [0,0,0];
([1,1,3],[1,2,2]) -> [1,1,3,1,2,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.0976 false

([0],[2]) -> [0,2];
([1,2],[2,1]) -> [1,2,2,1];
([1],[2,1]) -> [1,2,1];
([1,0,0],[2,3,1]) -> [1,0,0,2,3,1];
([2],[1]) -> [2,1];
([1],[3,3,1]) -> [1,3,3,1];
([3,1,1],[0,3]) -> [3,1,1,0,3];
([2,2,3],[2,3,2]) -> [2,2,3,2,3,2];
([2,0],[0,0]) -> [2,0,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1046 false

([2,1],[0,1]) -> [2,1,0,1];
([3,2],[1,3,0]) -> [3,2,1,3,0];
([2,1,3],[2,2,3]) -> [2,1,3,2,2,3];
([2,3],[2]) -> [2,3,2];
([3,2],[2,2,1]) -> [3,2,2,2,1];
([2],[2]) -> [2,2];
([2,2,0],[2,2]) -> [2,2,0,2,2];
([0,3],[3,1]) -> [0,3,3,1];
([3,1],[2,1]) -> [3,1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1217 true

([1,3],[3]) -> [1,3,3];
([2,0,2],[3]) -> [2,0,2,3];
([2,2],[1]) -> [2,2,1];
([0,0,1],[3,1]) -> [0,0,1,3,1];
([3],[3,2,2]) -> [3,3,2,2];
([0,2,2],[1,3,1]) -> [0,2,2,1,3,1];
([0],[1]) -> [0,1];
([0,3,3],[2,3]) -> [0,3,3,2,3];
([3,3],[2,1,1]) -> [3,3,2,1,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1035 false

([1],[1,3,2]) -> [1,1,3,2];
([3],[0]) -> [3,0];
([0],[2,2,0]) -> [0,2,2,0];
([3],[1,2,2]) -> [3,1,2,2];
([0],[0,0,1]) -> [0,0,0,1];
([2,1,1],[2,1]) -> [2,1,1,2,1];
([2,3],[2,2,2]) -> [2,3,2,2,2];
([2,3,2],[1,0,3]) -> [2,3,2,1,0,3];
([3,2,3],[1]) -> [3,2,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0925 true

([1,0,0],[2]) -> [1,0,0,2];
([2,1],[0]) -> [2,1,0];
([3,0],[0]) -> [3,0,0];
([1,3],[0,1]) -> [1,3,0,1];
([0,3],[1]) -> [0,3,1];
([1,3],[1]) -> [1,3,1];
([2,3,0],[3,0,2]) -> [2,3,0,3,0,2];
([0,3],[2]) -> [0,3,2];
([2,1],[1,1]) -> [2,1,1,1];
([0],[0,0]) -> [0,0,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1006 false

([2],[1,0,2]) -> [2,1,0,2];
([2,2],[1,2]) -> [2,2,1,2];
([3],[1]) -> [3,1];
([0],[0,3,3]) -> [0,0,3,3];
([1,1],[2,0]) -> [1,1,2,0];
([2],[1,0]) -> [2,1,0];
([3,0],[1,1,1]) -> [3,0,1,1,1];
([0,2,2],[1]) -> [0,2,2,1];
([3,3,2],[0,1,2]) -> [3,3,2,0,1,2];
([0,2],[1,2,1]) -> [0,2,1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1116 true

([2,1,3],[2]) -> [2,1,3,2];
([2,0],[2,0]) -> [2,0,2,0];
([0,2,2],[2,1]) -> [0,2,2,2,1];
([1,2],[0]) -> [1,2,0];
([0,2],[1,1,3]) -> [0,2,1,1,3];
([2,0,3],[0,0]) -> [2,0,3,0,0];
([0],[2,2,3]) -> [0,2,2,3];
([2,3],[0]) -> [2,3,0];
([2],[2,2]) -> [2,2,2];
([3,1],[2,0,2]) -> [3,1,2,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, x . 1)
                     | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                                        f (Un_Cons (x . 0) . 1, x . 1)))

0.1220 false

([2,2],[1]) -> [2,2,1];
([3,3,3],[0,0,1]) -> [3,3,3,0,0,1];
([1,3],[0,3,3]) -> [1,3,0,3,3];
([1,1],[2,3]) -> [1,1,2,3];
([1,3],[0,2]) -> [1,3,0,2];
([1,2],[1]) -> [1,2,1];
([0],[1,2]) -> [0,1,2];
([1,0],[3]) -> [1,0,3];
([0],[2,1,0]) -> [0,2,1,0];
([0,3],[1,3,2]) -> [0,3,1,3,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1039 true

([3],[3,0,1]) -> [3,3,0,1];
([1,2,2],[2,0,3]) -> [1,2,2,2,0,3];
([0],[0,1]) -> [0,0,1];
([1,0],[1,0,1]) -> [1,0,1,0,1];
([3,3],[2]) -> [3,3,2];
([2,1,2],[0,3]) -> [2,1,2,0,3];
([0],[2,1,0]) -> [0,2,1,0];
([3,0],[1]) -> [3,0,1];
([3],[2,3]) -> [3,2,3];
([1],[2,1]) -> [1,2,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1092 true

([3],[1]) -> [3,1];
([3,0,0],[2,1]) -> [3,0,0,2,1];
([0,2,0],[3,1,0]) -> [0,2,0,3,1,0];
([3,1,3],[0,2,1]) -> [3,1,3,0,2,1];
([3,0],[0]) -> [3,0,0];
([0,2,0],[0]) -> [0,2,0,0];
([3,3],[3,1,1]) -> [3,3,3,1,1];
([0,3,2],[2]) -> [0,3,2,2];
([0,1,3],[2,2]) -> [0,1,3,2,2];
([3],[0,3,0]) -> [3,0,3,0];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1152 true

([2,3,2],[2,1]) -> [2,3,2,2,1];
([2],[0,3,2]) -> [2,0,3,2];
([0,1],[0,0,1]) -> [0,1,0,0,1];
([1],[3,0,2]) -> [1,3,0,2];
([1],[0]) -> [1,0];
([1,1],[0]) -> [1,1,0];
([1,0,2],[3]) -> [1,0,2,3];
([0,1],[2]) -> [0,1,2];
([3],[2,1,3]) -> [3,2,1,3];
([0,2,3],[0,3,1]) -> [0,2,3,0,3,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1010 true

([3,3],[3]) -> [3,3,3];
([3,1],[1]) -> [3,1,1];
([3,2,3],[0,1,1]) -> [3,2,3,0,1,1];
([2,2],[2,3,1]) -> [2,2,2,3,1];
([0,1],[3,0,0]) -> [0,1,3,0,0];
([3,2,0],[1]) -> [3,2,0,1];
([3,2,3],[3,3,0]) -> [3,2,3,3,3,0];
([2,1,0],[3,1]) -> [2,1,0,3,1];
([1,2,1],[2]) -> [1,2,1,2];
([1,3,0],[2,0]) -> [1,3,0,2,0];
([], []) -> [];

=================================
None
([3],[3,1,0]) -> [3,3,1,0];
([1,0],[1,3]) -> [1,0,1,3];
([0,3],[1]) -> [0,3,1];
([0],[1]) -> [0,1];
([2,1,2],[2,1,0]) -> [2,1,2,2,1,0];
([2,1,3],[2]) -> [2,1,3,2];
([2,0,0],[2]) -> [2,0,0,2];
([3,0,1],[1,1]) -> [3,0,1,1,1];
([0],[3]) -> [0,3];
([3,1,0],[2]) -> [3,1,0,2];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0996 true

([3,1,0],[1,3]) -> [3,1,0,1,3];
([3,3,0],[1,1]) -> [3,3,0,1,1];
([1,0,0],[1]) -> [1,0,0,1];
([2],[3,2,1]) -> [2,3,2,1];
([0,3,1],[0,2,0]) -> [0,3,1,0,2,0];
([2],[3,3]) -> [2,3,3];
([2],[0,1,0]) -> [2,0,1,0];
([3],[2,3,2]) -> [3,2,3,2];
([1,3,1],[0,2,0]) -> [1,3,1,0,2,0];
([3,0,1],[0,1]) -> [3,0,1,0,1];
([], []) -> [];

=================================
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.1105 true

