([0,1],2) -> [0,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0129 false

([2,2,3],2) -> [2,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0193 false

([0,2],3) -> [0,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0153 false

([2],0) -> [0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0026 false

([3,3,2],3) -> [3,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0183 false

([3],1) -> [1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0029 false

([0],2) -> [0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))

0.0118 false

([1,2],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0113 false

([2,1,2],2) -> [2,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0157 false

([2,3],0) -> [0,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Cons (x . 1, x . 0)

0.0023 false

([1,3],2) -> [1,2,3];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
None
([2,3,3],3) -> [2,3,3];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0226 false

([1],0) -> [0,1];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (0, Cons (x . 1, Nil)))

0.0270 false

([2],3) -> [2,3];
([1,2],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Nil))

0.0181 false

([2],1) -> [1,2];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | S _ -> Cons (x . 1, x . 0))

0.0206 false

([3],1) -> [1,3];
([0,0],2) -> [0,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare 1 (x . 1) with
      | EQ _ -> Cons (x . 1, x . 0)
      | GT _ -> Cons (x . 1, x . 0)
      | LT _ -> Cons (0, Cons (0, Cons (x . 1, Nil)))

0.0278 false

([1,0,1],0) -> [0,1,0,1];
([2,3,0],3) -> [2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> x . 0

0.0259 false

([0,0],3) -> [0,0,3];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare 2 (x . 1) with
      | EQ _ -> Cons (x . 1, x . 0)
      | GT _ -> Cons (x . 1, x . 0)
      | LT _ -> Cons (0, Cons (0, Cons (x . 1, Nil)))

0.0378 false

([1,0],3) -> [1,0,3];
([0],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))

0.0235 false

([1],3) -> [1,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))

0.0218 false

([1,2,3],1) -> [1,2,3];
([3,3],0) -> [0,3,3];
([1,1],1) -> [1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> x . 0

0.0253 false

([2,1,3],1) -> [1,2,1,3];
([2,3],0) -> [0,2,3];
([2],2) -> [2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare (x . 1) 1 with
      | EQ _ -> Cons (x . 1, x . 0)
      | GT _ -> x . 0
      | LT _ -> Cons (x . 1, x . 0)

0.0338 false

([3,2,1],3) -> [3,2,1];
([3,3,0],3) -> [3,3,0];
([2],2) -> [2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0266 false

([2,1],2) -> [2,1];
([1],0) -> [0,1];
([1,0],1) -> [1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> x . 0

0.0241 false

([3,2],0) -> [0,3,2];
([1,3,1],0) -> [0,1,3,1];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> x . 0

0.0297 false

([0,3],1) -> [0,1,3];
([1,3,3],2) -> [1,2,3,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0,
                         Cons (x . 1, Un_Cons (x . 0) . 1))

0.0247 false

([0,2],2) -> [0,2];
([2,2,3],1) -> [1,2,2,3];
([2,0],3) -> [2,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare 2 (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> Cons (x . 1, x . 0)
      | LT _ -> Cons (2, Cons (0, Cons (x . 1, Nil)))

0.0456 false

([3],0) -> [0,3];
([1],2) -> [1,2];
([0,1,3],3) -> [0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare (x . 1) 2 with
      | EQ _ -> Cons (1, Cons (x . 1, Nil))
      | GT _ -> x . 0
      | LT _ -> Cons (x . 1, x . 0)

0.0370 false

([2,3],2) -> [2,3];
([3],3) -> [3];
([0,3,3],0) -> [0,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> x . 0

0.0262 false

([2,1],0) -> [0,2,1];
([2],3) -> [2,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> Cons (x . 1, x . 0)
      | S _ -> Cons (Un_S (x . 1), Cons (x . 1, Nil))

0.0273 false

([3,0,1],0) -> [0,3,0,1];
([1,1],3) -> [1,1,3];
([2,3],2) -> [2,3];
([0,3],3) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0675 true

([0],1) -> [0,1];
([0,3],3) -> [0,3];
([1],2) -> [1,2];
([2,2],0) -> [0,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match x . 1 with
                     | O _ -> Cons (x . 1, x . 0)
                     | S _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil)))

0.0431 false

([0],0) -> [0];
([3,0,2],0) -> [0,3,0,2];
([3,2],3) -> [3,2];
([2,1,1],1) -> [1,2,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare S (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> x . 0
                     | LT _ -> Cons (x . 1, x . 0))

0.0772 false

([3,0],1) -> [1,3,0];
([3,3],1) -> [1,3,3];
([0],3) -> [0,3];
([3,2],1) -> [1,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare (x . 1) 1 with
      | EQ _ -> Cons (x . 1, x . 0)
      | GT _ -> Cons (0, Cons (x . 1, Nil))
      | LT _ -> Cons (x . 1, x . 0)

0.0441 false

([3,2],0) -> [0,3,2];
([1,0],2) -> [1,0,2];
([1],1) -> [1];
([1,2,3],0) -> [0,1,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare 1 (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> Cons (x . 1, x . 0)
      | LT _ -> Cons (1, Cons (0, Cons (x . 1, Nil)))

0.0425 false

([1],3) -> [1,3];
([1,2],2) -> [1,2];
([3,1],3) -> [3,1];
([1,1,0],2) -> [1,1,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> x . 0
                                    | Cons _ -> Cons (Un_Cons (Un_Cons (
                                                                 x . 0) . 1)
                                                        . 0,
                                                       Cons (Un_Cons (
                                                               Un_Cons (
                                                                 x . 0) . 1)
                                                               . 0,
                                                              Cons (0,
                                                                    Cons 
                                                                    (x . 1,
                                                                    Nil))))))

0.4236 false

([1,2,1],1) -> [1,2,1];
([3],0) -> [0,3];
([1,0],3) -> [1,0,3];
([3,1,2],3) -> [3,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0683 true

([3],1) -> [1,3];
([3,0,2],1) -> [1,3,0,2];
([3,1,3],2) -> [2,3,1,3];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | S _ -> Cons (x . 1, x . 0))

0.0521 false

([2,3],1) -> [1,2,3];
([1,3,2],1) -> [1,3,2];
([3,0],1) -> [1,3,0];
([3,2,0],3) -> [3,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare S (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> x . 0
                     | LT _ -> Cons (x . 1, x . 0))

0.0672 false

([3],2) -> [2,3];
([3,0],1) -> [1,3,0];
([3,1],1) -> [1,3,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match compare 1 (x . 1) with
      | EQ _ -> Cons (x . 1, x . 0)
      | GT _ -> Cons (x . 1, x . 0)
      | LT _ -> Cons (2, Cons (3, Nil))

0.0424 false

([0,2],2) -> [0,2];
([2],1) -> [1,2];
([1,0],3) -> [1,0,3];
([0,1],1) -> [0,1];
([0,1,2],0) -> [0,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0779 true

([0,3],1) -> [0,1,3];
([2,2],1) -> [1,2,2];
([2,0,0],2) -> [2,0,0];
([0],1) -> [0,1];
([1],1) -> [1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0931 true

([1,2],2) -> [1,2];
([0,3],1) -> [0,1,3];
([1],0) -> [0,1];
([0,3,0],0) -> [0,3,0];
([1,1],0) -> [0,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2081 true

([1,2,1],3) -> [1,2,1,3];
([0],1) -> [0,1];
([2,0,2],2) -> [2,0,2];
([2,2,2],3) -> [2,2,2,3];
([0,1],3) -> [0,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare 2 (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.3492 false

([1],1) -> [1];
([0,1,2],1) -> [0,1,2];
([0],3) -> [0,3];
([1],2) -> [1,2];
([2,2,1],1) -> [1,2,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0929 true

([3,0],1) -> [1,3,0];
([2,3,0],3) -> [2,3,0];
([2],3) -> [2,3];
([1,0],3) -> [1,0,3];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> (match x . 1 with
                                   | O _ -> Cons (x . 1, x . 0)
                                   | S _ -> Cons (Un_S (x . 1),
                                                   Cons (x . 1, Nil)))
                     | Cons _ -> (match compare (x . 1)
                                          S (Un_Cons (x . 0) . 0) with
                                    | EQ _ -> x . 0
                                    | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                                     Cons (0,
                                                            Cons (x . 1, Nil)))
                                    | LT _ -> Cons (x . 1, x . 0)))

0.3794 false

([2],1) -> [1,2];
([0],2) -> [0,2];
([0],1) -> [0,1];
([3,2,2],2) -> [2,3,2,2];
([1],0) -> [0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | S _ -> Cons (x . 1, x . 0))

0.0563 false

([3],0) -> [0,3];
([2,3],3) -> [2,3];
([0,2],3) -> [0,2,3];
([2,3,3],2) -> [2,3,3];
([1,0],2) -> [1,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2613 true

([0],3) -> [0,3];
([2,1],2) -> [2,1];
([2],2) -> [2];
([3,1,2],2) -> [2,3,1,2];
([0,1,0],2) -> [0,1,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.0829 true

([0],1) -> [0,1];
([1,1,3],1) -> [1,1,3];
([3,3,1],2) -> [2,3,3,1];
([3],3) -> [3];
([3,1,1],0) -> [0,3,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.0779 false

([0,1],3) -> [0,1,3];
([3,3],3) -> [3,3];
([0,3,0],0) -> [0,3,0];
([2,2],3) -> [2,2,3];
([0],2) -> [0,2];
([3],3) -> [3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) S (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> x . 0)

0.1146 false

([0,3],3) -> [0,3];
([0],0) -> [0];
([0],1) -> [0,1];
([3,2,2],3) -> [3,2,2];
([0,1,1],0) -> [0,1,1];
([3],0) -> [0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.0720 false

([3,3,1],3) -> [3,3,1];
([1,1,3],0) -> [0,1,1,3];
([0,0,1],2) -> [0,0,1,2];
([0,1,1],1) -> [0,1,1];
([3,1,2],1) -> [1,3,1,2];
([1,2,2],1) -> [1,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.4535 true

([2,3,3],2) -> [2,3,3];
([2,0,1],2) -> [2,0,1];
([0],1) -> [0,1];
([3,0],1) -> [1,3,0];
([2,3,3],3) -> [2,3,3];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0948 true

([3,0,0],2) -> [2,3,0,0];
([1,1],0) -> [0,1,1];
([2,0,2],1) -> [1,2,0,2];
([1],1) -> [1];
([2,2,3],1) -> [1,2,2,3];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.0791 false

([3],0) -> [0,3];
([0],0) -> [0];
([0,0],1) -> [0,0,1];
([2],3) -> [2,3];
([1,1],3) -> [1,1,3];
([1,0],0) -> [0,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0692 true

([3,3,0],3) -> [3,3,0];
([0,0,0],2) -> [0,0,0,2];
([3],2) -> [2,3];
([3,2],0) -> [0,3,2];
([1],1) -> [1];
([3],3) -> [3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1078 true

([3,1,2],3) -> [3,1,2];
([0],0) -> [0];
([0],2) -> [0,2];
([3,1],2) -> [2,3,1];
([2],2) -> [2];
([2,0,3],3) -> [2,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0697 true

([2],3) -> [2,3];
([0,2,3],1) -> [0,1,2,3];
([3],0) -> [0,3];
([3],2) -> [2,3];
([0,2,0],2) -> [0,2,0];
([3],3) -> [3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.3268 true

([2],2) -> [2];
([0,0],3) -> [0,0,3];
([2,2],3) -> [2,2,3];
([3],0) -> [0,3];
([0],2) -> [0,2];
([1,3,3],0) -> [0,1,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1094 true

([1],2) -> [1,2];
([2,2],1) -> [1,2,2];
([1,1],1) -> [1,1];
([0,1],2) -> [0,1,2];
([1],1) -> [1];
([0,1,1],1) -> [0,1,1];
([1,3],2) -> [1,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2745 true

([2,3,2],0) -> [0,2,3,2];
([1],3) -> [1,3];
([2],1) -> [1,2];
([3,1,0],2) -> [2,3,1,0];
([2,0,0],2) -> [2,0,0];
([1,1],0) -> [0,1,1];
([2],3) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.0981 false

([3,1,0],2) -> [2,3,1,0];
([0,3],1) -> [0,1,3];
([0,2],1) -> [0,1,2];
([1],3) -> [1,3];
([3,2],3) -> [3,2];
([1,0,1],1) -> [1,0,1];
([3,1,1],3) -> [3,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2264 true

([1,0,0],3) -> [1,0,0,3];
([2,2,2],1) -> [1,2,2,2];
([2],2) -> [2];
([3],2) -> [2,3];
([2,0,2],3) -> [2,0,2,3];
([3],0) -> [0,3];
([2,0,3],3) -> [2,0,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1098 true

([3,1],1) -> [1,3,1];
([3,3],2) -> [2,3,3];
([2],1) -> [1,2];
([1,0,3],1) -> [1,0,3];
([0,1],3) -> [0,1,3];
([1],3) -> [1,3];
([3,2,1],0) -> [0,3,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.3703 true

([0,1],1) -> [0,1];
([2,2,1],2) -> [2,2,1];
([0,3,2],2) -> [0,2,3,2];
([3,0,1],0) -> [0,3,0,1];
([0,1],0) -> [0,1];
([0,1],2) -> [0,1,2];
([3,3,3],0) -> [0,3,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.4464 true

([1,1],3) -> [1,1,3];
([2,3,0],2) -> [2,3,0];
([3,2,3],0) -> [0,3,2,3];
([0,2],2) -> [0,2];
([1,3],3) -> [1,3];
([3,0],1) -> [1,3,0];
([3,1,1],3) -> [3,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1094 true

([3,3,0],3) -> [3,3,0];
([2],3) -> [2,3];
([0,2,1],0) -> [0,2,1];
([3,2],1) -> [1,3,2];
([1],2) -> [1,2];
([3,1],2) -> [2,3,1];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.1241 false

([2,2,3],0) -> [0,2,2,3];
([2,1],1) -> [1,2,1];
([3,1],0) -> [0,3,1];
([1,0,1],3) -> [1,0,1,3];
([2,0],2) -> [2,0];
([0,1,0],1) -> [0,1,0];
([1],2) -> [1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1127 true

([3],1) -> [1,3];
([2,1],0) -> [0,2,1];
([2,2],3) -> [2,2,3];
([3],3) -> [3];
([1,2,3],1) -> [1,2,3];
([1],2) -> [1,2];
([0,1],2) -> [0,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.3120 true

([1,1,0],3) -> [1,1,0,3];
([1],0) -> [0,1];
([0,0,0],3) -> [0,0,0,3];
([3,3,2],2) -> [2,3,3,2];
([0,1],3) -> [0,1,3];
([2],1) -> [1,2];
([2],0) -> [0,2];
([0],2) -> [0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) S (x . 1) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1247 false

([1,0],0) -> [0,1,0];
([1,2,1],1) -> [1,2,1];
([2,0,3],2) -> [2,0,3];
([0],0) -> [0];
([2,1],0) -> [0,2,1];
([1],0) -> [0,1];
([3],3) -> [3];
([2,1],2) -> [2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare S (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> x . 0
                     | LT _ -> Cons (x . 1, x . 0))

0.0988 false

([0,2,0],2) -> [0,2,0];
([1,0],2) -> [1,0,2];
([2,3],0) -> [0,2,3];
([0,0,1],0) -> [0,0,1];
([3,2],2) -> [2,3,2];
([2,2,2],2) -> [2,2,2];
([0],2) -> [0,2];
([2,2,3],2) -> [2,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1479 true

([2,0],0) -> [0,2,0];
([3],2) -> [2,3];
([1],2) -> [1,2];
([0],0) -> [0];
([1,3,0],2) -> [1,2,3,0];
([3],1) -> [1,3];
([3,3,0],1) -> [1,3,3,0];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.0901 true

([0],1) -> [0,1];
([2,2],0) -> [0,2,2];
([2],1) -> [1,2];
([1,0],0) -> [0,1,0];
([0,3,1],2) -> [0,2,3,1];
([0,0,1],1) -> [0,0,1];
([2],2) -> [2];
([2,1,2],0) -> [0,2,1,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1603 true

([1,0,2],0) -> [0,1,0,2];
([3],0) -> [0,3];
([0],2) -> [0,2];
([2,0,1],0) -> [0,2,0,1];
([2,3,0],1) -> [1,2,3,0];
([1],1) -> [1];
([0],1) -> [0,1];
([3,3],3) -> [3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.1168 false

([2,3],3) -> [2,3];
([2],1) -> [1,2];
([0,2],0) -> [0,2];
([3,2,0],2) -> [2,3,2,0];
([3,2],0) -> [0,3,2];
([2,0,2],1) -> [1,2,0,2];
([0,3,3],3) -> [0,3,3];
([1,2,1],2) -> [1,2,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> x . 0
                     | LT _ -> Cons (x . 1, x . 0))

0.1076 false

([2,2,1],1) -> [1,2,2,1];
([1],2) -> [1,2];
([1,1],3) -> [1,1,3];
([3],0) -> [0,3];
([3],2) -> [2,3];
([2,0],0) -> [0,2,0];
([0,2],1) -> [0,1,2];
([3,0,0],2) -> [2,3,0,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare S (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.3212 false

([1],2) -> [1,2];
([2],0) -> [0,2];
([3,0,0],2) -> [2,3,0,0];
([2],3) -> [2,3];
([2,2],1) -> [1,2,2];
([2,0,1],0) -> [0,2,0,1];
([1,0],0) -> [0,1,0];
([3],2) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare S (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> Cons (x . 1, x . 0)
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.0911 false

([2],3) -> [2,3];
([3,0,1],0) -> [0,3,0,1];
([1],0) -> [0,1];
([0],1) -> [0,1];
([3,3,3],0) -> [0,3,3,3];
([3],2) -> [2,3];
([0,0,0],0) -> [0,0,0];
([1,1],0) -> [0,1,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.1237 false

([1],1) -> [1];
([0,3,2],0) -> [0,3,2];
([0,0],3) -> [0,0,3];
([2,1],1) -> [1,2,1];
([0],1) -> [0,1];
([0,1],1) -> [0,1];
([2,3],0) -> [0,2,3];
([0,3,3],2) -> [0,2,3,3];
([3,1],3) -> [3,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2105 true

([0],2) -> [0,2];
([2],2) -> [2];
([1],0) -> [0,1];
([0],1) -> [0,1];
([2,0,0],0) -> [0,2,0,0];
([0,1,1],3) -> [0,1,1,3];
([1,0],1) -> [1,0];
([1,1],0) -> [0,1,1];
([3,0],2) -> [2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1516 true

([0,2,1],1) -> [0,1,2,1];
([3,2,1],1) -> [1,3,2,1];
([1],3) -> [1,3];
([0,3,0],1) -> [0,1,3,0];
([0,0],2) -> [0,0,2];
([3],2) -> [2,3];
([2,1,0],1) -> [1,2,1,0];
([3,1],0) -> [0,3,1];
([0,3,2],0) -> [0,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1601 true

([3,2,3],0) -> [0,3,2,3];
([2,2,0],0) -> [0,2,2,0];
([0],3) -> [0,3];
([3,1],2) -> [2,3,1];
([3],3) -> [3];
([1,2,3],1) -> [1,2,3];
([1,3],2) -> [1,2,3];
([1],3) -> [1,3];
([2,2,0],2) -> [2,2,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1249 true

([0,2,3],2) -> [0,2,3];
([2,2],3) -> [2,2,3];
([1,2],3) -> [1,2,3];
([0,0,0],3) -> [0,0,0,3];
([0,3],2) -> [0,2,3];
([0,0,2],0) -> [0,0,2];
([2],3) -> [2,3];
([0,2],0) -> [0,2];
([0,0,2],2) -> [0,0,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 1 with
                                    | Nil _ -> (match compare (x . 1) 2 with
                                                  | EQ _ -> Cons (Un_Cons (
                                                                    x . 0) .
                                                                    0,
                                                                   Cons 
                                                                    (x . 1,
                                                                    Un_Cons (
                                                                    x . 0) .
                                                                    1))
                                                  | GT _ -> Cons (Un_Cons (
                                                                    x . 0) .
                                                                    0,
                                                                   f
                                                                    (Un_Cons (
                                                                    x . 0) .
                                                                    1, 
                                                                    x . 1))
                                                  | LT _ -> x . 0)
                                    | Cons _ -> (match compare 2 (x . 1) with
                                                   | EQ _ -> x . 0
                                                   | GT _ -> x . 0
                                                   | LT _ -> Cons (Un_Cons (
                                                                    x . 0) .
                                                                    0,
                                                                    f
                                                                    (Un_Cons (
                                                                    x . 0) .
                                                                    1, 
                                                                    x . 1)))))

7.9844 false

([1],2) -> [1,2];
([1,3],2) -> [1,2,3];
([3,1,3],3) -> [3,1,3];
([1,0],2) -> [1,0,2];
([0,2,3],0) -> [0,2,3];
([0,1,1],3) -> [0,1,1,3];
([1,2,2],2) -> [1,2,2];
([1,1,1],3) -> [1,1,1,3];
([0],1) -> [0,1];
([], 0) -> [0];

=================================
None
([3],3) -> [3];
([2,0],0) -> [0,2,0];
([1],2) -> [1,2];
([1,2,0],1) -> [1,2,0];
([2,1],1) -> [1,2,1];
([0,3,3],0) -> [0,3,3];
([1],3) -> [1,3];
([3,1,2],2) -> [2,3,1,2];
([3,2],2) -> [2,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0, Cons (x . 1, Nil))
                     | LT _ -> Cons (x . 1, x . 0))

0.1225 false

([3,3,2],2) -> [2,3,3,2];
([2],0) -> [0,2];
([3,0],0) -> [0,3,0];
([2,3],2) -> [2,3];
([0,3,3],2) -> [0,2,3,3];
([1,3],2) -> [1,2,3];
([0,0,2],0) -> [0,0,2];
([2,0,0],3) -> [2,0,0,3];
([0,3,3],3) -> [0,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.4495 true

([3],1) -> [1,3];
([1,1,1],2) -> [1,1,1,2];
([3,1,2],3) -> [3,1,2];
([0],2) -> [0,2];
([0,0,2],1) -> [0,0,1,2];
([1,2,1],3) -> [1,2,1,3];
([0,0],0) -> [0,0];
([0,3,3],2) -> [0,2,3,3];
([1,1,0],0) -> [0,1,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1347 true

([0,0],0) -> [0,0];
([0,1],1) -> [0,1];
([1],0) -> [0,1];
([1,3,3],1) -> [1,3,3];
([2],2) -> [2];
([0,1,2],3) -> [0,1,2,3];
([3,3],2) -> [2,3,3];
([0],3) -> [0,3];
([2,1,0],0) -> [0,2,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1137 true

([2,3],3) -> [2,3];
([3,0,3],1) -> [1,3,0,3];
([0,1],2) -> [0,1,2];
([1,3],0) -> [0,1,3];
([0],2) -> [0,2];
([2,2,3],1) -> [1,2,2,3];
([3,0,0],3) -> [3,0,0];
([1],1) -> [1];
([1],3) -> [1,3];
([1,2],3) -> [1,2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1921 true

([3,0,3],1) -> [1,3,0,3];
([3],2) -> [2,3];
([0,0,1],3) -> [0,0,1,3];
([3,0],2) -> [2,3,0];
([1,3],3) -> [1,3];
([1],0) -> [0,1];
([1,3,1],0) -> [0,1,3,1];
([3],1) -> [1,3];
([3,3,0],3) -> [3,3,0];
([2,3],2) -> [2,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.5341 true

([2,3],2) -> [2,3];
([2,2,3],3) -> [2,2,3];
([1],1) -> [1];
([3],0) -> [0,3];
([1,3,3],3) -> [1,3,3];
([0,1,1],2) -> [0,1,1,2];
([2,2],1) -> [1,2,2];
([0,3],1) -> [0,1,3];
([2,3,2],2) -> [2,3,2];
([2,3,0],1) -> [1,2,3,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.7763 true

([0,3],3) -> [0,3];
([2,0],2) -> [2,0];
([3,0],1) -> [1,3,0];
([3],2) -> [2,3];
([1],3) -> [1,3];
([0],0) -> [0];
([2],2) -> [2];
([0,0,1],1) -> [0,0,1];
([0],3) -> [0,3];
([3,0,1],1) -> [1,3,0,1];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1216 true

([3,0,1],1) -> [1,3,0,1];
([1,3,1],2) -> [1,2,3,1];
([2,3],2) -> [2,3];
([1,0,0],1) -> [1,0,0];
([0,3,0],0) -> [0,3,0];
([0,0,3],2) -> [0,0,2,3];
([0,1],3) -> [0,1,3];
([2,2],0) -> [0,2,2];
([1,0,3],3) -> [1,0,3];
([3,2],1) -> [1,3,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.4905 true

([0,0],3) -> [0,0,3];
([2],0) -> [0,2];
([1,0],1) -> [1,0];
([2],2) -> [2];
([0,3],3) -> [0,3];
([1,2,2],0) -> [0,1,2,2];
([1],0) -> [0,1];
([3,1,1],2) -> [2,3,1,1];
([0,3,1],3) -> [0,3,1];
([1,3,3],2) -> [1,2,3,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.1763 true

([1,1],1) -> [1,1];
([0,3,1],3) -> [0,3,1];
([2,0,3],3) -> [2,0,3];
([3,3,2],2) -> [2,3,3,2];
([2],1) -> [1,2];
([2,0,2],0) -> [0,2,0,2];
([2,3],3) -> [2,3];
([3],1) -> [1,3];
([3],0) -> [0,3];
([2,2],1) -> [1,2,2];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> x . 0
                     | LT _ -> Cons (x . 1, x . 0))

0.1534 false

([0,0],0) -> [0,0];
([2,3],1) -> [1,2,3];
([2],1) -> [1,2];
([0,1,2],1) -> [0,1,2];
([2,2],0) -> [0,2,2];
([0,3,2],0) -> [0,3,2];
([2,3,3],1) -> [1,2,3,3];
([0,2],3) -> [0,2,3];
([1,3,3],0) -> [0,1,3,3];
([1,1,1],3) -> [1,1,1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1270 true

([0],2) -> [0,2];
([1,0,1],0) -> [0,1,0,1];
([1],2) -> [1,2];
([0,1],0) -> [0,1];
([0,3,3],2) -> [0,2,3,3];
([3],1) -> [1,3];
([3,2],2) -> [2,3,2];
([2,1,0],3) -> [2,1,0,3];
([0,1],3) -> [0,1,3];
([3,1,0],0) -> [0,3,1,0];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (Un_Cons (x . 0) . 0) (x . 1) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (x . 1, x . 0)
                     | LT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1)))

0.1869 true

([2,2],3) -> [2,2,3];
([1,2,0],0) -> [0,1,2,0];
([0,2],1) -> [0,1,2];
([0,1],1) -> [0,1];
([1,3],2) -> [1,2,3];
([0],1) -> [0,1];
([0,1],2) -> [0,1,2];
([0,3],0) -> [0,3];
([0,3],3) -> [0,3];
([3],1) -> [1,3];
([], 0) -> [0];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> (match compare (x . 1) (Un_Cons (x . 0) . 0) with
                     | EQ _ -> x . 0
                     | GT _ -> Cons (Un_Cons (x . 0) . 0,
                                      f (Un_Cons (x . 0) . 1, x . 1))
                     | LT _ -> Cons (x . 1, x . 0))

0.2094 true

