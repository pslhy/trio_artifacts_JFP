(countOdd,1,[1]) -> 2;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0030 false
Time(s): 0.03 
Mem(Kb): 28980

(add,3,[1]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( n1, n1 ))
  
0.0091 false
Time(s): 0.03 
Mem(Kb): 29272

(countOdd,3,[0]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  x1
0.0102 false
Time(s): 0.03 
Mem(Kb): 29200

(countOdd,3,[1,2,2]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0216 false
Time(s): 0.05 
Mem(Kb): 29676

(countOdd,0,[1,1,2]) -> 2;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    (x0 ( hd1, hd1 ))
  
0.0034 false
Time(s): 0.03 
Mem(Kb): 29076

(countOdd,2,[2,2]) -> 2;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  x1
0.0084 false
Time(s): 0.03 
Mem(Kb): 29312

(add,2,[2,0]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0087 false
Time(s): 0.03 
Mem(Kb): 29256

(add,3,[2,3,2]) -> 10;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ
      (x0
        ( x1,
          (x0 ( x1, x1 ))
          )) )
  
2.2873 false
Time(s): 2.31 
Mem(Kb): 41116

(add,2,[1]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( n1, x1 ))
  
0.0054 false
Time(s): 0.03 
Mem(Kb): 28988

(add,1,[0,2,0]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ
      (x0 ( x1, x1 )) )
  
0.0125 false
Time(s): 0.04 
Mem(Kb): 29264

(countOdd,3,[2]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  x1
0.0096 false
Time(s): 0.04 
Mem(Kb): 29204

(add,2,[1]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( n1, x1 ))
  
0.0052 false
Time(s): 0.03 
Mem(Kb): 29064

(add,2,[3]) -> 5;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ
      (x0 ( x1, x1 )) )
  
0.0049 false
Time(s): 0.03 
Mem(Kb): 29064

(add,3,[2,3,0]) -> 8;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ
      (x0
        ( x1, ( Succ x1 )
          )) )
  
0.2275 false
Time(s): 0.25 
Mem(Kb): 34132

(countOdd,1,[3,2]) -> 2;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0057 false
Time(s): 0.03 
Mem(Kb): 29196

(add,1,[3,1,2]) -> 7;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    ( Succ
      (x0 ( hd1, hd1 )) )
  
0.0078 false
Time(s): 0.03 
Mem(Kb): 29116

(countOdd,2,[3]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( x1, n1 ))
  
0.0065 false
Time(s): 0.03 
Mem(Kb): 29160

(add,0,[3]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 -> hd1
  
0.0016 false
Time(s): 0.03 
Mem(Kb): 27868

(add,3,[1]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( n1, n1 ))
  
0.0095 false
Time(s): 0.04 
Mem(Kb): 29272

(countOdd,1,[2]) -> 1;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  x1
0.0032 false
Time(s): 0.03 
Mem(Kb): 29076

(add,0,[0]) -> 0;
(add,3,[2]) -> 5;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    (x0 ( n1, x1 ))
  
0.0084 false
Time(s): 0.03 
Mem(Kb): 29200

(countOdd,3,[1,3,0]) -> 5;
(add,0,[1,2]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[0,3]) -> 4;
(countOdd,3,[2,2]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,2,[2]) -> 4;
(add,3,[1,3]) -> 7;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    ( Succ
      ( Succ
        (f0
          ( x0, x1, tl1 ))
        ) )
  
0.1844 false
Time(s): 0.21 
Mem(Kb): 33352

(add,2,[3]) -> 5;
(add,3,[0]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    (x0 ( hd1, x1 ))
  
0.0116 false
Time(s): 0.03 
Mem(Kb): 29252

(add,2,[0,3]) -> 5;
(add,1,[0,1,3]) -> 5;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ
      ( Succ
        ( Succ
          ( Succ
            ( Succ
              ( Zero ) )
            ) ) ) )
  
0.9480 false
Time(s): 0.97 
Mem(Kb): 37596

(add,2,[0,3,0]) -> 5;
(countOdd,0,[3,2]) -> 1;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    ( Succ
      (x0 ( x1, x1 )) )
  
0.0174 false
Time(s): 0.04 
Mem(Kb): 29372

(add,0,[2]) -> 2;
(add,1,[0,3,3]) -> 7;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    ( Succ
      ( Succ
        (f0
          ( x0, x1, tl1 ))
        ) )
  
0.0649 false
Time(s): 0.09 
Mem(Kb): 32920

(add,2,[0]) -> 2;
(countOdd,0,[2,1]) -> 1;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[2]) -> 2;
(countOdd,3,[2,1,0]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0343 false
Time(s): 0.06 
Mem(Kb): 29968

(add,1,[0]) -> 1;
(add,2,[0]) -> 2;
(add,0,[3]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    (x0 ( hd1, x1 ))
  
0.0077 false
Time(s): 0.04 
Mem(Kb): 29224

(add,0,[3]) -> 3;
(countOdd,3,[2,3,2]) -> 4;
(add,2,[3]) -> 5;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[2]) -> 0;
(countOdd,1,[1,0]) -> 2;
(countOdd,0,[0]) -> 0;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0086 false
Time(s): 0.04 
Mem(Kb): 29156

(add,1,[3,0,3]) -> 7;
(countOdd,0,[3,2]) -> 1;
(add,1,[0,1]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[2,2,1]) -> 4;
(countOdd,0,[2]) -> 0;
(add,1,[0,0,2]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,1,[1,1]) -> 3;
(add,2,[1,1]) -> 4;
(add,1,[1,1,0]) -> 3;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x1) with
  | Z -> x1
  | Sn1 ->
    ( Succ ( Succ x1 ) )
  
0.0424 false
Time(s): 0.07 
Mem(Kb): 30092

(add,0,[1,2,0]) -> 3;
(add,3,[1,2,1]) -> 7;
(countOdd,3,[0,2]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,2,[2]) -> 4;
(add,0,[0,0,0]) -> 0;
(countOdd,2,[2,2]) -> 2;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  (x0 ( x1, x1 ))
0.0219 false
Time(s): 0.06 
Mem(Kb): 29532

(countOdd,0,[1,1,3]) -> 3;
(add,0,[0,0,1]) -> 1;
(add,0,[1,2,3]) -> 6;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[2,0]) -> 2;
(countOdd,2,[1,0,3]) -> 4;
(add,3,[1]) -> 4;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[2,1]) -> 1;
(add,2,[1,2]) -> 5;
(add,2,[2,3,3]) -> 10;
(countOdd,1,[3,3]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[1,2,0]) -> 3;
(add,0,[1,2,0]) -> 3;
(countOdd,0,[0,2]) -> 0;
(add,0,[2,1]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,1,[3,0,1]) -> 5;
(countOdd,0,[0,3,2]) -> 1;
(add,3,[2,0,0]) -> 5;
(add,1,[3,1]) -> 5;
(add, 0, []) -> 0;

=================================
None
(add,2,[0,2]) -> 4;
(countOdd,2,[2,1,2]) -> 3;
(add,3,[3,3]) -> 9;
(add,3,[0]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,3,[1,3]) -> 7;
(add,3,[0]) -> 3;
(countOdd,3,[2,1]) -> 4;
(countOdd,2,[3]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[0,3]) -> 4;
(add,3,[3,0,1]) -> 7;
(countOdd,1,[3,0,1]) -> 3;
(countOdd,1,[3]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[3]) -> 1;
(countOdd,0,[1,0]) -> 1;
(countOdd,0,[1,2]) -> 1;
(add,2,[2]) -> 4;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> x1
  | hd1::tl1 ->
    (x0 ( x1, hd1 ))
  
0.0248 false
Time(s): 0.06 
Mem(Kb): 29660

(countOdd,1,[0,3]) -> 2;
(countOdd,1,[1]) -> 2;
(countOdd,3,[0,0,1]) -> 4;
(countOdd,1,[3,3]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[1,1]) -> 4;
(add,3,[2,3]) -> 8;
(countOdd,2,[1]) -> 3;
(countOdd,0,[1]) -> 1;
(add, 0, []) -> 0;

=================================
fix f0.fun (x0, x1, x2).
  match (x2) with
  | [] -> (x0 ( x1, x1 ))
  | hd1::tl1 ->
    ( Succ
      (f0
        ( x0, x1, tl1 ))
      )
  
0.0548 false
Time(s): 0.09 
Mem(Kb): 30028

(countOdd,3,[0,1]) -> 4;
(add,2,[2,1]) -> 5;
(add,3,[2,2,1]) -> 8;
(add,3,[3]) -> 6;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[0,3,0]) -> 3;
(countOdd,1,[0,1]) -> 2;
(add,3,[0,1]) -> 4;
(add,3,[2]) -> 5;
(add,1,[2,0]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,1,[0,0,1]) -> 2;
(add,2,[1,1]) -> 4;
(countOdd,2,[3,1]) -> 4;
(add,0,[0,1]) -> 1;
(add,0,[3]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,3,[2]) -> 5;
(countOdd,0,[0,1,2]) -> 1;
(countOdd,1,[1,1,0]) -> 3;
(add,0,[1,3,3]) -> 7;
(add,3,[1,2]) -> 6;
(add, 0, []) -> 0;

=================================
None
(add,0,[2,0,1]) -> 3;
(countOdd,1,[3,0,0]) -> 2;
(add,2,[1,3,2]) -> 8;
(countOdd,0,[2,1]) -> 1;
(add,2,[1]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,2,[2,2]) -> 6;
(countOdd,3,[3,3,1]) -> 6;
(add,0,[3]) -> 3;
(add,3,[3,3,2]) -> 11;
(add,2,[3]) -> 5;
(add, 0, []) -> 0;

=================================
None
(add,3,[1,1,1]) -> 6;
(countOdd,1,[1]) -> 2;
(add,1,[2,0]) -> 3;
(add,2,[0,3]) -> 5;
(add,1,[2]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[0,3,1]) -> 2;
(add,1,[3]) -> 4;
(countOdd,3,[3,0,1]) -> 5;
(countOdd,3,[3,3,1]) -> 6;
(add,1,[0,2,1]) -> 4;
(add, 0, []) -> 0;

=================================
None
(add,3,[3,0,2]) -> 8;
(countOdd,3,[2,3]) -> 4;
(add,3,[1,2,1]) -> 7;
(add,3,[2]) -> 5;
(add,2,[2]) -> 4;
(add, 0, []) -> 0;

=================================
None
(add,1,[1]) -> 2;
(countOdd,2,[2,2,2]) -> 2;
(countOdd,3,[2,2,1]) -> 4;
(countOdd,1,[1]) -> 2;
(add,0,[0,0,1]) -> 1;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[3]) -> 4;
(add,0,[0,1,2]) -> 3;
(add,3,[2,3]) -> 8;
(countOdd,2,[1,0,1]) -> 4;
(add,0,[2,1,3]) -> 6;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[3]) -> 3;
(add,2,[2]) -> 4;
(add,1,[2]) -> 3;
(countOdd,2,[1,2]) -> 3;
(add,0,[1]) -> 1;
(add,1,[3,2]) -> 6;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[2,0]) -> 0;
(add,0,[1,0]) -> 1;
(countOdd,2,[2,3,3]) -> 4;
(countOdd,1,[2,1,2]) -> 2;
(countOdd,0,[3,1,2]) -> 2;
(add,1,[0]) -> 1;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[2,2]) -> 3;
(add,0,[3,1,3]) -> 7;
(countOdd,0,[3,3,2]) -> 2;
(countOdd,0,[0]) -> 0;
(add,3,[0,1]) -> 4;
(add,0,[2,0,3]) -> 5;
(add, 0, []) -> 0;

=================================
None
(add,2,[1]) -> 3;
(add,2,[2,3]) -> 7;
(countOdd,1,[1,0,2]) -> 2;
(add,1,[3]) -> 4;
(countOdd,1,[0,2,3]) -> 2;
(countOdd,0,[1,3,3]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[3,3]) -> 2;
(countOdd,3,[3,1,2]) -> 5;
(countOdd,3,[2,0]) -> 3;
(add,1,[2,0,2]) -> 5;
(countOdd,1,[3,2,1]) -> 3;
(add,0,[1,1]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[0,2,2]) -> 1;
(add,2,[2]) -> 4;
(countOdd,3,[1,0]) -> 4;
(countOdd,1,[3,2]) -> 2;
(add,3,[2,1,3]) -> 9;
(countOdd,0,[3,3]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[1,1]) -> 3;
(countOdd,1,[1,3,3]) -> 4;
(add,1,[1,2,3]) -> 7;
(countOdd,0,[1,0,0]) -> 1;
(countOdd,3,[1,2,2]) -> 4;
(countOdd,1,[0,2,0]) -> 1;
(add, 0, []) -> 0;

=================================
None
(add,2,[0,3,0]) -> 5;
(add,1,[0,3,3]) -> 7;
(countOdd,0,[0,2,2]) -> 0;
(add,3,[3,3]) -> 9;
(countOdd,0,[1,3,2]) -> 2;
(countOdd,2,[1]) -> 3;
(add, 0, []) -> 0;

=================================
None
(add,1,[3,0]) -> 4;
(countOdd,1,[2,1,3]) -> 3;
(add,2,[1,1,0]) -> 4;
(countOdd,2,[0,3,0]) -> 3;
(add,2,[0]) -> 2;
(countOdd,3,[2,3,2]) -> 4;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[2,3,3]) -> 3;
(countOdd,2,[1]) -> 3;
(add,3,[0,0]) -> 3;
(add,3,[3]) -> 6;
(countOdd,2,[0,1]) -> 3;
(countOdd,0,[1,0,1]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[1]) -> 1;
(add,3,[0,2,0]) -> 5;
(add,0,[2]) -> 2;
(countOdd,1,[3]) -> 2;
(add,2,[2]) -> 4;
(add,3,[1,2,3]) -> 9;
(add,0,[2,3]) -> 5;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[3,0]) -> 2;
(add,3,[3]) -> 6;
(countOdd,0,[2]) -> 0;
(add,1,[2,0]) -> 3;
(add,0,[0]) -> 0;
(countOdd,2,[1,2]) -> 3;
(add,3,[0,3,3]) -> 9;
(add, 0, []) -> 0;

=================================
None
(add,3,[0]) -> 3;
(add,1,[3,1,3]) -> 8;
(add,0,[1]) -> 1;
(add,3,[3,2,3]) -> 11;
(add,3,[0,1,3]) -> 7;
(add,0,[2,3]) -> 5;
(countOdd,0,[3,2,3]) -> 2;
(add, 0, []) -> 0;

=================================
None
(add,1,[1,0,3]) -> 5;
(add,3,[1,0,1]) -> 5;
(add,2,[3,3,2]) -> 10;
(countOdd,0,[3]) -> 1;
(countOdd,2,[0,0,0]) -> 2;
(countOdd,2,[0,2]) -> 2;
(add,1,[1,1]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,3,[0,3]) -> 4;
(add,2,[3,0]) -> 5;
(countOdd,0,[2,2,0]) -> 0;
(countOdd,3,[0]) -> 3;
(countOdd,0,[0]) -> 0;
(countOdd,2,[2]) -> 2;
(countOdd,2,[3,3]) -> 4;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[3,0,0]) -> 2;
(add,2,[0,1]) -> 3;
(countOdd,0,[1,1,0]) -> 2;
(countOdd,1,[1,1,1]) -> 4;
(countOdd,1,[2,0,0]) -> 1;
(countOdd,3,[3]) -> 4;
(add,0,[2,0,0]) -> 2;
(add, 0, []) -> 0;

=================================
None
(countOdd,1,[3,0,2]) -> 2;
(add,2,[2]) -> 4;
(countOdd,0,[3,2,2]) -> 1;
(countOdd,2,[1,1]) -> 4;
(add,3,[1,3,0]) -> 7;
(countOdd,3,[0,0]) -> 3;
(countOdd,0,[2,0,3]) -> 1;
(add, 0, []) -> 0;

=================================
None
(countOdd,0,[1]) -> 1;
(countOdd,2,[3,0]) -> 3;
(add,0,[0,3]) -> 3;
(add,0,[3,0]) -> 3;
(add,3,[1]) -> 4;
(add,1,[3,1]) -> 5;
(countOdd,0,[2,2]) -> 0;
(add, 0, []) -> 0;

=================================
None
(add,2,[3]) -> 5;
(countOdd,3,[2]) -> 3;
(add,3,[3,2,2]) -> 10;
(countOdd,0,[2,1,2]) -> 1;
(add,3,[0]) -> 3;
(add,0,[3,0,2]) -> 5;
(add,1,[1,1]) -> 3;
(add, 0, []) -> 0;

=================================
None
(countOdd,2,[0,3,1]) -> 4;
(countOdd,1,[1,0,3]) -> 3;
(add,1,[3,1,2]) -> 7;
(add,0,[0,3,3]) -> 6;
(add,3,[3]) -> 6;
(countOdd,0,[0,0,1]) -> 1;
(countOdd,2,[2,2,2]) -> 2;
(add, 0, []) -> 0;

=================================
None
