[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4275 true
Time(s): 0.59 
Mem(Kb): 16152

[0,2,1] -> [1,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1394 true
Time(s): 0.59 
Mem(Kb): 16192

[2,2,0] -> [0,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0062 true
Time(s): 0.06 
Mem(Kb): 16180

[1,3,2] -> [2,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0065 true
Time(s): 0.59 
Mem(Kb): 16168

[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0201 false
Time(s): 0.72 
Mem(Kb): 16096

[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0603 true
Time(s): 0.53 
Mem(Kb): 16236

[3,3,1] -> [1,3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0073 true
Time(s): 0.50 
Mem(Kb): 16144

[2,3] -> [3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5925 true
Time(s): 0.89 
Mem(Kb): 16184

[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0074 true
Time(s): 0.29 
Mem(Kb): 16116

[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0082 false
Time(s): 0.58 
Mem(Kb): 15628

[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0087 false
Time(s): 0.61 
Mem(Kb): 15236

[3,2] -> [2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0279 true
Time(s): 0.51 
Mem(Kb): 16156

[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0317 true
Time(s): 0.48 
Mem(Kb): 16152

[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0292 true
Time(s): 0.98 
Mem(Kb): 15920

[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0056 false
Time(s): 0.15 
Mem(Kb): 15348

[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.1415 false
Time(s): 0.56 
Mem(Kb): 15364

[0,2,1] -> [1,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0126 true
Time(s): 0.64 
Mem(Kb): 16216

[1,3,2] -> [2,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1032 true
Time(s): 0.33 
Mem(Kb): 16184

[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0051 false
Time(s): 0.14 
Mem(Kb): 15512

[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0041 false
Time(s): 0.16 
Mem(Kb): 15780

[1,2] -> [2,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0263 true
Time(s): 0.60 
Mem(Kb): 16136

[3,1,2] -> [2,1,3];
[3,2] -> [2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3102 true
Time(s): 0.80 
Mem(Kb): 16184

[1] -> [1];
[0,2,2] -> [2,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0081 true
Time(s): 0.24 
Mem(Kb): 16188

[0,0,2] -> [2,0,0];
[0,1,0] -> [0,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1296 true
Time(s): 0.72 
Mem(Kb): 16228

[2] -> [2];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.1901 false
Time(s): 0.67 
Mem(Kb): 16048

[0] -> [0];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0048 true
Time(s): 0.11 
Mem(Kb): 16128

[2,2] -> [2,2];
[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0124 false
Time(s): 0.14 
Mem(Kb): 16044

[1,3,2] -> [2,3,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0586 true
Time(s): 0.71 
Mem(Kb): 16168

[2,3,2] -> [2,3,2];
[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0060 true
Time(s): 0.06 
Mem(Kb): 16216

[0,1] -> [1,0];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1762 true
Time(s): 1.01 
Mem(Kb): 16128

[1] -> [1];
[2,3,2] -> [2,3,2];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0287 false
Time(s): 0.66 
Mem(Kb): 16148

[1] -> [1];
[3,2] -> [2,3];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0089 true
Time(s): 0.42 
Mem(Kb): 16156

[0,0] -> [0,0];
[3,2] -> [2,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0077 true
Time(s): 0.33 
Mem(Kb): 16208

[2,0] -> [0,2];
[3,2] -> [2,3];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0075 true
Time(s): 0.06 
Mem(Kb): 16200

[1,3,3] -> [3,3,1];
[1,0] -> [0,1];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0107 true
Time(s): 0.09 
Mem(Kb): 16192

[3,3] -> [3,3];
[0] -> [0];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0064 false
Time(s): 0.05 
Mem(Kb): 16100

[3,3] -> [3,3];
[0,1,2] -> [2,1,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0659 true
Time(s): 0.79 
Mem(Kb): 16240

[1,2,3] -> [3,2,1];
[2] -> [2];
[1,0,3] -> [3,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2106 true
Time(s): 0.35 
Mem(Kb): 16172

[3] -> [3];
[3,0] -> [0,3];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0076 true
Time(s): 0.52 
Mem(Kb): 16144

[1,3,1] -> [1,3,1];
[3,0] -> [0,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0073 true
Time(s): 0.05 
Mem(Kb): 16152

[3,0] -> [0,3];
[2,3] -> [3,2];
[3,3,1] -> [1,3,3];
[0,1,3] -> [3,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5461 true
Time(s): 1.13 
Mem(Kb): 16204

[2,0] -> [0,2];
[0,2] -> [2,0];
[3] -> [3];
[3,2,1] -> [1,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0180 true
Time(s): 0.12 
Mem(Kb): 16248

[3,0] -> [0,3];
[2] -> [2];
[2,1] -> [1,2];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0097 true
Time(s): 0.07 
Mem(Kb): 16220

[3] -> [3];
[1,1,1] -> [1,1,1];
[0] -> [0];
[3,1] -> [1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0097 true
Time(s): 0.54 
Mem(Kb): 16196

[3,3] -> [3,3];
[0,2] -> [2,0];
[1,1,0] -> [0,1,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0154 true
Time(s): 0.09 
Mem(Kb): 16280

[1,0] -> [0,1];
[1,3] -> [3,1];
[2,2] -> [2,2];
[3,2,0] -> [0,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4896 true
Time(s): 0.79 
Mem(Kb): 16268

[2,0,3] -> [3,0,2];
[3,0,3] -> [3,0,3];
[2,3] -> [3,2];
[2,3,2] -> [2,3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5951 true
Time(s): 0.66 
Mem(Kb): 16272

[0] -> [0];
[1] -> [1];
[2,3,0] -> [0,3,2];
[1,0,2] -> [2,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2991 true
Time(s): 0.46 
Mem(Kb): 16288

[3] -> [3];
[1,2,1] -> [1,2,1];
[3,3,3] -> [3,3,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.3918 false
Time(s): 0.46 
Mem(Kb): 16156

[2] -> [2];
[3,0] -> [0,3];
[3,3] -> [3,3];
[3,2,3] -> [3,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0140 true
Time(s): 0.46 
Mem(Kb): 16216

[1,2,0] -> [0,2,1];
[3,2,1] -> [1,2,3];
[0,1] -> [1,0];
[1,2] -> [2,1];
[0,0,2] -> [2,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4175 true
Time(s): 0.47 
Mem(Kb): 16356

[1,3] -> [3,1];
[0,0] -> [0,0];
[2] -> [2];
[0,1] -> [1,0];
[0,1,1] -> [1,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4634 true
Time(s): 0.60 
Mem(Kb): 16268

[3,2] -> [2,3];
[0] -> [0];
[3] -> [3];
[3,1,0] -> [0,1,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2183 true
Time(s): 0.59 
Mem(Kb): 16260

[0,2,3] -> [3,2,0];
[1,0,2] -> [2,0,1];
[0] -> [0];
[1,2] -> [2,1];
[3,2,3] -> [3,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0729 true
Time(s): 0.85 
Mem(Kb): 16192

[2] -> [2];
[3,3,1] -> [1,3,3];
[3,3,2] -> [2,3,3];
[3] -> [3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0241 true
Time(s): 0.10 
Mem(Kb): 16328

[1] -> [1];
[3,3] -> [3,3];
[0] -> [0];
[2,0] -> [0,2];
[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0173 true
Time(s): 0.35 
Mem(Kb): 16256

[2,3,0] -> [0,3,2];
[0,2] -> [2,0];
[0,1] -> [1,0];
[0,0] -> [0,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2108 true
Time(s): 0.88 
Mem(Kb): 15976

[3] -> [3];
[2,2] -> [2,2];
[1] -> [1];
[2] -> [2];
[2,3] -> [3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0147 true
Time(s): 0.06 
Mem(Kb): 16248

[1] -> [1];
[3,1] -> [1,3];
[0,3,3] -> [3,3,0];
[0,0] -> [0,0];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0238 true
Time(s): 0.41 
Mem(Kb): 16252

[2,1,2] -> [2,1,2];
[0] -> [0];
[1,2] -> [2,1];
[0,0,0] -> [0,0,0];
[0,1,2] -> [2,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4911 true
Time(s): 1.16 
Mem(Kb): 16120

[3] -> [3];
[1] -> [1];
[0,2,1] -> [1,2,0];
[3,2] -> [2,3];
[1,0,3] -> [3,0,1];
[2,3,1] -> [1,3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2456 true
Time(s): 0.80 
Mem(Kb): 16368

[1,0,3] -> [3,0,1];
[1,1,2] -> [2,1,1];
[0,0,0] -> [0,0,0];
[0,0,3] -> [3,0,0];
[0,1] -> [1,0];
[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5224 true
Time(s): 0.84 
Mem(Kb): 16300

[2,0] -> [0,2];
[0] -> [0];
[1] -> [1];
[3,0,3] -> [3,0,3];
[1,2,2] -> [2,2,1];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0207 true
Time(s): 0.07 
Mem(Kb): 16344

[2] -> [2];
[1] -> [1];
[3] -> [3];
[0,0,3] -> [3,0,0];
[1,3] -> [3,1];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0215 true
Time(s): 0.33 
Mem(Kb): 16252

[1,3] -> [3,1];
[3,1] -> [1,3];
[1,0] -> [0,1];
[1,2] -> [2,1];
[1] -> [1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4061 true
Time(s): 0.82 
Mem(Kb): 16296

[0,0] -> [0,0];
[0,3,1] -> [1,3,0];
[3,1] -> [1,3];
[3,3,1] -> [1,3,3];
[0] -> [0];
[0,2,3] -> [3,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1490 true
Time(s): 0.63 
Mem(Kb): 16292

[1,1] -> [1,1];
[2,2] -> [2,2];
[3] -> [3];
[0,1,3] -> [3,1,0];
[3,3,0] -> [0,3,3];
[0,1,0] -> [0,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0176 true
Time(s): 0.07 
Mem(Kb): 16316

[3] -> [3];
[1,3,1] -> [1,3,1];
[2] -> [2];
[3,3] -> [3,3];
[0] -> [0];
[0,3,3] -> [3,3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4603 true
Time(s): 0.79 
Mem(Kb): 16272

[3] -> [3];
[2] -> [2];
[1,0] -> [0,1];
[0] -> [0];
[1,3,1] -> [1,3,1];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0166 true
Time(s): 0.43 
Mem(Kb): 16264

[0] -> [0];
[2,0] -> [0,2];
[1,3,2] -> [2,3,1];
[2] -> [2];
[0,3,2] -> [2,3,0];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.4920 true
Time(s): 1.21 
Mem(Kb): 16108

[3] -> [3];
[1] -> [1];
[2] -> [2];
[0,2] -> [2,0];
[0,3,0] -> [0,3,0];
[1,3,2] -> [2,3,1];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1859 true
Time(s): 0.38 
Mem(Kb): 16332

[0,0,1] -> [1,0,0];
[1] -> [1];
[0,2] -> [2,0];
[0] -> [0];
[3,1] -> [1,3];
[1,1] -> [1,1];
[1,3,0] -> [0,3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1790 true
Time(s): 0.73 
Mem(Kb): 16340

[0] -> [0];
[1] -> [1];
[3] -> [3];
[2] -> [2];
[2,0,1] -> [1,0,2];
[3,0] -> [0,3];
[2,2,3] -> [3,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3920 true
Time(s): 0.67 
Mem(Kb): 16356

[0] -> [0];
[2,1] -> [1,2];
[0,0] -> [0,0];
[1,3] -> [3,1];
[2,2] -> [2,2];
[3] -> [3];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.2031 true
Time(s): 0.60 
Mem(Kb): 16376

[3] -> [3];
[1,2,1] -> [1,2,1];
[0] -> [0];
[1,0] -> [0,1];
[0,0] -> [0,0];
[1] -> [1];
[3,3,2] -> [2,3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0328 true
Time(s): 0.13 
Mem(Kb): 16340

[0] -> [0];
[2,2] -> [2,2];
[2,0] -> [0,2];
[2,3,0] -> [0,3,2];
[2,1,2] -> [2,1,2];
[2,3] -> [3,2];
[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1777 true
Time(s): 0.59 
Mem(Kb): 16324

[2,3] -> [3,2];
[0,2] -> [2,0];
[2,3,0] -> [0,3,2];
[1,2] -> [2,1];
[1,3] -> [3,1];
[1,3,1] -> [1,3,1];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.6198 true
Time(s): 0.70 
Mem(Kb): 16324

[1,2,2] -> [2,2,1];
[2] -> [2];
[3,1,2] -> [2,1,3];
[0,3,3] -> [3,3,0];
[0,3,1] -> [1,3,0];
[1,0,0] -> [0,0,1];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.5050 true
Time(s): 0.59 
Mem(Kb): 16396

[2] -> [2];
[0,1,1] -> [1,1,0];
[3,2,2] -> [2,2,3];
[2,0,1] -> [1,0,2];
[0,2] -> [2,0];
[0,0] -> [0,0];
[3,0,1] -> [1,0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.1827 true
Time(s): 0.74 
Mem(Kb): 16352

[1] -> [1];
[3] -> [3];
[2,1] -> [1,2];
[0,3] -> [3,0];
[0] -> [0];
[0,2,0] -> [0,2,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.3530 true
Time(s): 0.81 
Mem(Kb): 16284

