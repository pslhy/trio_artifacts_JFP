[[2],[1],[]] -> [2,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0124 true

[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) = fun (x:llist) -> Nil

0.0008 false

[[],[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Cons (1, Nil)

0.0053 false

[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) = fun (x:llist) -> Nil

0.0009 false

[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) = fun (x:llist) -> Nil

0.0008 false

[[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0084 false

[[2],[2]] -> [2,2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (Un_LCons x . 0)

0.0096 false

[[1],[2]] -> [1,2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0123 true

[[3],[],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0076 false

[[],[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) = fun (x:llist) -> Nil

0.0008 false

[[1],[]] -> [1];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0100 false

[[1],[],[]] -> [1];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0101 false

[[],[2]] -> [2];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0134 false

[[1],[3],[]] -> [1,3];
[[],[3],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0158 true

[[]] -> [];
[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) = fun (x:llist) -> Nil

0.0008 false

[[],[0]] -> [0];
[[],[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0086 false

[[],[3]] -> [3];
[[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0133 false

[[0]] -> [0];
[[],[],[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Cons (0, Nil)

0.0102 false

[[]] -> [];
[[3],[3]] -> [3,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (Un_LCons x . 0)

0.0119 false

[[3],[1],[]] -> [3,1];
[[],[2],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0153 true

[[3],[],[]] -> [3];
[[1]] -> [1];
[[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0153 false

[[]] -> [];
[[0],[],[1]] -> [0,1];
[[2],[],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0211 true

[[0],[]] -> [0];
[[1]] -> [1];
[[3],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0164 false

[[3],[1]] -> [3,1];
[[],[3]] -> [3];
[[1],[0]] -> [1,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0204 true

[[]] -> [];
[[],[],[2]] -> [2];
[[2]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0143 false

[[0],[1],[1]] -> [0,1,1];
[[3]] -> [3];
[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0275 true

[[1]] -> [1];
[[1],[],[3]] -> [1,3];
[[],[2]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0182 true

[[]] -> [];
[[1]] -> [1];
[[],[0],[3]] -> [0,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0161 true

[[],[0]] -> [0];
[[1]] -> [1];
[[0],[2]] -> [0,2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0172 true

[[]] -> [];
[[],[],[1]] -> [1];
[[1],[3],[]] -> [1,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0158 true

[[]] -> [];
[[],[]] -> [];
[[],[],[]] -> [];
[[2]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0109 false

[[],[],[]] -> [];
[[]] -> [];
[[],[1],[]] -> [1];
[[],[0],[3]] -> [0,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0163 true

[[],[],[2]] -> [2];
[[],[3]] -> [3];
[[3],[0]] -> [3,0];
[[3],[1],[]] -> [3,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0264 true

[[]] -> [];
[[2]] -> [2];
[[],[],[]] -> [];
[[1],[3],[]] -> [1,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0177 true

[[0],[0],[2]] -> [0,0,2];
[[]] -> [];
[[0],[3]] -> [0,3];
[[3],[3]] -> [3,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0304 true

[[],[3]] -> [3];
[[]] -> [];
[[2],[3]] -> [2,3];
[[],[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0214 true

[[],[],[]] -> [];
[[],[]] -> [];
[[2],[1],[3]] -> [2,1,3];
[[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0226 true

[[],[]] -> [];
[[]] -> [];
[[1],[]] -> [1];
[[3],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0142 false

[[]] -> [];
[[2],[]] -> [2];
[[0]] -> [0];
[[],[],[2]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0171 false

[[],[1]] -> [1];
[[1],[],[3]] -> [1,3];
[[1],[0],[1]] -> [1,0,1];
[[],[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0296 true

[[],[],[]] -> [];
[[3]] -> [3];
[[],[1],[]] -> [1];
[[1],[],[]] -> [1];
[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0191 false

[[]] -> [];
[[1],[0],[]] -> [1,0];
[[],[]] -> [];
[[0],[1]] -> [0,1];
[[0],[3]] -> [0,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0255 true

[[3]] -> [3];
[[]] -> [];
[[0]] -> [0];
[[2],[]] -> [2];
[[2],[],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) -> match x with
                     | LNil _ -> Nil
                     | LCons _ -> Un_LCons x . 0

0.0198 false

[[],[2]] -> [2];
[[],[],[3]] -> [3];
[[],[2],[2]] -> [2,2];
[[],[3]] -> [3];
[[],[0],[2]] -> [0,2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0286 true

[[],[],[3]] -> [3];
[[2]] -> [2];
[[],[3]] -> [3];
[[3],[],[1]] -> [3,1];
[[],[2],[3]] -> [2,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0303 true

[[],[]] -> [];
[[],[],[]] -> [];
[[]] -> [];
[[0]] -> [0];
[[0],[1]] -> [0,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0185 true

[[],[]] -> [];
[[1],[],[]] -> [1];
[[1],[],[0]] -> [1,0];
[[2],[0],[]] -> [2,0];
[[2],[3]] -> [2,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0300 true

[[],[]] -> [];
[[3],[2]] -> [3,2];
[[0],[0]] -> [0,0];
[[0]] -> [0];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0266 true

[[0],[0],[]] -> [0,0];
[[1]] -> [1];
[[0]] -> [0];
[[],[0],[0]] -> [0,0];
[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0250 false

[[2],[]] -> [2];
[[0]] -> [0];
[[],[],[2]] -> [2];
[[]] -> [];
[[2],[],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0208 false

[[],[2],[2]] -> [2,2];
[[],[1]] -> [1];
[[],[3]] -> [3];
[[],[],[]] -> [];
[[1]] -> [1];
[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0262 false

[[],[2],[]] -> [2];
[[],[1]] -> [1];
[[],[3],[0]] -> [3,0];
[[]] -> [];
[[3],[],[3]] -> [3,3];
[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0328 true

[[2],[],[]] -> [2];
[[],[],[]] -> [];
[[2],[0],[]] -> [2,0];
[[0]] -> [0];
[[]] -> [];
[[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0245 true

[[2],[],[]] -> [2];
[[],[]] -> [];
[[0],[1]] -> [0,1];
[[3],[]] -> [3];
[[0]] -> [0];
[[],[2],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0278 true

[[2],[],[2]] -> [2,2];
[[]] -> [];
[[3],[],[0]] -> [3,0];
[[2],[]] -> [2];
[[],[0]] -> [0];
[[],[1],[2]] -> [1,2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0372 true

[[3]] -> [3];
[[],[],[2]] -> [2];
[[1],[],[3]] -> [1,3];
[[]] -> [];
[[0],[],[]] -> [0];
[[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0268 true

[[],[]] -> [];
[[3]] -> [3];
[[0],[],[0]] -> [0,0];
[[],[1]] -> [1];
[[]] -> [];
[[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0272 false

[[],[],[0]] -> [0];
[[3],[],[]] -> [3];
[[0],[2],[3]] -> [0,2,3];
[[],[],[2]] -> [2];
[[]] -> [];
[[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0342 true

[[],[]] -> [];
[[3]] -> [3];
[[],[],[0]] -> [0];
[[]] -> [];
[[1]] -> [1];
[[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0223 false

[[1],[]] -> [1];
[[]] -> [];
[[1]] -> [1];
[[2]] -> [2];
[[],[0],[2]] -> [0,2];
[[],[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0252 true

[[1],[3]] -> [1,3];
[[0],[2]] -> [0,2];
[[],[3]] -> [3];
[[1],[],[1]] -> [1,1];
[[]] -> [];
[[0]] -> [0];
[[0],[0],[]] -> [0,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0420 true

[[],[]] -> [];
[[]] -> [];
[[],[3]] -> [3];
[[],[1]] -> [1];
[[0]] -> [0];
[[2],[3],[1]] -> [2,3,1];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0344 true

[[2],[]] -> [2];
[[],[0]] -> [0];
[[2],[],[]] -> [2];
[[]] -> [];
[[3]] -> [3];
[[],[3]] -> [3];
[[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0306 false

[[2]] -> [2];
[[],[],[]] -> [];
[[],[3],[]] -> [3];
[[],[0]] -> [0];
[[2],[0]] -> [2,0];
[[3],[2]] -> [3,2];
[[],[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0355 true

[[],[0]] -> [0];
[[1],[2]] -> [1,2];
[[3]] -> [3];
[[]] -> [];
[[1],[]] -> [1];
[[0]] -> [0];
[[0],[1]] -> [0,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0349 true

[[3],[]] -> [3];
[[3],[],[3]] -> [3,3];
[[2],[],[1]] -> [2,1];
[[0],[],[]] -> [0];
[[2]] -> [2];
[[],[],[1]] -> [1];
[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0371 true

[[3],[]] -> [3];
[[0],[1],[]] -> [0,1];
[[],[1],[]] -> [1];
[[],[]] -> [];
[[]] -> [];
[[0],[0]] -> [0,0];
[[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0336 true

[[2],[],[]] -> [2];
[[2],[3]] -> [2,3];
[[],[1]] -> [1];
[[],[0],[]] -> [0];
[[],[3]] -> [3];
[[],[3],[3]] -> [3,3];
[[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0436 true

[[],[3]] -> [3];
[[1],[]] -> [1];
[[],[]] -> [];
[[]] -> [];
[[3],[]] -> [3];
[[2],[],[2]] -> [2,2];
[[],[0],[]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0322 false

[[0],[],[]] -> [0];
[[],[3],[]] -> [3];
[[],[2]] -> [2];
[[],[0]] -> [0];
[[3]] -> [3];
[[1]] -> [1];
[[0],[0],[]] -> [0,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0361 false

[[0],[1]] -> [0,1];
[[0],[3]] -> [0,3];
[[]] -> [];
[[],[3]] -> [3];
[[],[2],[]] -> [2];
[[],[2],[1]] -> [2,1];
[[0],[],[]] -> [0];
[[0],[3],[]] -> [0,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0464 true

[[0],[]] -> [0];
[[1],[],[]] -> [1];
[[2],[3],[]] -> [2,3];
[[]] -> [];
[[],[1],[]] -> [1];
[[2]] -> [2];
[[],[2],[0]] -> [2,0];
[[1],[1],[]] -> [1,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0442 true

[[]] -> [];
[[0],[3],[]] -> [0,3];
[[],[],[2]] -> [2];
[[2],[2]] -> [2,2];
[[],[],[1]] -> [1];
[[3],[0],[3]] -> [3,0,3];
[[2],[1],[3]] -> [2,1,3];
[[1],[]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0598 true

[[],[],[]] -> [];
[[]] -> [];
[[2],[],[]] -> [2];
[[3],[1]] -> [3,1];
[[0],[0]] -> [0,0];
[[],[]] -> [];
[[2]] -> [2];
[[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0362 true

[[1],[]] -> [1];
[[],[0],[2]] -> [0,2];
[[2],[2],[]] -> [2,2];
[[]] -> [];
[[],[]] -> [];
[[2],[0],[3]] -> [2,0,3];
[[0],[3]] -> [0,3];
[[0],[]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0498 true

[[],[]] -> [];
[[2],[]] -> [2];
[[2],[0]] -> [2,0];
[[3],[]] -> [3];
[[],[2]] -> [2];
[[]] -> [];
[[2],[1],[2]] -> [2,1,2];
[[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0447 true

[[0],[],[]] -> [0];
[[2],[0]] -> [2,0];
[[],[1]] -> [1];
[[0]] -> [0];
[[],[0],[3]] -> [0,3];
[[],[2],[]] -> [2];
[[],[],[]] -> [];
[[3],[0]] -> [3,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0435 true

[[],[0]] -> [0];
[[0]] -> [0];
[[]] -> [];
[[],[]] -> [];
[[1],[]] -> [1];
[[2]] -> [2];
[[2],[1],[]] -> [2,1];
[[3],[],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0360 true

[[],[2]] -> [2];
[[],[3],[0]] -> [3,0];
[[],[3],[]] -> [3];
[[3],[2],[2]] -> [3,2,2];
[[1],[2],[1]] -> [1,2,1];
[[],[]] -> [];
[[3],[]] -> [3];
[[],[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0551 true

[[]] -> [];
[[3],[2]] -> [3,2];
[[3],[1],[3]] -> [3,1,3];
[[1]] -> [1];
[[3],[3]] -> [3,3];
[[],[]] -> [];
[[],[],[]] -> [];
[[3],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0449 true

[[2],[1],[1]] -> [2,1,1];
[[],[]] -> [];
[[2],[]] -> [2];
[[]] -> [];
[[],[],[0]] -> [0];
[[2],[],[3]] -> [2,3];
[[],[1]] -> [1];
[[],[0],[]] -> [0];
[[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0446 true

[[3],[1],[]] -> [3,1];
[[],[1]] -> [1];
[[],[3],[2]] -> [3,2];
[[3],[]] -> [3];
[[]] -> [];
[[],[],[]] -> [];
[[0],[]] -> [0];
[[2],[]] -> [2];
[[],[1],[1]] -> [1,1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0477 true

[[1],[2]] -> [1,2];
[[0]] -> [0];
[[2],[1],[3]] -> [2,1,3];
[[3],[0],[3]] -> [3,0,3];
[[1],[],[]] -> [1];
[[]] -> [];
[[1],[]] -> [1];
[[],[]] -> [];
[[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0575 true

[[2],[2]] -> [2,2];
[[3],[3]] -> [3,3];
[[1]] -> [1];
[[1],[2]] -> [1,2];
[[2],[],[]] -> [2];
[[1],[0]] -> [1,0];
[[0],[]] -> [0];
[[]] -> [];
[[2],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0574 true

[[],[],[1]] -> [1];
[[1],[],[0]] -> [1,0];
[[],[]] -> [];
[[0],[]] -> [0];
[[]] -> [];
[[],[2]] -> [2];
[[1],[],[]] -> [1];
[[2],[],[]] -> [2];
[[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0388 true

[[2]] -> [2];
[[0],[3],[]] -> [0,3];
[[],[],[3]] -> [3];
[[3],[1],[2]] -> [3,1,2];
[[2],[3],[]] -> [2,3];
[[1],[]] -> [1];
[[1],[0],[0]] -> [1,0,0];
[[3],[],[]] -> [3];
[[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0655 true

[[2]] -> [2];
[[],[],[]] -> [];
[[],[0],[]] -> [0];
[[],[]] -> [];
[[],[0]] -> [0];
[[0]] -> [0];
[[2],[],[]] -> [2];
[[],[],[0]] -> [0];
[[2],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (f (Un_LCons x . 1)) (Un_LCons x . 0)

0.0345 false

[[],[2],[]] -> [2];
[[0]] -> [0];
[[],[],[]] -> [];
[[]] -> [];
[[1]] -> [1];
[[1],[2],[]] -> [1,2];
[[],[1]] -> [1];
[[1],[3],[2]] -> [1,3,2];
[[2],[0]] -> [2,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0490 true

[[1],[3]] -> [1,3];
[[0],[]] -> [0];
[[1],[],[0]] -> [1,0];
[[],[],[]] -> [];
[[2]] -> [2];
[[],[]] -> [];
[[1]] -> [1];
[[]] -> [];
[[0],[0]] -> [0,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0415 true

[[],[3],[]] -> [3];
[[]] -> [];
[[2],[1]] -> [2,1];
[[],[1],[3]] -> [1,3];
[[0],[2],[0]] -> [0,2,0];
[[1],[1],[0]] -> [1,1,0];
[[1],[]] -> [1];
[[],[],[1]] -> [1];
[[2],[3],[]] -> [2,3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0662 true

[[],[],[]] -> [];
[[2]] -> [2];
[[0],[2]] -> [0,2];
[[2],[],[2]] -> [2,2];
[[]] -> [];
[[],[1]] -> [1];
[[3]] -> [3];
[[3],[],[3]] -> [3,3];
[[3],[0]] -> [3,0];
[[],[],[3]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0637 true

[[1]] -> [1];
[[]] -> [];
[[2],[],[]] -> [2];
[[1],[0],[]] -> [1,0];
[[2]] -> [2];
[[0],[]] -> [0];
[[],[],[2]] -> [2];
[[0],[0],[]] -> [0,0];
[[],[0],[]] -> [0];
[[],[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0522 true

[[],[],[]] -> [];
[[0],[2]] -> [0,2];
[[],[],[3]] -> [3];
[[],[2],[2]] -> [2,2];
[[1],[]] -> [1];
[[],[],[0]] -> [0];
[[],[3],[]] -> [3];
[[0],[],[3]] -> [0,3];
[[1],[1]] -> [1,1];
[[],[0]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0608 true

[[]] -> [];
[[1],[],[]] -> [1];
[[],[1],[]] -> [1];
[[1],[2],[0]] -> [1,2,0];
[[2],[],[3]] -> [2,3];
[[3],[],[3]] -> [3,3];
[[1]] -> [1];
[[3]] -> [3];
[[0],[],[2]] -> [0,2];
[[],[],[]] -> [];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0627 true

[[0],[3]] -> [0,3];
[[],[3],[]] -> [3];
[[],[2],[2]] -> [2,2];
[[0],[3],[]] -> [0,3];
[[1],[]] -> [1];
[[1],[2],[]] -> [1,2];
[[],[],[0]] -> [0];
[[0],[],[0]] -> [0,0];
[[0],[2],[2]] -> [0,2,2];
[[],[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0741 true

[[1],[1],[2]] -> [1,1,2];
[[1],[],[0]] -> [1,0];
[[0]] -> [0];
[[3],[],[]] -> [3];
[[],[],[0]] -> [0];
[[]] -> [];
[[0],[3],[]] -> [0,3];
[[],[2],[]] -> [2];
[[],[],[3]] -> [3];
[[0],[3],[0]] -> [0,3,0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0803 true

[[1],[1],[1]] -> [1,1,1];
[[]] -> [];
[[3]] -> [3];
[[0],[]] -> [0];
[[3],[1],[]] -> [3,1];
[[2]] -> [2];
[[3],[2]] -> [3,2];
[[2],[2]] -> [2,2];
[[2],[],[1]] -> [2,1];
[[2],[],[]] -> [2];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0802 true

[[],[],[]] -> [];
[[3],[0],[]] -> [3,0];
[[1],[],[0]] -> [1,0];
[[]] -> [];
[[],[]] -> [];
[[3]] -> [3];
[[0]] -> [0];
[[],[],[2]] -> [2];
[[],[1],[0]] -> [1,0];
[[0],[]] -> [0];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0496 true

[[]] -> [];
[[3],[]] -> [3];
[[3],[1],[1]] -> [3,1,1];
[[3]] -> [3];
[[1],[2]] -> [1,2];
[[],[3]] -> [3];
[[],[],[]] -> [];
[[0],[],[]] -> [0];
[[],[]] -> [];
[[1]] -> [1];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0498 true

[[0],[3]] -> [0,3];
[[1],[]] -> [1];
[[],[1],[3]] -> [1,3];
[[2]] -> [2];
[[],[2]] -> [2];
[[0]] -> [0];
[[]] -> [];
[[],[]] -> [];
[[],[0],[0]] -> [0,0];
[[3],[],[]] -> [3];
[] -> [];

=================================
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))

0.0514 true

