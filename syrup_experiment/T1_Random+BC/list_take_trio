(2,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0003 false

(3,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0002 false

(1,[2,2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (S (x . 0), Nil)

0.0066 false

(2,[2,1]) -> [2,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0003 false

(2,[1,3]) -> [1,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0002 false

(1,[2,2,0]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (S (x . 0), Nil)

0.0060 false

(0,[0,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> Nil

0.0001 false

(2,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0002 false

(2,[0,2]) -> [0,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0002 false

(1,[3,1]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> Cons (S (S (x . 0)), Nil)

0.0055 false

(0,[0,1,3]) -> [];
(3,[1,1]) -> [1,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0106 false

(1,[2]) -> [2];
(3,[3,2]) -> [3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0014 false

(2,[1]) -> [1];
(3,[1,3,2]) -> [1,3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0013 false

(0,[0]) -> [];
(1,[2,0,1]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (S (x . 0), Nil)

0.0067 false

(3,[2,2,1]) -> [2,2,1];
(1,[0,0,2]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> x . 1)

0.0141 false

(1,[0]) -> [0];
(3,[2,1,0]) -> [2,1,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0012 false

(0,[1,3,2]) -> [];
(2,[2,3,1]) -> [2,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (x . 0, Cons (S (x . 0), Nil))

0.0096 false

(2,[3,0]) -> [3,0];
(0,[1,3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0095 false

(2,[0,1]) -> [0,1];
(1,[0,1,0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> x . 1)

0.0163 false

(3,[3,0,2]) -> [3,0,2];
(2,[1,1]) -> [1,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0013 false

(2,[3,1]) -> [3,1];
(1,[3,0]) -> [3];
(0,[0,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0182 true

(0,[3,0,3]) -> [];
(0,[3]) -> [];
(3,[2,0,0]) -> [2,0,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0112 false

(1,[2]) -> [2];
(1,[2,1]) -> [2];
(2,[2,3,3]) -> [2,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (S (x . 0), Nil)
                  | S _ -> Cons (x . 0, Cons (S (x . 0), Nil)))

0.0231 false

(1,[3,0]) -> [3];
(3,[3,1,1]) -> [3,1,1];
(0,[0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0220 false

(3,[1,1]) -> [1,1];
(0,[1,3,3]) -> [];
(3,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0133 false

(2,[3,2,2]) -> [3,2];
(1,[0,0]) -> [0];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> x . 1
      | S _ -> (match Un_S (x . 0) with
                  | O _ -> Cons (Un_S (x . 0), Nil)
                  | S _ -> Cons (S (x . 0), Cons (x . 0, Nil)))

0.0208 false

(0,[1,3,1]) -> [];
(3,[0]) -> [0];
(3,[1,3,2]) -> [1,3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0134 false

(0,[2,2,3]) -> [];
(2,[0]) -> [0];
(1,[3,0]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0129 false

(3,[1,1]) -> [1,1];
(3,[3,0,2]) -> [3,0,2];
(3,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0022 false

(2,[0,3]) -> [0,3];
(0,[2]) -> [];
(0,[2,3,3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0099 false

(2,[0,3,0]) -> [0,3];
(2,[3]) -> [3];
(3,[0,2]) -> [0,2];
(1,[2,0]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1))
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0351 false

(0,[2,3,3]) -> [];
(0,[2,3]) -> [];
(2,[1,3,0]) -> [1,3];
(0,[1,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 0 with
      | O _ -> Nil
      | S _ -> Cons (Un_S (x . 0), Cons (S (x . 0), Nil))

0.0123 false

(3,[0,3]) -> [0,3];
(2,[3,2,2]) -> [3,2];
(0,[2,1,1]) -> [];
(2,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0262 true

(1,[3,3,3]) -> [3];
(1,[2,0,3]) -> [2];
(0,[0,3]) -> [];
(0,[0,0,2]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0150 false

(3,[1,1]) -> [1,1];
(1,[0]) -> [0];
(0,[3]) -> [];
(1,[0,0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0218 false

(2,[3,1]) -> [3,1];
(2,[2,3]) -> [2,3];
(3,[2,0]) -> [2,0];
(1,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0025 false

(3,[2,3,2]) -> [2,3,2];
(2,[3]) -> [3];
(1,[2]) -> [2];
(0,[0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0170 false

(1,[0]) -> [0];
(1,[3]) -> [3];
(0,[1,3,0]) -> [];
(2,[3,2]) -> [3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0153 false

(1,[3,2,0]) -> [3];
(2,[1,1,1]) -> [1,1];
(1,[3]) -> [3];
(1,[1]) -> [1];
(0, []) -> [];

=================================
None
(2,[1,3,0]) -> [1,3];
(2,[0]) -> [0];
(2,[3]) -> [3];
(1,[0,2]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (x . 1) . 0 with
                                    | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                                    | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Cons (S (x . 0), Nil))))

0.0344 false

(1,[2,2,3]) -> [2];
(0,[2,1,3]) -> [];
(2,[1,2,3]) -> [1,2];
(2,[0,3,2]) -> [0,3];
(2,[3,2,2]) -> [3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0273 true

(1,[0,2]) -> [0];
(1,[2]) -> [2];
(1,[2,2]) -> [2];
(2,[1]) -> [1];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil)

0.0210 false

(2,[1,0]) -> [1,0];
(2,[1,2]) -> [1,2];
(2,[3]) -> [3];
(1,[1]) -> [1];
(1,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) = fun (x:nat * list) -> x . 1

0.0025 false

(1,[2]) -> [2];
(0,[1,2,3]) -> [];
(0,[0,1,0]) -> [];
(3,[0,0,0]) -> [0,0,0];
(2,[1,1]) -> [1,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0170 false

(0,[2]) -> [];
(1,[3,1,1]) -> [3];
(1,[1]) -> [1];
(0,[2,3,1]) -> [];
(0,[3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0148 false

(3,[3]) -> [3];
(3,[2]) -> [2];
(2,[0,0]) -> [0,0];
(0,[2,2]) -> [];
(2,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0234 false

(3,[2,0]) -> [2,0];
(0,[3,2,1]) -> [];
(3,[2]) -> [2];
(3,[3,1]) -> [3,1];
(2,[2,1,3]) -> [2,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0298 true

(3,[1,0,1]) -> [1,0,1];
(1,[0,1,0]) -> [0];
(0,[3,1,1]) -> [];
(3,[2,2,2]) -> [2,2,2];
(3,[3,3,1]) -> [3,3,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0363 true

(1,[0,1,2]) -> [0];
(2,[1]) -> [1];
(1,[3,0]) -> [3];
(2,[3,0,0]) -> [3,0];
(1,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                     | S _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 1)))

0.0553 false

(1,[3,3]) -> [3];
(0,[3]) -> [];
(3,[1,0]) -> [1,0];
(1,[1,0]) -> [1];
(0,[2,3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0250 true

(1,[1]) -> [1];
(3,[2]) -> [2];
(1,[0]) -> [0];
(2,[0,0]) -> [0,0];
(1,[1,0,2]) -> [1];
(3,[1,1,2]) -> [1,1,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> x . 1
                     | S _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 0 with
                                                | O _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                Nil)
                                                | S _ -> x . 1)))

0.0728 false

(2,[1]) -> [1];
(0,[2,2,3]) -> [];
(1,[1,0]) -> [1];
(0,[3,2]) -> [];
(0,[2,1]) -> [];
(1,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> Cons (1, Nil)

0.0157 false

(0,[2]) -> [];
(3,[3,2]) -> [3,2];
(1,[1]) -> [1];
(3,[0,2]) -> [0,2];
(0,[3,2]) -> [];
(2,[2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0195 false

(1,[0,3,3]) -> [0];
(2,[0,0,0]) -> [0,0];
(1,[1,3]) -> [1];
(0,[0,2,0]) -> [];
(3,[0,2,2]) -> [0,2,2];
(0,[3,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0290 true

(0,[1]) -> [];
(3,[0,0,2]) -> [0,0,2];
(1,[0,1]) -> [0];
(0,[3,0,3]) -> [];
(0,[3,3]) -> [];
(0,[0,1,2]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0264 true

(2,[2,3,3]) -> [2,3];
(3,[0,0]) -> [0,0];
(3,[1]) -> [1];
(1,[3,2]) -> [3];
(2,[3,3]) -> [3,3];
(3,[2]) -> [2];
(0, []) -> [];

=================================
None
(0,[2,0,0]) -> [];
(3,[3,1]) -> [3,1];
(1,[2,2,3]) -> [2];
(3,[1,2,0]) -> [1,2,0];
(1,[3,2,3]) -> [3];
(2,[2,1,2]) -> [2,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0326 true

(1,[2,3]) -> [2];
(0,[1]) -> [];
(1,[3,3,2]) -> [3];
(2,[2]) -> [2];
(0,[2,3,3]) -> [];
(3,[3,1,1]) -> [3,1,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0297 true

(0,[3,3,1]) -> [];
(1,[0,1]) -> [0];
(3,[3]) -> [3];
(3,[0,1,1]) -> [0,1,1];
(0,[2,0,0]) -> [];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0263 true

(0,[1]) -> [];
(1,[0]) -> [0];
(2,[0,0]) -> [0,0];
(1,[3,2]) -> [3];
(1,[1]) -> [1];
(1,[1,0]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0280 false

(3,[0,1]) -> [0,1];
(2,[1,2]) -> [1,2];
(3,[3]) -> [3];
(2,[1,0]) -> [1,0];
(2,[0,2]) -> [0,2];
(0,[3,0,1]) -> [];
(0,[0,2,0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0219 false

(3,[3,0]) -> [3,0];
(0,[3]) -> [];
(3,[0,3]) -> [0,3];
(1,[2,3,3]) -> [2];
(2,[0,3,1]) -> [0,3];
(0,[1,1,2]) -> [];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0310 true

(3,[2,2]) -> [2,2];
(2,[0,1,3]) -> [0,1];
(2,[1,2]) -> [1,2];
(3,[1]) -> [1];
(3,[2]) -> [2];
(0,[2]) -> [];
(0,[3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0340 false

(0,[3,3]) -> [];
(0,[1]) -> [];
(2,[3]) -> [3];
(3,[2,0]) -> [2,0];
(2,[3,1]) -> [3,1];
(1,[1]) -> [1];
(1,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0218 false

(1,[1]) -> [1];
(3,[0,1]) -> [0,1];
(3,[1,3,0]) -> [1,3,0];
(3,[2,3,0]) -> [2,3,0];
(2,[1]) -> [1];
(0,[3,2,2]) -> [];
(3,[2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0244 false

(0,[1,2]) -> [];
(1,[0]) -> [0];
(0,[2,0]) -> [];
(0,[3,0,3]) -> [];
(0,[1,3,2]) -> [];
(1,[0,0]) -> [0];
(1,[1,3,3]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0157 false

(1,[1,2,0]) -> [1];
(2,[2,1,3]) -> [2,1];
(3,[2,0,2]) -> [2,0,2];
(1,[2,1]) -> [2];
(0,[0,3,2]) -> [];
(2,[1]) -> [1];
(3,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0367 true

(2,[2,0,1]) -> [2,0];
(0,[2,0]) -> [];
(3,[0]) -> [0];
(3,[3,2,2]) -> [3,2,2];
(1,[0]) -> [0];
(0,[3]) -> [];
(0,[2,2]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0303 true

(3,[2]) -> [2];
(0,[1,0]) -> [];
(2,[1,3,2]) -> [1,3];
(0,[3]) -> [];
(0,[1,1]) -> [];
(2,[0,1,1]) -> [0,1];
(0,[3,3,0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0302 true

(1,[2,0]) -> [2];
(2,[1]) -> [1];
(2,[3,2,0]) -> [3,2];
(2,[2]) -> [2];
(2,[3]) -> [3];
(2,[0,0,3]) -> [0,0];
(1,[0,1]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 1 with
                                    | Nil _ -> Cons (Un_Cons (x . 1) . 0,
                                                      Nil)
                                    | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                       f
                                                         (x . 0,
                                                           Un_Cons (x . 1) .
                                                             1))))

0.1949 false

(3,[2]) -> [2];
(1,[0,0,0]) -> [0];
(1,[0,2]) -> [0];
(3,[2,0]) -> [2,0];
(2,[1,0,2]) -> [1,0];
(1,[1,0,0]) -> [1];
(2,[3]) -> [3];
(3,[3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 0 with
                                    | O _ -> (match Un_Cons (x . 1) . 0 with
                                                | O _ -> Un_Cons (Un_Cons (
                                                                    x . 1) .
                                                                    1)
                                                           . 1
                                                | S _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                f
                                                                  (x . 0,
                                                                    Un_Cons (
                                                                    x . 1) .
                                                                    1)))
                                    | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 1)))

5.7979 false

(3,[0,2]) -> [0,2];
(2,[1,1]) -> [1,1];
(0,[1,1,1]) -> [];
(2,[0,2]) -> [0,2];
(2,[3]) -> [3];
(0,[2,2]) -> [];
(3,[2,2,2]) -> [2,2,2];
(2,[1,2,0]) -> [1,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0436 true

(3,[2]) -> [2];
(0,[1,2]) -> [];
(0,[3,3,3]) -> [];
(2,[0,3,0]) -> [0,3];
(2,[0]) -> [0];
(3,[3]) -> [3];
(1,[0,0]) -> [0];
(0,[0,0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0326 true

(1,[1,0,1]) -> [1];
(1,[2,0]) -> [2];
(2,[1,2,1]) -> [1,2];
(2,[0,3]) -> [0,3];
(0,[1,2,2]) -> [];
(3,[2]) -> [2];
(1,[0,3,2]) -> [0];
(2,[1,2]) -> [1,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0391 true

(2,[1]) -> [1];
(0,[2]) -> [];
(2,[3,2,0]) -> [3,2];
(3,[0]) -> [0];
(1,[1,3,1]) -> [1];
(2,[1,1]) -> [1,1];
(0,[1,3]) -> [];
(1,[0,0,3]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0352 true

(0,[1,3]) -> [];
(3,[1,2,2]) -> [1,2,2];
(0,[2,0,3]) -> [];
(1,[3]) -> [3];
(3,[3]) -> [3];
(3,[3,3,2]) -> [3,3,2];
(2,[3,1]) -> [3,1];
(2,[3,2,1]) -> [3,2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0613 true

(2,[0,1,2]) -> [0,1];
(2,[3,2]) -> [3,2];
(2,[0,2]) -> [0,2];
(3,[2]) -> [2];
(3,[3,2,0]) -> [3,2,0];
(3,[3,3]) -> [3,3];
(0,[3]) -> [];
(3,[0,3]) -> [0,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0470 false

(0,[1]) -> [];
(3,[3]) -> [3];
(0,[1,3,3]) -> [];
(2,[1,3,2]) -> [1,3];
(3,[2,0,0]) -> [2,0,0];
(1,[0,2,0]) -> [0];
(3,[0,3]) -> [0,3];
(0,[2,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0352 true

(1,[1]) -> [1];
(1,[0,0]) -> [0];
(1,[2,1,1]) -> [2];
(3,[2,1,1]) -> [2,1,1];
(1,[1,3,3]) -> [1];
(1,[3,0,1]) -> [3];
(3,[3,2,0]) -> [3,2,0];
(3,[2]) -> [2];
(0, []) -> [];

=================================
None
(2,[3,2]) -> [3,2];
(1,[2]) -> [2];
(3,[1,1,0]) -> [1,1,0];
(1,[1]) -> [1];
(0,[3]) -> [];
(1,[2,1]) -> [2];
(3,[2]) -> [2];
(2,[0,0]) -> [0,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0494 false

(3,[1,3,2]) -> [1,3,2];
(1,[3]) -> [3];
(0,[1,0,2]) -> [];
(1,[0,0]) -> [0];
(0,[0,2,0]) -> [];
(1,[2,3,0]) -> [2];
(0,[1,2,0]) -> [];
(2,[1,3]) -> [1,3];
(1,[1]) -> [1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0403 true

(3,[3,2]) -> [3,2];
(0,[2]) -> [];
(1,[1]) -> [1];
(3,[1]) -> [1];
(3,[3,2,2]) -> [3,2,2];
(3,[3]) -> [3];
(2,[1,3,0]) -> [1,3];
(3,[0,1]) -> [0,1];
(3,[1,0]) -> [1,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0505 false

(1,[1,2]) -> [1];
(0,[3,1]) -> [];
(1,[1,3]) -> [1];
(0,[0,0]) -> [];
(0,[0,2,1]) -> [];
(3,[0,0]) -> [0,0];
(1,[1,1,3]) -> [1];
(2,[0]) -> [0];
(2,[2,0]) -> [2,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0412 true

(0,[3,3,1]) -> [];
(1,[2,2]) -> [2];
(2,[2,2]) -> [2,2];
(2,[1]) -> [1];
(1,[2]) -> [2];
(3,[0,3]) -> [0,3];
(3,[3,3,1]) -> [3,3,1];
(2,[0,2,2]) -> [0,2];
(2,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0512 true

(2,[2,0]) -> [2,0];
(3,[3,0,1]) -> [3,0,1];
(1,[3,2]) -> [3];
(3,[1,1,2]) -> [1,1,2];
(0,[1,3,0]) -> [];
(0,[0]) -> [];
(3,[3]) -> [3];
(1,[0]) -> [0];
(2,[0]) -> [0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0437 true

(1,[2,1,1]) -> [2];
(3,[1,2]) -> [1,2];
(3,[0,0,0]) -> [0,0,0];
(3,[2]) -> [2];
(3,[0]) -> [0];
(2,[3]) -> [3];
(1,[0,1,0]) -> [0];
(3,[1,1]) -> [1,1];
(3,[0,3,0]) -> [0,3,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 0 with
                                    | O _ -> x . 1
                                    | S _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 1 with
                                                | Nil _ -> x . 1
                                                | Cons _ -> (match Un_S (
                                                                    Un_Cons (
                                                                    Un_Cons (
                                                                    x . 1) .
                                                                    1) . 0) with
                                                               | O _ -> 
                                                                 Cons 
                                                                   (Un_Cons (
                                                                    x . 1) .
                                                                    0, 
                                                                    Nil)
                                                               | S _ -> x . 1))))

11.0400 false

(0,[1]) -> [];
(1,[0,0,0]) -> [0];
(0,[1,0,1]) -> [];
(2,[2]) -> [2];
(1,[3,0,3]) -> [3];
(1,[0]) -> [0];
(3,[2]) -> [2];
(3,[2,3,0]) -> [2,3,0];
(0,[0]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0369 true

(2,[3]) -> [3];
(1,[2]) -> [2];
(1,[3]) -> [3];
(3,[3]) -> [3];
(1,[1]) -> [1];
(2,[0,3]) -> [0,3];
(0,[2,2,2]) -> [];
(2,[2,2]) -> [2,2];
(0,[2,3]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0321 false

(1,[3]) -> [3];
(2,[0,0,2]) -> [0,0];
(2,[0,1,3]) -> [0,1];
(0,[0,1]) -> [];
(1,[1]) -> [1];
(1,[0,1]) -> [0];
(2,[2,2,2]) -> [2,2];
(1,[2]) -> [2];
(1,[3,3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0452 true

(0,[0,1]) -> [];
(0,[1]) -> [];
(3,[1]) -> [1];
(0,[3]) -> [];
(1,[1,2]) -> [1];
(1,[0]) -> [0];
(1,[0,0]) -> [0];
(3,[2,3]) -> [2,3];
(3,[1,3]) -> [1,3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0338 true

(3,[3,3,0]) -> [3,3,0];
(1,[1]) -> [1];
(0,[2,0]) -> [];
(1,[3,3,3]) -> [3];
(0,[0]) -> [];
(2,[1]) -> [1];
(0,[1,2,3]) -> [];
(2,[3]) -> [3];
(0,[3,3]) -> [];
(2,[2,1]) -> [2,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0470 true

(0,[1]) -> [];
(3,[3]) -> [3];
(2,[2,3]) -> [2,3];
(3,[0,3]) -> [0,3];
(3,[0]) -> [0];
(0,[2,1]) -> [];
(1,[3,3,3]) -> [3];
(2,[3,1,0]) -> [3,1];
(3,[3,3]) -> [3,3];
(0,[2,3,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0485 true

(1,[1]) -> [1];
(1,[0]) -> [0];
(1,[2,0,3]) -> [2];
(2,[3,0,3]) -> [3,0];
(2,[1]) -> [1];
(1,[1,1]) -> [1];
(3,[2,3,2]) -> [2,3,2];
(0,[2]) -> [];
(1,[0,2,0]) -> [0];
(2,[3,0]) -> [3,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> (match Un_S (x . 0) with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                                 | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (Un_S (x . 0),
                                                     Un_Cons (x . 1) . 1))))

0.0694 true

(0,[1,0]) -> [];
(1,[2]) -> [2];
(2,[1,3]) -> [1,3];
(3,[1,3]) -> [1,3];
(1,[1]) -> [1];
(2,[2]) -> [2];
(2,[3,0]) -> [3,0];
(3,[1]) -> [1];
(2,[0]) -> [0];
(0,[0,1]) -> [];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) -> match x . 0 with
                          | O _ -> Nil
                          | S _ -> x . 1

0.0337 false

(1,[2,3,0]) -> [2];
(1,[2,1,1]) -> [2];
(0,[0,0]) -> [];
(1,[3]) -> [3];
(1,[0,0,2]) -> [0];
(0,[1]) -> [];
(3,[2,0,2]) -> [2,0,2];
(1,[2,3]) -> [2];
(2,[2]) -> [2];
(2,[2,1,2]) -> [2,1];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0496 true

(0,[2]) -> [];
(3,[0]) -> [0];
(1,[0]) -> [0];
(1,[2]) -> [2];
(2,[1,3]) -> [1,3];
(2,[1]) -> [1];
(2,[0,1,1]) -> [0,1];
(1,[0,0,3]) -> [0];
(0,[3]) -> [];
(1,[3,2,3]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> (match Un_S (x . 0) with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                                 | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (Un_S (x . 0),
                                                     Un_Cons (x . 1) . 1))))

0.0622 true

(0,[1,1]) -> [];
(2,[1,3]) -> [1,3];
(3,[3,2,2]) -> [3,2,2];
(2,[3]) -> [3];
(2,[0]) -> [0];
(1,[3]) -> [3];
(0,[1]) -> [];
(0,[1,0]) -> [];
(0,[3,1,2]) -> [];
(1,[2,2]) -> [2];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0410 true

(0,[1]) -> [];
(1,[2,3,1]) -> [2];
(3,[3]) -> [3];
(2,[3,2,2]) -> [3,2];
(2,[3,3,3]) -> [3,3];
(1,[3,2,1]) -> [3];
(0,[0,0]) -> [];
(1,[3,0,0]) -> [3];
(3,[2,0]) -> [2,0];
(1,[3,0]) -> [3];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0809 true

(2,[1,3]) -> [1,3];
(1,[2,3,3]) -> [2];
(1,[1,3,3]) -> [1];
(3,[1]) -> [1];
(3,[0,0,3]) -> [0,0,3];
(2,[0,0]) -> [0,0];
(1,[1]) -> [1];
(1,[1,2,1]) -> [1];
(1,[0,0,1]) -> [0];
(2,[0,2]) -> [0,2];
(0, []) -> [];

=================================
None
(2,[2,3,2]) -> [2,3];
(0,[1]) -> [];
(0,[3]) -> [];
(1,[2,3,0]) -> [2];
(2,[2,2,0]) -> [2,2];
(2,[2]) -> [2];
(0,[2]) -> [];
(0,[2,3,0]) -> [];
(1,[3]) -> [3];
(3,[1,3,0]) -> [1,3,0];
(0, []) -> [];

=================================
fix (f : nat * list -> list) =
  fun (x:nat * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 with
                     | O _ -> Nil
                     | S _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (Un_S (x . 0), Un_Cons (x . 1) . 1)))

0.0463 true

