([1,3,1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0,2],1) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.0060 false

([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0002 false

([2,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,2,0],2) -> [0];
([0,3,3],2) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Cons (S (x . 1), Nil)
                     | S _ -> Cons (0, Nil))

0.0200 false

([0],1) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([1,1],0) -> [1,1];
([2,2],0) -> [2,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> x . 0

0.0013 false

([0],1) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([3,0],1) -> [0];
([1,0],0) -> [1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> Cons (Un_S (x . 1), Nil)

0.0126 false

([1],3) -> [];
([1],0) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0178 false

([2],2) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([0],1) -> [];
([0,2,0],0) -> [0,2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0099 false

([0,3],2) -> [];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0001 false

([2,3],3) -> [];
([3,1,0],0) -> [3,1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0175 false

([3],0) -> [3];
([2,1],1) -> [1];
([2,0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0215 true

([2,3,3],2) -> [3];
([2,2,3],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([3],0) -> [3];
([3],1) -> [];
([0,1,0],1) -> [1,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0143 false

([0],0) -> [0];
([0,0,2],2) -> [2];
([3,3],1) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0238 true

([3,0,0],2) -> [0];
([0,1],3) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1)

0.0195 false

([1],0) -> [1];
([1,0],1) -> [0];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0180 false

([1],3) -> [];
([1,1],1) -> [1];
([2,0,1],2) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> Cons (1, Nil))

0.0225 false

([1],0) -> [1];
([2,2],1) -> [2];
([3,1,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0223 true

([2,3],2) -> [];
([3],3) -> [];
([0,3,2],0) -> [0,3,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0164 false

([1,1],0) -> [1,1];
([3,0,3],1) -> [0,3];
([2,2,2],2) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0261 true

([2,0,2],0) -> [2,0,2];
([2],0) -> [2];
([1,3,0],1) -> [3,0];
([3,3,3],2) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0335 true

([1,0],3) -> [];
([2,1],3) -> [];
([2],2) -> [];
([2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0002 false

([0,0],2) -> [];
([1],1) -> [];
([0,3,0],3) -> [];
([0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0002 false

([2,1],0) -> [2,1];
([1,1,3],1) -> [1,3];
([0,1,0],0) -> [0,1,0];
([2,2,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0287 true

([1],3) -> [];
([2,0,0],1) -> [0,0];
([2],1) -> [];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> Un_Cons (x . 0) . 1

0.0203 false

([2],3) -> [];
([1],2) -> [];
([0],3) -> [];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) = fun (x:list * nat) -> Nil

0.0002 false

([2,2],1) -> [2];
([3],3) -> [];
([0,0,2],3) -> [];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Nil
                     | S _ -> Un_Cons (x . 0) . 1)

0.0213 false

([3,3,1],2) -> [1];
([3,2],2) -> [];
([1,1],2) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> Un_Cons (Un_Cons (x . 0) . 1) . 1)

0.0173 false

([0],0) -> [0];
([3,3],0) -> [3,3];
([1,1],0) -> [1,1];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0180 false

([0,2,1],0) -> [0,2,1];
([0],1) -> [];
([3],3) -> [];
([1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0194 false

([0],2) -> [];
([3,0,3],1) -> [0,3];
([3,2,0],2) -> [0];
([2,0,2],1) -> [0,2];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0263 true

([3,3],0) -> [3,3];
([1],0) -> [1];
([0,1],0) -> [0,1];
([0,3,1],1) -> [3,1];
([0,3,2],1) -> [3,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0326 false

([3,3,1],2) -> [1];
([3,0,1],1) -> [0,1];
([2,2],2) -> [];
([2],2) -> [];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 0) . 1) . 0 with
                                    | O _ -> Un_Cons (x . 0) . 1
                                    | S _ -> Un_Cons (Un_Cons (x . 0) . 1) .
                                               1))

0.0271 false

([3],2) -> [];
([1,2,1],1) -> [2,1];
([2],0) -> [2];
([0,1],1) -> [1];
([1,1,0],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0241 true

([2,3,0],2) -> [0];
([1],3) -> [];
([2],3) -> [];
([1,3],1) -> [3];
([1,3],2) -> [];
 ([], 0) -> [];

=================================
None
([0,3,1],0) -> [0,3,1];
([1],1) -> [];
([0,1],3) -> [];
([0],2) -> [];
([1,3,0],1) -> [3,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0241 true

([3,2,1],1) -> [2,1];
([3],2) -> [];
([2],2) -> [];
([2,2],0) -> [2,2];
([1,0,1],0) -> [1,0,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0231 false

([0],1) -> [];
([0,2,0],2) -> [0];
([0,0],2) -> [];
([1,3],1) -> [3];
([2,1,3],2) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> (match Un_Cons (x . 0) . 0 with
                                    | O _ -> Un_Cons (Un_Cons (x . 0) . 1) .
                                               1
                                    | S _ -> Cons (3, Nil)))

0.0429 false

([2,0,1],0) -> [2,0,1];
([0],0) -> [0];
([3],2) -> [];
([3,3,0],3) -> [];
([1,1],0) -> [1,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0264 false

([1,2,1],0) -> [1,2,1];
([3,3,0],0) -> [3,3,0];
([1],1) -> [];
([3,3],3) -> [];
([3],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0255 false

([0],2) -> [];
([3,2,3],0) -> [3,2,3];
([2,2],0) -> [2,2];
([3,0],1) -> [0];
([3],1) -> [];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0266 false

([1],3) -> [];
([2,3],1) -> [3];
([1,2],0) -> [1,2];
([1,2,3],1) -> [2,3];
([1,1],2) -> [];
([3,0,2],2) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0297 true

([3,1,3],0) -> [3,1,3];
([1],0) -> [1];
([3,0],1) -> [0];
([2,0],3) -> [];
([2],3) -> [];
([0,0,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0269 true

([3,1,2],1) -> [1,2];
([1,0,2],1) -> [0,2];
([2,0,0],2) -> [0];
([2],3) -> [];
([0],1) -> [];
([2,1,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 0 with
                     | O _ -> Un_Cons (x . 0) . 1
                     | S _ -> (match Un_S (Un_Cons (x . 0) . 0) with
                                 | O _ -> Un_Cons (x . 0) . 1
                                 | S _ -> (match Un_Cons (x . 0) . 1 with
                                             | Nil _ -> Un_Cons (x . 0) . 1
                                             | Cons _ -> (match Un_Cons (
                                                                  Un_Cons (
                                                                    x . 0) .
                                                                    1)
                                                                  . 0 with
                                                            | O _ -> 
                                                              Un_Cons (
                                                                Un_Cons (
                                                                  x . 0) . 1)
                                                                . 1
                                                            | S _ -> (
                                                              match Un_S (
                                                                    Un_S (
                                                                    Un_Cons (
                                                                    x . 0) .
                                                                    0)) with
                                                                | O _ -> Nil
                                                                | S _ -> 
                                                                  Un_Cons (
                                                                    x . 0) .
                                                                    1)))))

0.0553 false

([0],1) -> [];
([0,0,2],0) -> [0,0,2];
([2,2],1) -> [2];
([3,2,3],1) -> [2,3];
([1,0],0) -> [1,0];
([0,0,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0289 true

([1,0,2],3) -> [];
([2,2,3],0) -> [2,2,3];
([0,1,1],2) -> [1];
([0,3,1],3) -> [];
([2],2) -> [];
([0,3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0334 true

([0,3],0) -> [0,3];
([2],1) -> [];
([2,0],1) -> [0];
([1],3) -> [];
([0],1) -> [];
([2,2,1],1) -> [2,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> Un_Cons (x . 0) . 1)

0.0267 false

([3,0],3) -> [];
([2],3) -> [];
([3,0],1) -> [0];
([1],3) -> [];
([3,0,3],3) -> [];
([0,1],1) -> [1];
 ([], 0) -> [];

=================================
None
([3,1,2],0) -> [3,1,2];
([2,1],2) -> [];
([1,2,0],0) -> [1,2,0];
([0,0,1],2) -> [1];
([0,3,0],0) -> [0,3,0];
([3,3,3],1) -> [3,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0382 true

([1],2) -> [];
([1,0,0],0) -> [1,0,0];
([3,3,0],0) -> [3,3,0];
([1,3],0) -> [1,3];
([3,0,3],3) -> [];
([2,2,0],0) -> [2,2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0352 false

([0,1,1],1) -> [1,1];
([2,3],3) -> [];
([1,1],1) -> [1];
([1,3],2) -> [];
([0,3,2],3) -> [];
([1,2],0) -> [1,2];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0282 true

([3,0],3) -> [];
([2],0) -> [2];
([1],1) -> [];
([1],0) -> [1];
([1],2) -> [];
([0,3,1],1) -> [3,1];
([3,2,0],1) -> [2,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0289 true

([0],3) -> [];
([3,2,0],0) -> [3,2,0];
([1,1],1) -> [1];
([2,2,0],3) -> [];
([1,3],1) -> [3];
([1,0,1],0) -> [1,0,1];
([0,1],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0407 true

([2,3],3) -> [];
([2],1) -> [];
([2],3) -> [];
([0],0) -> [0];
([0],1) -> [];
([1,0,3],2) -> [3];
([2,0,0],1) -> [0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0330 true

([0,3,2],0) -> [0,3,2];
([3,1],3) -> [];
([2,0,0],2) -> [0];
([1,0,0],3) -> [];
([0,2,1],1) -> [2,1];
([3,1,0],0) -> [3,1,0];
([0,0],0) -> [0,0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0371 true

([3,0],1) -> [0];
([2],3) -> [];
([2,3],3) -> [];
([3,3],0) -> [3,3];
([2,0],1) -> [0];
([1,0],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0278 true

([3,2],0) -> [3,2];
([2],3) -> [];
([2,3],3) -> [];
([0,0,1],2) -> [1];
([1],3) -> [];
([3,3],2) -> [];
([0,2,0],2) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0282 true

([0],3) -> [];
([3,1],0) -> [3,1];
([2],0) -> [2];
([0,1,3],1) -> [1,3];
([2,0,1],1) -> [0,1];
([3,0,1],3) -> [];
([3,2],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0327 true

([3],0) -> [3];
([2,3],3) -> [];
([3,1],0) -> [3,1];
([1,3],2) -> [];
([2],0) -> [2];
([1],1) -> [];
([2],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0288 false

([2,1],1) -> [1];
([1],3) -> [];
([3],3) -> [];
([3,3,3],2) -> [3];
([1],1) -> [];
([0],3) -> [];
([2,2],3) -> [];
 ([], 0) -> [];

=================================
None
([1],0) -> [1];
([3],1) -> [];
([0],3) -> [];
([1],3) -> [];
([2,2],2) -> [];
([1],1) -> [];
([0,1,2],3) -> [];
([1,1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0225 false

([1,2],2) -> [];
([0,1],3) -> [];
([2],3) -> [];
([0,1],0) -> [0,1];
([2,2,2],1) -> [2,2];
([3,2],1) -> [2];
([2],2) -> [];
([2],0) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0350 true

([3,1,2],3) -> [];
([2],1) -> [];
([3,2],2) -> [];
([1],0) -> [1];
([3,3,2],0) -> [3,3,2];
([3,3,0],0) -> [3,3,0];
([1,1],1) -> [1];
([2,0,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0396 true

([3],2) -> [];
([0,2,3],0) -> [0,2,3];
([1],1) -> [];
([3,3],3) -> [];
([2,2,3],3) -> [];
([1,1,0],1) -> [1,0];
([2,1,3],0) -> [2,1,3];
([1],0) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0357 true

([1,1,0],1) -> [1,0];
([1,1],2) -> [];
([2],0) -> [2];
([0],2) -> [];
([1,3,2],0) -> [1,3,2];
([3],0) -> [3];
([2,3,3],3) -> [];
([3,0,3],1) -> [0,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0360 true

([2,0,2],3) -> [];
([3,1,1],2) -> [1];
([3],1) -> [];
([1],1) -> [];
([3,2],2) -> [];
([3,0,0],1) -> [0,0];
([3,3,3],1) -> [3,3];
([3,1],0) -> [3,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0392 true

([2],3) -> [];
([2,0,0],2) -> [0];
([3,3],1) -> [3];
([1],1) -> [];
([3,2],3) -> [];
([1,2,3],3) -> [];
([3,2,2],3) -> [];
([3],2) -> [];
 ([], 0) -> [];

=================================
None
([2],1) -> [];
([3,2],0) -> [3,2];
([1,2,2],3) -> [];
([0],2) -> [];
([1],2) -> [];
([1],3) -> [];
([3,3],0) -> [3,3];
([2,1],0) -> [2,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0322 false

([0],0) -> [0];
([0,1],0) -> [0,1];
([2],1) -> [];
([2,2,1],3) -> [];
([1],0) -> [1];
([2],0) -> [2];
([1,2],3) -> [];
([0],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0283 false

([3,2,3],0) -> [3,2,3];
([3,1,2],2) -> [2];
([0,1,1],1) -> [1,1];
([3],0) -> [3];
([2,1],3) -> [];
([0,2,3],2) -> [3];
([3],2) -> [];
([2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0475 true

([1,0],2) -> [];
([3,2,3],1) -> [2,3];
([1,1],1) -> [1];
([0,2,1],1) -> [2,1];
([1,0],1) -> [0];
([0,2,3],2) -> [3];
([1],2) -> [];
([2,0,1],3) -> [];
([3,1],2) -> [];
 ([], 0) -> [];

=================================
None
([0,0],3) -> [];
([2,3,3],0) -> [2,3,3];
([3,3],2) -> [];
([0,0],2) -> [];
([3,2],0) -> [3,2];
([1,3,3],1) -> [3,3];
([2],1) -> [];
([3],0) -> [3];
([0,3,3],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0447 true

([2],0) -> [2];
([2,0,3],0) -> [2,0,3];
([3,2,0],3) -> [];
([2,3],0) -> [2,3];
([2,0,3],3) -> [];
([0,1],2) -> [];
([1,3,3],3) -> [];
([3],0) -> [3];
([0],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) -> match x . 1 with
                          | O _ -> x . 0
                          | S _ -> Nil

0.0349 false

([2],1) -> [];
([0,0],3) -> [];
([1,1,2],3) -> [];
([1,0,0],3) -> [];
([2],2) -> [];
([1,0,0],2) -> [0];
([3],0) -> [3];
([3,1,0],2) -> [0];
([3,1],1) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0369 true

([0,3,1],0) -> [0,3,1];
([2,2],0) -> [2,2];
([1,2],1) -> [2];
([1,2,1],3) -> [];
([2,1,1],3) -> [];
([1,1],2) -> [];
([1,1],3) -> [];
([0,0,1],3) -> [];
([3,1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0374 true

([0,1,2],2) -> [2];
([2,0,1],1) -> [0,1];
([2],1) -> [];
([3],2) -> [];
([1,0,3],2) -> [3];
([2],3) -> [];
([2,0],2) -> [];
([0,3],1) -> [3];
([3,0,3],1) -> [0,3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> Un_Cons (x . 0) . 1
                     | Cons _ -> (match Un_Cons (x . 0) . 0 with
                                    | O _ -> (match Un_Cons (Un_Cons (x . 0)
                                                               . 1)
                                                      . 1 with
                                                | Nil _ -> Un_Cons (x . 0) .
                                                             1
                                                | Cons _ -> Un_Cons (
                                                              Un_Cons (x . 0)
                                                                . 1)
                                                              . 1)
                                    | S _ -> (match Un_Cons (Un_Cons (x . 0)
                                                               . 1)
                                                      . 1 with
                                                | Nil _ -> Un_Cons (Un_Cons (
                                                                    x . 0) .
                                                                    1)
                                                             . 1
                                                | Cons _ -> (match Un_S (
                                                                    Un_Cons (
                                                                    x . 0) .
                                                                    0) with
                                                               | O _ -> 
                                                                 Un_Cons (
                                                                   Un_Cons (
                                                                    x . 0) .
                                                                    1)
                                                                   . 1
                                                               | S _ -> 
                                                                 Un_Cons (
                                                                   x . 0) . 1))))

0.3001 false

([2],0) -> [2];
([2],1) -> [];
([1],2) -> [];
([3,2,1],2) -> [1];
([0,0],2) -> [];
([3,3,3],1) -> [3,3];
([1],1) -> [];
([3],0) -> [3];
([0],0) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0371 true

([1],3) -> [];
([1,3,0],3) -> [];
([1],1) -> [];
([3,0,3],2) -> [3];
([2],3) -> [];
([2],2) -> [];
([0,1],2) -> [];
([0,0,1],3) -> [];
([0,1],1) -> [1];
 ([], 0) -> [];

=================================
None
([2,3,2],3) -> [];
([2],1) -> [];
([2,1,0],2) -> [0];
([3,1,3],0) -> [3,1,3];
([0,2],0) -> [0,2];
([3,1,2],0) -> [3,1,2];
([2,3],0) -> [2,3];
([1],1) -> [];
([3],0) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0432 true

([0,1],2) -> [];
([0,1],0) -> [0,1];
([0],2) -> [];
([2,3,1],1) -> [3,1];
([1,0,2],2) -> [2];
([2,1,2],3) -> [];
([1],0) -> [1];
([0],1) -> [];
([1,1],0) -> [1,1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0382 true

([3,3],1) -> [3];
([3,1],2) -> [];
([0,0,1],1) -> [0,1];
([1,1],0) -> [1,1];
([1],3) -> [];
([1,2,3],0) -> [1,2,3];
([2,0],1) -> [0];
([2,1,3],2) -> [3];
([0,2],0) -> [0,2];
([0,0,2],0) -> [0,0,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0490 true

([1,2],2) -> [];
([0,3,2],1) -> [3,2];
([1],3) -> [];
([3,0],2) -> [];
([2,1,3],3) -> [];
([3,1],1) -> [1];
([3,3],0) -> [3,3];
([3],2) -> [];
([2,2],3) -> [];
([1],1) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0396 true

([3,3,2],2) -> [2];
([1],2) -> [];
([3,1,3],3) -> [];
([0],3) -> [];
([1,1,1],0) -> [1,1,1];
([0],0) -> [0];
([0,3,0],1) -> [3,0];
([1,0,1],1) -> [0,1];
([1,0,3],0) -> [1,0,3];
([3,2,2],0) -> [3,2,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0524 true

([0,3,0],3) -> [];
([0,1],2) -> [];
([0],3) -> [];
([2,3,1],1) -> [3,1];
([3,3,2],0) -> [3,3,2];
([1,3,2],3) -> [];
([0,2],1) -> [2];
([1,2,1],1) -> [2,1];
([2,0,1],2) -> [1];
([2,2,0],2) -> [0];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0455 true

([0,0],1) -> [0];
([2,1,2],2) -> [2];
([2],1) -> [];
([0,0],2) -> [];
([3],3) -> [];
([0,2,2],1) -> [2,2];
([0],2) -> [];
([2,3],2) -> [];
([2],0) -> [2];
([1,1],2) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0403 true

([1,2,2],2) -> [2];
([1,1],0) -> [1,1];
([2,2],3) -> [];
([2,1],0) -> [2,1];
([0,0],1) -> [0];
([2,3],2) -> [];
([1,1,1],0) -> [1,1,1];
([1,0,0],1) -> [0,0];
([2],0) -> [2];
([0,3,2],0) -> [0,3,2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0580 true

([3],2) -> [];
([3,2,2],2) -> [2];
([0],3) -> [];
([1,1,1],1) -> [1,1];
([3,3,1],3) -> [];
([0,2],0) -> [0,2];
([3,2,1],0) -> [3,2,1];
([1,0],1) -> [0];
([0,1],3) -> [];
([0,1,2],3) -> [];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0422 true

([1,2,3],1) -> [2,3];
([3,3],1) -> [3];
([3],1) -> [];
([2,2],3) -> [];
([2],3) -> [];
([3,0],0) -> [3,0];
([0,0],1) -> [0];
([3],3) -> [];
([3,0,3],0) -> [3,0,3];
([3,1,2],2) -> [2];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0523 true

([3,2,2],0) -> [3,2,2];
([1,3],3) -> [];
([0,3],2) -> [];
([2,1],2) -> [];
([1,1,3],0) -> [1,1,3];
([1,3],2) -> [];
([1,2,1],1) -> [2,1];
([2,1,0],0) -> [2,1,0];
([0,0],2) -> [];
([2,3],1) -> [3];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0517 true

([2,3],3) -> [];
([2,1,3],1) -> [1,3];
([1],1) -> [];
([3],0) -> [3];
([2],3) -> [];
([2,3],1) -> [3];
([3,0,0],2) -> [0];
([1,0,2],2) -> [2];
([0],1) -> [];
([1,3,1],2) -> [1];
 ([], 0) -> [];

=================================
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match x . 1 with
                     | O _ -> x . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))

0.0467 true

