(0,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0010 false

(3,0) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0012 false

(2,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0014 false

(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0003 false

(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0010 false

(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0010 false

(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0011 false

(1,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0011 false

(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0010 false

(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0003 false

(0,1) -> 1;
(1,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0012 false

(1,0) -> 1;
(2,0) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0013 false

(0,1) -> 1;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0011 false

(0,0) -> 0;
(1,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0012 false

(2,0) -> 2;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.0883 false

(2,1) -> 2;
(1,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1716 true

(3,3) -> 3;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0014 false

(1,2) -> 2;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 0
                         | S _ -> 2

0.1161 false

(1,2) -> 2;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 0
                         | S _ -> 2

0.1294 false

(3,2) -> 3;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1436 false

(2,0) -> 2;
(2,3) -> 3;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.1617 false

(3,0) -> 3;
(3,2) -> 3;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0017 false

(1,0) -> 1;
(1,3) -> 3;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.1525 false

(3,3) -> 3;
(2,3) -> 3;
(3,2) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 0
                         | S _ -> 3

0.1884 false

(0,2) -> 2;
(2,3) -> 3;
(1,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0017 false

(0,2) -> 2;
(2,1) -> 2;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1302 false

(3,2) -> 3;
(3,3) -> 3;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0016 false

(3,0) -> 3;
(3,1) -> 3;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0015 false

(1,0) -> 1;
(3,3) -> 3;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1962 false

(1,3) -> 3;
(2,3) -> 3;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0015 false

(3,0) -> 3;
(3,1) -> 3;
(2,0) -> 2;
(0,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1738 false

(1,0) -> 1;
(2,2) -> 2;
(1,2) -> 2;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1862 true

(3,2) -> 3;
(0,3) -> 3;
(3,3) -> 3;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2141 false

(0,3) -> 3;
(2,2) -> 2;
(3,3) -> 3;
(2,0) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2301 false

(2,3) -> 3;
(0,2) -> 2;
(0,0) -> 0;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1842 true

(1,3) -> 3;
(1,2) -> 2;
(0,2) -> 2;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0022 false

(0,1) -> 1;
(1,0) -> 1;
(1,3) -> 3;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.1016 false

(1,1) -> 1;
(3,3) -> 3;
(0,2) -> 2;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1723 false

(3,2) -> 3;
(1,3) -> 3;
(1,1) -> 1;
(2,0) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2193 true

(1,0) -> 1;
(2,1) -> 2;
(3,0) -> 3;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0023 false

(0,1) -> 1;
(0,2) -> 2;
(3,3) -> 3;
(1,2) -> 2;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2319 true

(0,3) -> 3;
(1,1) -> 1;
(1,3) -> 3;
(3,3) -> 3;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2102 true

(1,1) -> 1;
(0,2) -> 2;
(1,3) -> 3;
(2,2) -> 2;
(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0022 false

(3,1) -> 3;
(0,0) -> 0;
(1,0) -> 1;
(2,1) -> 2;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1051 false

(1,1) -> 1;
(3,1) -> 3;
(2,1) -> 2;
(0,2) -> 2;
(1,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1810 true

(1,1) -> 1;
(3,3) -> 3;
(2,2) -> 2;
(1,3) -> 3;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 1

0.0026 false

(1,3) -> 3;
(3,2) -> 3;
(0,2) -> 2;
(0,1) -> 1;
(0,0) -> 0;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> 3

0.2137 false

(2,2) -> 2;
(1,1) -> 1;
(0,1) -> 1;
(3,0) -> 3;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2160 false

(1,2) -> 2;
(3,2) -> 3;
(1,0) -> 1;
(0,0) -> 0;
(0,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1840 true

(0,0) -> 0;
(2,3) -> 3;
(1,3) -> 3;
(0,2) -> 2;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1960 true

(1,3) -> 3;
(2,3) -> 3;
(0,3) -> 3;
(2,0) -> 2;
(2,2) -> 2;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.1931 false

(2,2) -> 2;
(0,0) -> 0;
(3,3) -> 3;
(0,2) -> 2;
(3,1) -> 3;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2072 false

(2,2) -> 2;
(0,2) -> 2;
(2,3) -> 3;
(1,2) -> 2;
(0,3) -> 3;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2626 true

(3,1) -> 3;
(1,3) -> 3;
(1,1) -> 1;
(0,2) -> 2;
(0,0) -> 0;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2466 true

(2,0) -> 2;
(3,2) -> 3;
(0,0) -> 0;
(2,2) -> 2;
(0,3) -> 3;
(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.3238 false

(2,2) -> 2;
(3,2) -> 3;
(0,1) -> 1;
(3,0) -> 3;
(3,3) -> 3;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2633 false

(3,2) -> 3;
(3,3) -> 3;
(2,3) -> 3;
(2,2) -> 2;
(1,0) -> 1;
(3,0) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2861 true

(0,0) -> 0;
(1,0) -> 1;
(3,1) -> 3;
(3,0) -> 3;
(2,1) -> 2;
(3,2) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0050 false

(2,2) -> 2;
(3,3) -> 3;
(3,1) -> 3;
(2,1) -> 2;
(3,2) -> 3;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2712 false

(2,1) -> 2;
(0,3) -> 3;
(2,2) -> 2;
(1,2) -> 2;
(3,0) -> 3;
(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.3085 true

(0,2) -> 2;
(2,2) -> 2;
(0,3) -> 3;
(0,0) -> 0;
(1,3) -> 3;
(1,2) -> 2;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2411 true

(0,3) -> 3;
(1,3) -> 3;
(3,2) -> 3;
(1,1) -> 1;
(2,2) -> 2;
(2,3) -> 3;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2857 true

(3,2) -> 3;
(2,2) -> 2;
(0,2) -> 2;
(3,3) -> 3;
(2,3) -> 3;
(3,1) -> 3;
(2,0) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2553 true

(2,0) -> 2;
(2,1) -> 2;
(0,1) -> 1;
(1,1) -> 1;
(0,2) -> 2;
(1,2) -> 2;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1948 true

(0,0) -> 0;
(2,1) -> 2;
(3,1) -> 3;
(1,0) -> 1;
(2,0) -> 2;
(0,2) -> 2;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.1877 false

(2,2) -> 2;
(2,0) -> 2;
(3,3) -> 3;
(1,2) -> 2;
(0,2) -> 2;
(2,3) -> 3;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.2340 false

(3,3) -> 3;
(2,2) -> 2;
(0,3) -> 3;
(3,2) -> 3;
(1,0) -> 1;
(2,1) -> 2;
(3,0) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2397 false

(2,1) -> 2;
(2,3) -> 3;
(3,0) -> 3;
(1,3) -> 3;
(0,1) -> 1;
(0,3) -> 3;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2178 true

(2,0) -> 2;
(0,3) -> 3;
(2,1) -> 2;
(0,0) -> 0;
(3,1) -> 3;
(1,2) -> 2;
(2,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2231 true

(3,0) -> 3;
(3,3) -> 3;
(1,0) -> 1;
(0,2) -> 2;
(1,1) -> 1;
(0,0) -> 0;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2056 false

(2,0) -> 2;
(2,1) -> 2;
(3,3) -> 3;
(3,2) -> 3;
(3,0) -> 3;
(2,2) -> 2;
(0,0) -> 0;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) = fun (x:nat * nat) -> x . 0

0.0033 false

(1,1) -> 1;
(2,1) -> 2;
(3,1) -> 3;
(0,2) -> 2;
(2,0) -> 2;
(1,3) -> 3;
(1,0) -> 1;
(0,0) -> 0;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2453 true

(1,3) -> 3;
(1,0) -> 1;
(0,3) -> 3;
(2,0) -> 2;
(3,2) -> 3;
(2,1) -> 2;
(2,3) -> 3;
(2,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2345 true

(3,1) -> 3;
(2,2) -> 2;
(1,2) -> 2;
(2,3) -> 3;
(1,3) -> 3;
(0,1) -> 1;
(0,3) -> 3;
(3,2) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2312 true

(3,2) -> 3;
(1,2) -> 2;
(0,3) -> 3;
(1,0) -> 1;
(2,3) -> 3;
(2,0) -> 2;
(1,3) -> 3;
(3,0) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2563 true

(2,2) -> 2;
(3,1) -> 3;
(2,1) -> 2;
(0,2) -> 2;
(3,0) -> 3;
(1,1) -> 1;
(1,2) -> 2;
(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2537 true

(2,3) -> 3;
(0,1) -> 1;
(3,3) -> 3;
(0,3) -> 3;
(1,1) -> 1;
(1,3) -> 3;
(2,1) -> 2;
(1,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2507 true

(2,1) -> 2;
(3,1) -> 3;
(3,3) -> 3;
(0,2) -> 2;
(1,1) -> 1;
(2,3) -> 3;
(3,2) -> 3;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2590 true

(1,3) -> 3;
(2,0) -> 2;
(0,2) -> 2;
(2,1) -> 2;
(3,1) -> 3;
(3,3) -> 3;
(1,1) -> 1;
(3,0) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2510 true

(2,2) -> 2;
(0,1) -> 1;
(1,0) -> 1;
(2,3) -> 3;
(1,3) -> 3;
(2,1) -> 2;
(0,2) -> 2;
(0,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.1946 true

(0,1) -> 1;
(2,1) -> 2;
(1,3) -> 3;
(1,1) -> 1;
(0,0) -> 0;
(3,1) -> 3;
(2,3) -> 3;
(3,0) -> 3;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2661 true

(3,0) -> 3;
(2,1) -> 2;
(0,3) -> 3;
(3,3) -> 3;
(0,2) -> 2;
(0,0) -> 0;
(2,0) -> 2;
(1,3) -> 3;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2341 true

(0,1) -> 1;
(2,2) -> 2;
(3,3) -> 3;
(1,0) -> 1;
(3,1) -> 3;
(0,0) -> 0;
(0,3) -> 3;
(3,0) -> 3;
(1,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 0 with
                         | O _ -> x . 1
                         | S _ -> x . 0

0.2283 false

(2,3) -> 3;
(0,3) -> 3;
(0,2) -> 2;
(1,0) -> 1;
(3,0) -> 3;
(2,0) -> 2;
(2,2) -> 2;
(2,1) -> 2;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2431 true

(2,0) -> 2;
(3,3) -> 3;
(2,1) -> 2;
(0,3) -> 3;
(2,2) -> 2;
(3,2) -> 3;
(0,1) -> 1;
(0,2) -> 2;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2548 true

(2,1) -> 2;
(3,2) -> 3;
(0,3) -> 3;
(1,0) -> 1;
(1,1) -> 1;
(3,3) -> 3;
(0,0) -> 0;
(2,2) -> 2;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2353 true

(1,1) -> 1;
(2,2) -> 2;
(2,3) -> 3;
(0,3) -> 3;
(3,1) -> 3;
(0,0) -> 0;
(1,3) -> 3;
(2,1) -> 2;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2631 true

(0,2) -> 2;
(1,3) -> 3;
(3,0) -> 3;
(2,2) -> 2;
(3,1) -> 3;
(0,1) -> 1;
(1,0) -> 1;
(0,0) -> 0;
(3,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.7281 true

(0,1) -> 1;
(3,2) -> 3;
(0,0) -> 0;
(0,3) -> 3;
(1,2) -> 2;
(1,3) -> 3;
(3,0) -> 3;
(3,1) -> 3;
(2,3) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2676 true

(2,2) -> 2;
(0,0) -> 0;
(0,2) -> 2;
(3,0) -> 3;
(1,2) -> 2;
(3,1) -> 3;
(3,3) -> 3;
(2,0) -> 2;
(1,0) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2507 true

(0,1) -> 1;
(0,3) -> 3;
(2,3) -> 3;
(1,3) -> 3;
(1,2) -> 2;
(3,3) -> 3;
(1,1) -> 1;
(0,0) -> 0;
(3,0) -> 3;
(0,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) -> match x . 1 with
                         | O _ -> x . 0
                         | S _ -> x . 1

0.2593 false

(1,1) -> 1;
(0,0) -> 0;
(0,1) -> 1;
(3,2) -> 3;
(0,3) -> 3;
(2,0) -> 2;
(1,2) -> 2;
(3,1) -> 3;
(1,3) -> 3;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2741 true

(0,0) -> 0;
(0,2) -> 2;
(2,1) -> 2;
(0,3) -> 3;
(3,2) -> 3;
(2,3) -> 3;
(1,3) -> 3;
(3,3) -> 3;
(0,1) -> 1;
(1,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.3216 true

(3,2) -> 3;
(3,1) -> 3;
(2,1) -> 2;
(2,3) -> 3;
(3,3) -> 3;
(1,2) -> 2;
(1,0) -> 1;
(0,0) -> 0;
(0,1) -> 1;
(2,0) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2624 true

(1,1) -> 1;
(0,1) -> 1;
(2,0) -> 2;
(3,2) -> 3;
(2,3) -> 3;
(2,1) -> 2;
(2,2) -> 2;
(3,3) -> 3;
(0,3) -> 3;
(1,2) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2613 true

(3,2) -> 3;
(3,1) -> 3;
(2,3) -> 3;
(0,2) -> 2;
(1,3) -> 3;
(2,1) -> 2;
(2,0) -> 2;
(1,0) -> 1;
(1,1) -> 1;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2653 true

(2,1) -> 2;
(1,0) -> 1;
(3,2) -> 3;
(1,1) -> 1;
(2,3) -> 3;
(0,3) -> 3;
(2,0) -> 2;
(3,3) -> 3;
(3,1) -> 3;
(0,0) -> 0;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2597 true

(3,2) -> 3;
(1,0) -> 1;
(0,2) -> 2;
(1,3) -> 3;
(0,3) -> 3;
(0,0) -> 0;
(0,1) -> 1;
(1,2) -> 2;
(2,3) -> 3;
(3,1) -> 3;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 1
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2482 true

(2,2) -> 2;
(1,2) -> 2;
(3,0) -> 3;
(1,0) -> 1;
(3,3) -> 3;
(2,3) -> 3;
(0,3) -> 3;
(0,2) -> 2;
(3,2) -> 3;
(2,1) -> 2;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2573 true

(2,3) -> 3;
(1,1) -> 1;
(0,3) -> 3;
(1,0) -> 1;
(3,2) -> 3;
(1,2) -> 2;
(0,2) -> 2;
(2,0) -> 2;
(0,0) -> 0;
(0,1) -> 1;
(0, 0) -> 0;

=================================
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 0) (x . 1) with
      | EQ _ -> x . 0
      | GT _ -> x . 0
      | LT _ -> x . 1

0.2590 true

