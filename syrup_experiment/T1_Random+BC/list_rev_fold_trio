[0,2,1] -> [1,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0023 true

[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0025 true

[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0013 false

[1,1,0] -> [0,1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0023 true

[0,1,0] -> [0,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0021 false

[3,0] -> [0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0022 true

[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0022 false

[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0022 true

[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0015 false

[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0014 false

[1] -> [1];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0025 false

[1] -> [1];
[3,1,0] -> [0,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0028 true

[3,1] -> [1,3];
[2,2,2] -> [2,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0033 true

[0] -> [0];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0019 false

[2] -> [2];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0023 false

[2,0] -> [0,2];
[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0029 true

[2,0] -> [0,2];
[0,3,2] -> [2,3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0028 true

[3,1,2] -> [2,1,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0030 true

[1,1,0] -> [0,1,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0027 true

[0,1,0] -> [0,1,0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0029 false

[1,3,3] -> [3,3,1];
[1,0] -> [0,1];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0043 true

[1] -> [1];
[0,1] -> [1,0];
[2,0,0] -> [0,0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0036 true

[1,2,3] -> [3,2,1];
[2] -> [2];
[1,0,3] -> [3,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0043 true

[0,0] -> [0,0];
[3] -> [3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0027 false

[1,0,0] -> [0,0,1];
[3,0] -> [0,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0035 true

[3] -> [3];
[3,2,1] -> [1,2,3];
[2,2,2] -> [2,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0045 true

[3,3] -> [3,3];
[0,2,3] -> [3,2,0];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0039 true

[0,3,1] -> [1,3,0];
[0,0] -> [0,0];
[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0035 true

[1] -> [1];
[0] -> [0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0024 false

[1,0] -> [0,1];
[1,3,2] -> [2,3,1];
[1,3] -> [3,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0035 true

[3] -> [3];
[1,2,1] -> [1,2,1];
[3,3,3] -> [3,3,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0049 false

[0,2,1] -> [1,2,0];
[3,2] -> [2,3];
[0,3,1] -> [1,3,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0060 true

[2] -> [2];
[1,1] -> [1,1];
[2,3] -> [3,2];
[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0046 true

[1,3,1] -> [1,3,1];
[0,1,1] -> [1,1,0];
[2] -> [2];
[0,0,1] -> [1,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0056 true

[1,0] -> [0,1];
[3,2,3] -> [3,2,3];
[2,1] -> [1,2];
[2,1,1] -> [1,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0059 true

[2,1,0] -> [0,1,2];
[0,0] -> [0,0];
[0] -> [0];
[3,2,0] -> [0,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0047 true

[3] -> [3];
[2,3] -> [3,2];
[2,0,0] -> [0,0,2];
[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0063 true

[1,1] -> [1,1];
[3,2] -> [2,3];
[2,0] -> [0,2];
[2,0,2] -> [2,0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0057 true

[0,2,0] -> [0,2,0];
[0] -> [0];
[1,0] -> [0,1];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0038 true

[3] -> [3];
[0,2] -> [2,0];
[1] -> [1];
[3,2,3] -> [3,2,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0049 true

[3,1,3] -> [3,1,3];
[0] -> [0];
[2] -> [2];
[1] -> [1];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> x

0.0063 false

[3,1] -> [1,3];
[2,0,2] -> [2,0,2];
[2,1,2] -> [2,1,2];
[3,2,1] -> [1,2,3];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0069 true

[3,0,3] -> [3,0,3];
[0,0] -> [0,0];
[2,0] -> [0,2];
[2,1] -> [1,2];
[3,3,0] -> [0,3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0073 true

[1] -> [1];
[1,2,1] -> [1,2,1];
[3,3,3] -> [3,3,3];
[2,1] -> [1,2];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0067 true

[2,1,2] -> [2,1,2];
[0] -> [0];
[1,2] -> [2,1];
[0,0,0] -> [0,0,0];
[0,1,2] -> [2,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0069 true

[1] -> [1];
[1,0,0] -> [0,0,1];
[0,2] -> [2,0];
[3,0] -> [0,3];
[1,1,3] -> [3,1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0070 true

[1,3,3] -> [3,3,1];
[3,3] -> [3,3];
[1] -> [1];
[1,0,0] -> [0,0,1];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0067 true

[3,2,2] -> [2,2,3];
[0,3] -> [3,0];
[3,3,1] -> [1,3,3];
[0,1] -> [1,0];
[2,2,3] -> [3,2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0080 true

[2,3,0] -> [0,3,2];
[0,2] -> [2,0];
[0,1] -> [1,0];
[0,0] -> [0,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0062 true

[3] -> [3];
[0,1,2] -> [2,1,0];
[2,1] -> [1,2];
[0] -> [0];
[3,1,0] -> [0,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0062 true

[2] -> [2];
[2,1] -> [1,2];
[0,2] -> [2,0];
[2,3] -> [3,2];
[0,1] -> [1,0];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0093 true

[3,0,2] -> [2,0,3];
[1,3,1] -> [1,3,1];
[3,2] -> [2,3];
[3,3] -> [3,3];
[1] -> [1];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0098 true

[2,0] -> [0,2];
[0] -> [0];
[1] -> [1];
[3,0,3] -> [3,0,3];
[1,2,2] -> [2,2,1];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0086 true

[1,2] -> [2,1];
[0,0,0] -> [0,0,0];
[1] -> [1];
[0,0] -> [0,0];
[2] -> [2];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0059 true

[1] -> [1];
[1,3,3] -> [3,3,1];
[0,0] -> [0,0];
[3,1] -> [1,3];
[2] -> [2];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0074 true

[1,0] -> [0,1];
[3,3,2] -> [2,3,3];
[2,1,0] -> [0,1,2];
[3] -> [3];
[3,0,1] -> [1,0,3];
[1,0,1] -> [1,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0086 true

[3] -> [3];
[0,1] -> [1,0];
[1,2,3] -> [3,2,1];
[2,3] -> [3,2];
[2,0] -> [0,2];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0080 true

[0,2,2] -> [2,2,0];
[3,1] -> [1,3];
[3,2,2] -> [2,2,3];
[1,1,0] -> [0,1,1];
[1,2,1] -> [1,2,1];
[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0089 true

[0,3] -> [3,0];
[2,2] -> [2,2];
[1,3,0] -> [0,3,1];
[0,1] -> [1,0];
[1,2] -> [2,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0076 true

[0] -> [0];
[2,0] -> [0,2];
[1,3,2] -> [2,3,1];
[2] -> [2];
[0,3,2] -> [2,3,0];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0069 true

[3,3,3] -> [3,3,3];
[1,3,0] -> [0,3,1];
[1,2,0] -> [0,2,1];
[0] -> [0];
[2,2] -> [2,2];
[1,3] -> [3,1];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0108 true

[3,1,0] -> [0,1,3];
[1,0] -> [0,1];
[2] -> [2];
[0,3] -> [3,0];
[2,2,2] -> [2,2,2];
[2,1,1] -> [1,1,2];
[3,3,3] -> [3,3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0129 true

[3,1] -> [1,3];
[0,2] -> [2,0];
[2] -> [2];
[2,3,3] -> [3,3,2];
[3,0] -> [0,3];
[3,3] -> [3,3];
[0,0,3] -> [3,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0123 true

[3] -> [3];
[2,0] -> [0,2];
[3,0,3] -> [3,0,3];
[0,3,2] -> [2,3,0];
[1,3] -> [3,1];
[2] -> [2];
[1,0] -> [0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0105 true

[3,0] -> [0,3];
[0] -> [0];
[2,0,0] -> [0,0,2];
[1,1,1] -> [1,1,1];
[2,0] -> [0,2];
[3] -> [3];
[0,0,1] -> [1,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0086 true

[3,2,0] -> [0,2,3];
[3,0] -> [0,3];
[3] -> [3];
[0,1] -> [1,0];
[0,2,1] -> [1,2,0];
[3,1] -> [1,3];
[2,1,2] -> [2,1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0124 true

[2,2] -> [2,2];
[2,3,1] -> [1,3,2];
[0,1] -> [1,0];
[3] -> [3];
[3,3] -> [3,3];
[1,1] -> [1,1];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0103 true

[3] -> [3];
[1,1] -> [1,1];
[2] -> [2];
[1,1,0] -> [0,1,1];
[0,0] -> [0,0];
[2,3,1] -> [1,3,2];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0085 true

[2] -> [2];
[3,2,0] -> [0,2,3];
[1,3] -> [3,1];
[3] -> [3];
[1] -> [1];
[0] -> [0];
[0,2,2] -> [2,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0088 true

[1] -> [1];
[3] -> [3];
[2,1] -> [1,2];
[0,3] -> [3,0];
[0] -> [0];
[0,2,0] -> [0,2,0];
[2] -> [2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0074 true

[1,0,0] -> [0,0,1];
[2] -> [2];
[3,2,1] -> [1,2,3];
[0,1] -> [1,0];
[3,1,3] -> [3,1,3];
[1,2] -> [2,1];
[3,2] -> [2,3];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0109 true

[1,0] -> [0,1];
[1] -> [1];
[0,2,0] -> [0,2,0];
[2] -> [2];
[0,1,2] -> [2,1,0];
[2,0] -> [0,2];
[0] -> [0];
[0,1,3] -> [3,1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0093 true

[2,3] -> [3,2];
[3] -> [3];
[1,0] -> [0,1];
[0,3] -> [3,0];
[3,1] -> [1,3];
[1] -> [1];
[1,3,2] -> [2,3,1];
[0,2,2] -> [2,2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0114 true

[3] -> [3];
[3,1,2] -> [2,1,3];
[2,2] -> [2,2];
[2] -> [2];
[1,2,2] -> [2,2,1];
[3,1,1] -> [1,1,3];
[0] -> [0];
[2,1] -> [1,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0126 true

[2,3] -> [3,2];
[0] -> [0];
[3,3] -> [3,3];
[1,1] -> [1,1];
[0,1] -> [1,0];
[3,1] -> [1,3];
[1,3] -> [3,1];
[0,2] -> [2,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0107 true

[1] -> [1];
[0,3] -> [3,0];
[2,1] -> [1,2];
[0,1,1] -> [1,1,0];
[3,2] -> [2,3];
[3] -> [3];
[0,3,0] -> [0,3,0];
[3,1,2] -> [2,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0113 true

[1] -> [1];
[0,1,1] -> [1,1,0];
[1,1] -> [1,1];
[3] -> [3];
[1,2] -> [2,1];
[3,3,3] -> [3,3,3];
[0] -> [0];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0115 true

[2,2,1] -> [1,2,2];
[2,0] -> [0,2];
[2,3] -> [3,2];
[2,1] -> [1,2];
[1] -> [1];
[2] -> [2];
[3,1] -> [1,3];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0109 true

[0] -> [0];
[2,1] -> [1,2];
[2,0] -> [0,2];
[1,3,3] -> [3,3,1];
[3,2,0] -> [0,2,3];
[1] -> [1];
[0,3] -> [3,0];
[3] -> [3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0115 true

[1,1,2] -> [2,1,1];
[0,0,1] -> [1,0,0];
[0,0,0] -> [0,0,0];
[3,3,0] -> [0,3,3];
[3,3] -> [3,3];
[3,0] -> [0,3];
[0,0,2] -> [2,0,0];
[1,0,3] -> [3,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0157 true

[0] -> [0];
[1] -> [1];
[0,3,0] -> [0,3,0];
[3,1,0] -> [0,1,3];
[3] -> [3];
[2,0,3] -> [3,0,2];
[2] -> [2];
[0,1] -> [1,0];
[0,3] -> [3,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0132 true

[3,2] -> [2,3];
[1] -> [1];
[0] -> [0];
[0,3] -> [3,0];
[3] -> [3];
[1,2,3] -> [3,2,1];
[1,3,0] -> [0,3,1];
[2,2,3] -> [3,2,2];
[2,3] -> [3,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0137 true

[0,3] -> [3,0];
[1] -> [1];
[3,1] -> [1,3];
[0,2,3] -> [3,2,0];
[3,2,0] -> [0,2,3];
[0] -> [0];
[0,3,1] -> [1,3,0];
[0,0] -> [0,0];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0136 true

[3,1,1] -> [1,1,3];
[1,0] -> [0,1];
[3,0] -> [0,3];
[3] -> [3];
[2,2] -> [2,2];
[2,0,2] -> [2,0,2];
[1,0,3] -> [3,0,1];
[1,2] -> [2,1];
[3,3] -> [3,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0161 true

[0,2] -> [2,0];
[0] -> [0];
[2,1,1] -> [1,1,2];
[3,3,2] -> [2,3,3];
[3] -> [3];
[2] -> [2];
[1] -> [1];
[1,2,2] -> [2,2,1];
[2,2] -> [2,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0137 true

[0,2,3] -> [3,2,0];
[3,0,0] -> [0,0,3];
[3] -> [3];
[0,0,2] -> [2,0,0];
[0] -> [0];
[1] -> [1];
[3,1] -> [1,3];
[2,0,2] -> [2,0,2];
[0,0] -> [0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0133 true

[3,2,0] -> [0,2,3];
[0,3,0] -> [0,3,0];
[1] -> [1];
[2] -> [2];
[3] -> [3];
[0,1,0] -> [0,1,0];
[1,0] -> [0,1];
[2,3,2] -> [2,3,2];
[3,1] -> [1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0115 true

[1,0] -> [0,1];
[2] -> [2];
[1,0,2] -> [2,0,1];
[2,1] -> [1,2];
[2,3,0] -> [0,3,2];
[0] -> [0];
[3,2,1] -> [1,2,3];
[1,1,3] -> [3,1,1];
[0,0,0] -> [0,0,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0136 true

[2] -> [2];
[1,2] -> [2,1];
[2,1] -> [1,2];
[2,3,0] -> [0,3,2];
[3] -> [3];
[2,3,3] -> [3,3,2];
[1,2,3] -> [3,2,1];
[3,1,2] -> [2,1,3];
[1,1] -> [1,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0149 true

[1,2] -> [2,1];
[0] -> [0];
[2,3] -> [3,2];
[3,0,3] -> [3,0,3];
[0,0] -> [0,0];
[1,1] -> [1,1];
[0,3] -> [3,0];
[2] -> [2];
[3,0,2] -> [2,0,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0129 true

[2] -> [2];
[1,2] -> [2,1];
[0,2,0] -> [0,2,0];
[2,1,0] -> [0,1,2];
[2,3] -> [3,2];
[0,0] -> [0,0];
[1,1,1] -> [1,1,1];
[0,3] -> [3,0];
[3,0,3] -> [3,0,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0163 true

[1,1] -> [1,1];
[0,1] -> [1,0];
[3,0,2] -> [2,0,3];
[1,2,2] -> [2,2,1];
[0,2,2] -> [2,2,0];
[0,3] -> [3,0];
[2] -> [2];
[3,2,1] -> [1,2,3];
[2,2,3] -> [3,2,2];
[3,1,0] -> [0,1,3];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0197 true

[3,0] -> [0,3];
[1] -> [1];
[0,0] -> [0,0];
[3,1,0] -> [0,1,3];
[1,3] -> [3,1];
[2,2,3] -> [3,2,2];
[2,1] -> [1,2];
[2,1,0] -> [0,1,2];
[0,2] -> [2,0];
[1,2] -> [2,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0157 true

[0,0,0] -> [0,0,0];
[2,3,2] -> [2,3,2];
[3,1] -> [1,3];
[3] -> [3];
[1] -> [1];
[0,2] -> [2,0];
[0,3,1] -> [1,3,0];
[1,1,1] -> [1,1,1];
[1,3] -> [3,1];
[0] -> [0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0145 true

[2,2] -> [2,2];
[3,3,3] -> [3,3,3];
[2,0,0] -> [0,0,2];
[2,0] -> [0,2];
[2,1] -> [1,2];
[1,1,3] -> [3,1,1];
[1,3] -> [3,1];
[0,3] -> [3,0];
[3,1] -> [1,3];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0168 true

[1,0,1] -> [1,0,1];
[3,0,2] -> [2,0,3];
[1] -> [1];
[3] -> [3];
[3,0,1] -> [1,0,3];
[0] -> [0];
[3,0,0] -> [0,0,3];
[3,3] -> [3,3];
[2,0] -> [0,2];
[0,1] -> [1,0];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0153 true

[2,3,1] -> [1,3,2];
[3,0] -> [0,3];
[0,2,0] -> [0,2,0];
[0,0] -> [0,0];
[1,3] -> [3,1];
[0,3,3] -> [3,3,0];
[2] -> [2];
[0] -> [0];
[1] -> [1];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0147 true

[3,3] -> [3,3];
[1] -> [1];
[3,1,1] -> [1,1,3];
[3,2] -> [2,3];
[2,0,0] -> [0,0,2];
[3,1] -> [1,3];
[1,1] -> [1,1];
[1,2,1] -> [1,2,1];
[2,2] -> [2,2];
[1,0,0] -> [0,0,1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0181 true

[3,1] -> [1,3];
[3,1,3] -> [3,1,3];
[0,3] -> [3,0];
[3,0,0] -> [0,0,3];
[0,1] -> [1,0];
[0] -> [0];
[2] -> [2];
[2,1,1] -> [1,1,2];
[2,2,3] -> [3,2,2];
[1] -> [1];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0165 true

[0] -> [0];
[1,1] -> [1,1];
[1] -> [1];
[3,0] -> [0,3];
[0,1,1] -> [1,1,0];
[1,3,3] -> [3,3,1];
[3,1] -> [1,3];
[3] -> [3];
[3,2,0] -> [0,2,3];
[2,0] -> [0,2];
[] -> [];

=================================
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x

0.0140 true

