(isEven,[1,3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) = fun (x:(nat -> bool) * list) -> Nil

0.0008 false

(isEven,[2,3,3]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 1) . 0, Nil)

0.0043 false

(isEven,[1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) = fun (x:(nat -> bool) * list) -> Nil

0.0009 false

(isEven,[0,2]) -> [0,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) -> x . 1

0.0012 false

(isEven,[3,1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) = fun (x:(nat -> bool) * list) -> Nil

0.0009 false

(isNonzero,[0,0,0]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) = fun (x:(nat -> bool) * list) -> Nil

0.0009 false

(isNonzero,[1]) -> [1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) -> x . 1

0.0009 false

(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) -> x . 1

0.0010 false

(isEven,[1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) = fun (x:(nat -> bool) * list) -> Nil

0.0009 false

(isNonzero,[0,1]) -> [1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Un_Cons (x . 1) . 1

0.0041 false

(isEven,[2,0]) -> [2,0];
(isNonzero,[1,2,1]) -> [1,2,1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) -> x . 1

0.0015 false

(isNonzero,[2,2]) -> [2,2];
(isNonzero,[0]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> x . 1)

0.0065 false

(isEven,[1,2]) -> [2];
(isEven,[1,1]) -> [];
(isEven, []) -> [];

=================================
None
(isNonzero,[1,1,2]) -> [1,1,2];
(isNonzero,[0,3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> x . 1)

0.0091 false

(isEven,[0,0,0]) -> [0,0,0];
(isNonzero,[1,2,0]) -> [1,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 0 1 with
      | F _ -> x . 1
      | T _ -> Cons (1, Cons (2, Nil))

0.0099 false

(isEven,[2]) -> [2];
(isNonzero,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) -> x . 1

0.0012 false

(isEven,[2]) -> [2];
(isEven,[1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0046 false

(isNonzero,[1]) -> [1];
(isEven,[3,1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 0 0 with
      | F _ -> x . 1
      | T _ -> Nil

0.0063 false

(isNonzero,[3,3]) -> [3,3];
(isNonzero,[3,0,2]) -> [3,2];
(isEven, []) -> [];

=================================
None
(isNonzero,[3,2]) -> [3,2];
(isEven,[0,3]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                     | S _ -> x . 1)

0.0097 false

(isEven,[1,3]) -> [];
(isNonzero,[1]) -> [1];
(isNonzero,[0,1,0]) -> [1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 0 0 with
      | F _ -> Cons (1, Nil)
      | T _ -> Nil

0.0070 false

(isEven,[0,3,0]) -> [0,0];
(isEven,[3,1]) -> [];
(isNonzero,[1,3,1]) -> [1,3,1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 0 0 with
      | F _ -> x . 1
      | T _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0,
                                                 Cons (0, Nil))
                                 | S _ -> Nil))

0.0141 false

(isEven,[2]) -> [2];
(isNonzero,[2,3]) -> [2,3];
(isEven,[3,1,2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (2, Nil)
                     | T _ -> x . 1)

0.0119 false

(isNonzero,[2,0,0]) -> [2];
(isNonzero,[1,1,0]) -> [1,1];
(isEven,[1,2,3]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven S (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                     | T _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                 | F _ -> Cons (2, Nil)
                                 | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                 Cons (1, Nil))))

0.0174 false

(isNonzero,[0]) -> [];
(isNonzero,[0,2]) -> [2];
(isEven,[2,1,1]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0083 false

(isEven,[0,0]) -> [0,0];
(isNonzero,[3,3]) -> [3,3];
(isEven,[3,2,0]) -> [2,0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0143 false

(isEven,[3,3,1]) -> [];
(isEven,[0,1]) -> [0];
(isNonzero,[1]) -> [1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0, Nil))

0.0093 false

(isNonzero,[2,1]) -> [2,1];
(isEven,[1,2]) -> [2];
(isNonzero,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0120 false

(isEven,[3,0,1]) -> [0];
(isNonzero,[3,0,3]) -> [3,3];
(isNonzero,[2,0]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven S (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                     | T _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                 | F _ -> Cons (0, Nil)
                                 | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                 Cons (Un_Cons (x . 1) . 0,
                                                        Nil))))

0.0235 false

(isNonzero,[2]) -> [2];
(isEven,[1]) -> [];
(isNonzero,[0,1,3]) -> [1,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0106 false

(isEven,[2,1]) -> [2];
(isEven,[3]) -> [];
(isEven,[0]) -> [0];
(isNonzero,[2,1]) -> [2,1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> (match x . 0 S (Un_Cons (x . 1) . 0) with
                                 | F _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                                 | T _ -> x . 1))

0.0308 false

(isNonzero,[0,3,1]) -> [3,1];
(isNonzero,[2,1,3]) -> [2,1,3];
(isNonzero,[2]) -> [2];
(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0184 false

(isEven,[0,0]) -> [0,0];
(isEven,[3]) -> [];
(isNonzero,[3,2]) -> [3,2];
(isEven,[1,3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> x . 1)

0.0114 false

(isNonzero,[1,0,2]) -> [1,2];
(isNonzero,[1,0]) -> [1];
(isEven,[2,0]) -> [2,0];
(isNonzero,[0,3,3]) -> [3,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> (match Un_S (Un_Cons (x . 1) . 0) with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (x . 0,
                                                     Un_Cons (x . 1) . 1))
                                 | S _ -> x . 1))

0.0395 false

(isNonzero,[3,1]) -> [3,1];
(isNonzero,[1]) -> [1];
(isNonzero,[0]) -> [];
(isNonzero,[0,3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> Un_Cons (x . 1) . 1
                     | S _ -> x . 1)

0.0098 false

(isEven,[3,1]) -> [];
(isNonzero,[3]) -> [3];
(isNonzero,[1,0]) -> [1];
(isNonzero,[1,2]) -> [1,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0123 false

(isEven,[3,2,3]) -> [2];
(isNonzero,[1]) -> [1];
(isNonzero,[2]) -> [2];
(isNonzero,[2,3,0]) -> [2,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (2, Nil)
                     | T _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Cons (S (Un_Cons (x . 1)
                                                               . 0),
                                                           Nil))))

0.0305 false

(isEven,[1,2]) -> [2];
(isEven,[0]) -> [0];
(isNonzero,[3]) -> [3];
(isEven,[3,3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> x . 1)

0.0127 false

(isNonzero,[3,1,3]) -> [3,1,3];
(isNonzero,[0]) -> [];
(isNonzero,[1]) -> [1];
(isEven,[0,1]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0150 false

(isEven,[0,1]) -> [0];
(isNonzero,[2,1,0]) -> [2,1];
(isNonzero,[0]) -> [];
(isNonzero,[2,0,2]) -> [2,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0169 false

(isNonzero,[2,0,0]) -> [2];
(isNonzero,[3,2]) -> [3,2];
(isEven,[2,2,1]) -> [2,2];
(isEven,[2,1]) -> [2];
(isEven,[2,3]) -> [2];
(isEven, []) -> [];

=================================
None
(isNonzero,[1]) -> [1];
(isNonzero,[1,2]) -> [1,2];
(isNonzero,[1,0]) -> [1];
(isEven,[2]) -> [2];
(isEven,[3,0,3]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (0, Nil)
                     | T _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 0 with
                                                | O _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                Nil)
                                                | S _ -> x . 1)))

0.0732 false

(isNonzero,[3,3]) -> [3,3];
(isNonzero,[0,1]) -> [1];
(isEven,[1]) -> [];
(isEven,[2,2,2]) -> [2,2,2];
(isNonzero,[2,0]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0192 false

(isNonzero,[2]) -> [2];
(isNonzero,[0,2]) -> [2];
(isNonzero,[1,2,0]) -> [1,2];
(isNonzero,[3,2]) -> [3,2];
(isEven,[0,0,2]) -> [0,0,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0258 false

(isEven,[1,3,2]) -> [2];
(isEven,[3,1,2]) -> [2];
(isEven,[0,3,3]) -> [0];
(isNonzero,[2,2]) -> [2,2];
(isEven,[1,0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (isEven, Un_Cons (x . 1) . 1)))

0.0183 false

(isEven,[2,2]) -> [2,2];
(isEven,[3]) -> [];
(isEven,[1,2,3]) -> [2];
(isNonzero,[1,0]) -> [1];
(isNonzero,[3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0161 true

(isNonzero,[1,0,0]) -> [1];
(isEven,[0,0,0]) -> [0,0,0];
(isEven,[2,3,3]) -> [2];
(isEven,[2,3]) -> [2];
(isNonzero,[0,1]) -> [1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> x . 1
                                 | S _ -> Cons (Un_Cons (x . 1) . 0, Nil)))

0.0269 false

(isNonzero,[0,0]) -> [];
(isNonzero,[2,3,0]) -> [2,3];
(isNonzero,[1,1]) -> [1,1];
(isNonzero,[3]) -> [3];
(isEven,[3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0146 false

(isNonzero,[1,1]) -> [1,1];
(isNonzero,[1,3,3]) -> [1,3,3];
(isNonzero,[2]) -> [2];
(isEven,[0,2]) -> [0,2];
(isNonzero,[0,3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0221 false

(isNonzero,[0,1,1]) -> [1,1];
(isNonzero,[3]) -> [3];
(isEven,[1]) -> [];
(isNonzero,[1,2,3]) -> [1,2,3];
(isEven,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0178 false

(isEven,[1]) -> [];
(isNonzero,[3,0]) -> [3];
(isEven,[3]) -> [];
(isEven,[0,3,2]) -> [0,2];
(isEven,[0,3]) -> [0];
(isNonzero,[3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0175 false

(isNonzero,[2,2,1]) -> [2,2,1];
(isNonzero,[1,1,1]) -> [1,1,1];
(isNonzero,[3,3,0]) -> [3,3];
(isEven,[3,3,1]) -> [];
(isNonzero,[3,2,2]) -> [3,2,2];
(isEven,[0,3]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0259 false

(isEven,[1,0]) -> [0];
(isEven,[0,3]) -> [0];
(isNonzero,[3,1]) -> [3,1];
(isEven,[3]) -> [];
(isEven,[1,3,1]) -> [];
(isNonzero,[1,2]) -> [1,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 0 0 with
      | F _ -> x . 1
      | T _ -> (match x . 1 with
                  | Nil _ -> x . 1
                  | Cons _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> Cons (Un_Cons (x . 1) . 0, Nil)
                                 | S _ -> f (x . 0, Un_Cons (x . 1) . 1)))

0.0245 false

(isEven,[2]) -> [2];
(isEven,[1,3]) -> [];
(isNonzero,[3,2,1]) -> [3,2,1];
(isNonzero,[2,1]) -> [2,1];
(isNonzero,[2]) -> [2];
(isEven,[3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> x . 1)

0.0153 false

(isEven,[0,0]) -> [0,0];
(isNonzero,[0]) -> [];
(isEven,[2]) -> [2];
(isEven,[0]) -> [0];
(isNonzero,[2]) -> [2];
(isNonzero,[1,1]) -> [1,1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0159 false

(isNonzero,[3,1,2]) -> [3,1,2];
(isEven,[3]) -> [];
(isEven,[2,3]) -> [2];
(isEven,[0,0,2]) -> [0,0,2];
(isEven,[2,2]) -> [2,2];
(isNonzero,[3,0]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0257 false

(isNonzero,[2,3]) -> [2,3];
(isNonzero,[1]) -> [1];
(isNonzero,[3,3,0]) -> [3,3];
(isNonzero,[2]) -> [2];
(isEven,[1,1,3]) -> [];
(isEven,[3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0162 false

(isEven,[3,2]) -> [2];
(isEven,[1,1,1]) -> [];
(isNonzero,[1]) -> [1];
(isNonzero,[3]) -> [3];
(isEven,[2]) -> [2];
(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 1 with
                                    | Nil _ -> Un_Cons (x . 1) . 1
                                    | Cons _ -> Nil))

0.0206 false

(isEven,[0,2,3]) -> [0,2];
(isEven,[1,1,1]) -> [];
(isEven,[0]) -> [0];
(isEven,[3,3,0]) -> [0];
(isNonzero,[0,2]) -> [2];
(isEven,[2,1]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 S (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1))
                     | T _ -> f (isEven, Un_Cons (x . 1) . 1))

0.0193 false

(isEven,[0]) -> [0];
(isNonzero,[0,2]) -> [2];
(isEven,[2]) -> [2];
(isNonzero,[3,1]) -> [3,1];
(isEven,[0,1]) -> [0];
(isNonzero,[2,3,0]) -> [2,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0226 false

(isEven,[2,3,3]) -> [2];
(isNonzero,[3,0,3]) -> [3,3];
(isNonzero,[1]) -> [1];
(isEven,[1,1]) -> [];
(isNonzero,[3]) -> [3];
(isEven,[2,3,1]) -> [2];
(isEven,[0,1,0]) -> [0,0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 0 with
                     | F _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 1))
                     | T _ -> (match isEven (Un_Cons (x . 1) . 0) with
                                 | F _ -> Nil
                                 | T _ -> (match Un_Cons (x . 1) . 0 with
                                             | O _ -> Cons (Un_Cons (x . 1) .
                                                              0,
                                                             Cons (0, Nil))
                                             | S _ -> Cons (Un_Cons (x . 1) .
                                                              0,
                                                             Nil))))

0.5249 false

(isEven,[1,3]) -> [];
(isNonzero,[0,1]) -> [1];
(isNonzero,[2]) -> [2];
(isEven,[2,3,0]) -> [2,0];
(isEven,[1,1,0]) -> [0];
(isNonzero,[0,1,1]) -> [1,1];
(isEven,[2,1,1]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0335 true

(isNonzero,[2,3]) -> [2,3];
(isNonzero,[2,0]) -> [2];
(isEven,[3]) -> [];
(isEven,[2,1]) -> [2];
(isEven,[3,1,0]) -> [0];
(isNonzero,[0,3]) -> [3];
(isNonzero,[3]) -> [3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0211 true

(isEven,[3,2,1]) -> [2];
(isEven,[0,1,0]) -> [0,0];
(isNonzero,[1]) -> [1];
(isNonzero,[3]) -> [3];
(isNonzero,[3,0]) -> [3];
(isEven,[3,3]) -> [];
(isEven,[1,0,3]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0236 true

(isEven,[3,0,2]) -> [0,2];
(isNonzero,[0]) -> [];
(isNonzero,[0,2,3]) -> [2,3];
(isEven,[1,0]) -> [0];
(isNonzero,[0,3,3]) -> [3,3];
(isEven,[1]) -> [];
(isNonzero,[1,3,1]) -> [1,3,1];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> x . 1)

0.0248 false

(isNonzero,[3]) -> [3];
(isEven,[0,3,3]) -> [0];
(isNonzero,[1,1,0]) -> [1,1];
(isNonzero,[1,2]) -> [1,2];
(isEven,[0,0]) -> [0,0];
(isEven,[3,0]) -> [0];
(isEven,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> x . 1
                     | Cons _ -> (match Un_Cons (Un_Cons (x . 1) . 1) . 1 with
                                    | Nil _ -> (match x . 0
                                                        (Un_Cons (x . 1) . 0) with
                                                  | F _ -> Un_Cons (x . 1) .
                                                             1
                                                  | T _ -> x . 1)
                                    | Cons _ -> (match Un_Cons (x . 1) . 0 with
                                                   | O _ -> Cons (Un_Cons (
                                                                    x . 1) .
                                                                    0,
                                                                   Nil)
                                                   | S _ -> Cons (Un_Cons (
                                                                    x . 1) .
                                                                    0,
                                                                   Cons 
                                                                    (1, 
                                                                    Nil)))))

1.3077 false

(isNonzero,[2,0,3]) -> [2,3];
(isEven,[2,2]) -> [2,2];
(isEven,[0]) -> [0];
(isNonzero,[2]) -> [2];
(isEven,[2,2,3]) -> [2,2];
(isEven,[2,0,3]) -> [2,0];
(isEven,[1,1,0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 0 with
                     | F _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 1))
                     | T _ -> (match isEven (Un_Cons (x . 1) . 0) with
                                 | F _ -> Cons (0, Nil)
                                 | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (isNonzero,
                                                     Un_Cons (x . 1) . 1))))

0.1942 false

(isNonzero,[2,0,0]) -> [2];
(isNonzero,[0,0]) -> [];
(isNonzero,[3,0,1]) -> [3,1];
(isEven,[1]) -> [];
(isNonzero,[0]) -> [];
(isNonzero,[2,2,2]) -> [2,2,2];
(isNonzero,[1,2,3]) -> [1,2,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match isEven (Un_Cons (x . 1) . 0) with
                     | F _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> Un_Cons (x . 1) . 1
                                 | Cons _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 0 with
                                                | O _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                Cons (1, Nil))
                                                | S _ -> x . 1))
                     | T _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> Nil
                                 | S _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (isEven,
                                                     Un_Cons (x . 1) . 1))))

0.6598 false

(isNonzero,[1,0]) -> [1];
(isNonzero,[1,1]) -> [1,1];
(isEven,[3,0]) -> [0];
(isEven,[1]) -> [];
(isNonzero,[1,2,3]) -> [1,2,3];
(isEven,[3,1]) -> [];
(isNonzero,[0,0,0]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> Nil
                                 | S _ -> f (x . 0, Un_Cons (x . 1) . 1))
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (isNonzero, Un_Cons (x . 1) . 1)))

0.0297 false

(isEven,[3,3]) -> [];
(isNonzero,[0]) -> [];
(isEven,[0]) -> [0];
(isEven,[1,3]) -> [];
(isEven,[1,1,2]) -> [2];
(isNonzero,[3]) -> [3];
(isEven,[3]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> x . 1)

0.0209 false

(isNonzero,[0]) -> [];
(isEven,[0]) -> [0];
(isEven,[0,1,2]) -> [0,2];
(isEven,[2]) -> [2];
(isEven,[1,1]) -> [];
(isEven,[3,0]) -> [0];
(isNonzero,[3,1,3]) -> [3,1,3];
(isNonzero,[2,0,2]) -> [2,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0288 true

(isNonzero,[1,1]) -> [1,1];
(isEven,[2,2,3]) -> [2,2];
(isEven,[3]) -> [];
(isNonzero,[0,1,3]) -> [1,3];
(isNonzero,[3,3]) -> [3,3];
(isEven,[1]) -> [];
(isNonzero,[0]) -> [];
(isEven,[1,2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0287 false

(isEven,[3,2]) -> [2];
(isNonzero,[2,0]) -> [2];
(isNonzero,[1,1,3]) -> [1,1,3];
(isNonzero,[0,0,1]) -> [1];
(isEven,[2,2,1]) -> [2,2];
(isEven,[0,0]) -> [0,0];
(isNonzero,[2]) -> [2];
(isEven,[2,2]) -> [2,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0389 true

(isEven,[0,2,0]) -> [0,2,0];
(isNonzero,[1,3]) -> [1,3];
(isNonzero,[3,3]) -> [3,3];
(isEven,[1,1,2]) -> [2];
(isNonzero,[3]) -> [3];
(isEven,[2,3]) -> [2];
(isEven,[3]) -> [];
(isEven,[1,0,2]) -> [0,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0314 true

(isNonzero,[3]) -> [3];
(isEven,[1,1]) -> [];
(isEven,[2,1,3]) -> [2];
(isEven,[0,2]) -> [0,2];
(isNonzero,[2,2,0]) -> [2,2];
(isEven,[0,2,3]) -> [0,2];
(isNonzero,[1]) -> [1];
(isNonzero,[3,3]) -> [3,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0331 false

(isNonzero,[0,0,2]) -> [2];
(isNonzero,[3,2]) -> [3,2];
(isEven,[0,3]) -> [0];
(isEven,[1,0]) -> [0];
(isEven,[1,1,1]) -> [];
(isEven,[3]) -> [];
(isNonzero,[1,2,1]) -> [1,2,1];
(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> (match Un_Cons (x . 1) . 0 with
                                 | O _ -> Cons (2, Nil)
                                 | S _ -> f (x . 0, Un_Cons (x . 1) . 1))
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0546 false

(isNonzero,[1]) -> [1];
(isEven,[3,1]) -> [];
(isEven,[1,1,1]) -> [];
(isNonzero,[3,0,1]) -> [3,1];
(isEven,[3]) -> [];
(isEven,[0,3,3]) -> [0];
(isEven,[2]) -> [2];
(isEven,[0,1,1]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 0 with
                     | F _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Cons (Un_Cons (x . 1) . 0,
                                                    Cons (1, Nil)))
                     | T _ -> (match isEven (Un_Cons (x . 1) . 0) with
                                 | F _ -> Nil
                                 | T _ -> Cons (Un_Cons (x . 1) . 0, Nil)))

0.0628 false

(isEven,[0,1]) -> [0];
(isEven,[3,0,0]) -> [0,0];
(isNonzero,[3,1]) -> [3,1];
(isEven,[3]) -> [];
(isNonzero,[2,3]) -> [2,3];
(isNonzero,[3,2]) -> [3,2];
(isEven,[1,0,2]) -> [0,2];
(isNonzero,[1,2]) -> [1,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0352 false

(isNonzero,[1,3]) -> [1,3];
(isEven,[3,1]) -> [];
(isNonzero,[1,2]) -> [1,2];
(isEven,[2]) -> [2];
(isNonzero,[2]) -> [2];
(isNonzero,[1]) -> [1];
(isEven,[2,3]) -> [2];
(isEven,[3,1,1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0269 false

(isNonzero,[0]) -> [];
(isNonzero,[3]) -> [3];
(isNonzero,[3,0,3]) -> [3,3];
(isEven,[3,2]) -> [2];
(isNonzero,[3,0,2]) -> [3,2];
(isNonzero,[1,3,1]) -> [1,3,1];
(isNonzero,[1,2]) -> [1,2];
(isEven,[3,0,0]) -> [0,0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0346 false

(isEven,[2,2]) -> [2,2];
(isNonzero,[3,0]) -> [3];
(isEven,[1,1,0]) -> [0];
(isNonzero,[3]) -> [3];
(isNonzero,[3,0,1]) -> [3,1];
(isNonzero,[3,1,0]) -> [3,1];
(isNonzero,[2,1]) -> [2,1];
(isEven,[1]) -> [];
(isEven,[1,2,3]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0356 true

(isNonzero,[1,3]) -> [1,3];
(isEven,[0]) -> [0];
(isEven,[1]) -> [];
(isNonzero,[2,0,3]) -> [2,3];
(isEven,[1,0]) -> [0];
(isNonzero,[2]) -> [2];
(isNonzero,[2,2]) -> [2,2];
(isNonzero,[3,1]) -> [3,1];
(isEven,[3,0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0401 false

(isNonzero,[1,3,0]) -> [1,3];
(isEven,[2]) -> [2];
(isEven,[3]) -> [];
(isEven,[1,1]) -> [];
(isEven,[0,1]) -> [0];
(isNonzero,[3,2,2]) -> [3,2,2];
(isEven,[0]) -> [0];
(isNonzero,[1,3]) -> [1,3];
(isEven,[0,0,0]) -> [0,0,0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0339 false

(isNonzero,[2,1]) -> [2,1];
(isNonzero,[0,0,1]) -> [1];
(isEven,[2]) -> [2];
(isNonzero,[1]) -> [1];
(isNonzero,[1,0,2]) -> [1,2];
(isNonzero,[0,2]) -> [2];
(isEven,[3]) -> [];
(isNonzero,[3,3,1]) -> [3,3,1];
(isEven,[0,2,3]) -> [0,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0385 true

(isNonzero,[3,1]) -> [3,1];
(isEven,[3,3,0]) -> [0];
(isNonzero,[2,1,3]) -> [2,1,3];
(isEven,[2,3,0]) -> [2,0];
(isNonzero,[3]) -> [3];
(isEven,[1,3,1]) -> [];
(isEven,[1,2,0]) -> [2,0];
(isNonzero,[0,0]) -> [];
(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> Un_Cons (Un_Cons (x . 1) . 1) .
                                               1)
                     | S _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                 | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                                 | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (x . 0,
                                                     Un_Cons (x . 1) . 1))))

0.0695 false

(isEven,[0,0]) -> [0,0];
(isEven,[0,3,1]) -> [0];
(isNonzero,[2,2]) -> [2,2];
(isEven,[0,2]) -> [0,2];
(isNonzero,[1,0,3]) -> [1,3];
(isEven,[2,2]) -> [2,2];
(isEven,[1,3,2]) -> [2];
(isEven,[2,1]) -> [2];
(isEven,[1,2,2]) -> [2,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0482 true

(isEven,[3]) -> [];
(isEven,[3,2]) -> [2];
(isNonzero,[2]) -> [2];
(isEven,[2,1]) -> [2];
(isEven,[0]) -> [0];
(isEven,[0,0]) -> [0,0];
(isEven,[2,3,2]) -> [2,2];
(isEven,[0,0,3]) -> [0,0];
(isNonzero,[2,3]) -> [2,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 S (Un_Cons (x . 1) . 0) with
                     | F _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1))
                     | T _ -> (match isEven (Un_Cons (x . 1) . 0) with
                                 | F _ -> Un_Cons (x . 1) . 1
                                 | T _ -> x . 1))

0.1011 false

(isNonzero,[3]) -> [3];
(isEven,[2,0,3]) -> [2,0];
(isNonzero,[0,3]) -> [3];
(isNonzero,[0,2,1]) -> [2,1];
(isEven,[3,0]) -> [0];
(isEven,[1,3,1]) -> [];
(isNonzero,[1,3]) -> [1,3];
(isEven,[3]) -> [];
(isNonzero,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 1 with
                     | Nil _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                   | F _ -> Un_Cons (x . 1) . 1
                                   | T _ -> x . 1)
                     | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                    | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                                    | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                    f
                                                      (x . 0,
                                                        Un_Cons (x . 1) . 1))))

0.0553 true

(isEven,[2]) -> [2];
(isNonzero,[1]) -> [1];
(isEven,[1,1]) -> [];
(isNonzero,[2,2]) -> [2,2];
(isNonzero,[1,3,0]) -> [1,3];
(isNonzero,[0,0]) -> [];
(isEven,[0,0]) -> [0,0];
(isEven,[0,1,3]) -> [0];
(isNonzero,[3,2,0]) -> [3,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0303 false

(isEven,[2,0]) -> [2,0];
(isEven,[3,3]) -> [];
(isNonzero,[1]) -> [1];
(isEven,[1]) -> [];
(isNonzero,[1,2]) -> [1,2];
(isNonzero,[1,1]) -> [1,1];
(isNonzero,[0]) -> [];
(isEven,[3]) -> [];
(isEven,[2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> x . 1)

0.0280 false

(isEven,[3,2,2]) -> [2,2];
(isNonzero,[1,1]) -> [1,1];
(isEven,[3,2,3]) -> [2];
(isEven,[2,1,2]) -> [2,2];
(isEven,[2]) -> [2];
(isNonzero,[2]) -> [2];
(isNonzero,[1]) -> [1];
(isNonzero,[0,0,1]) -> [1];
(isEven,[1]) -> [];
(isEven,[0,0,1]) -> [0,0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0441 true

(isNonzero,[0,2,1]) -> [2,1];
(isNonzero,[3,1]) -> [3,1];
(isEven,[0]) -> [0];
(isEven,[1,3,0]) -> [0];
(isNonzero,[3]) -> [3];
(isNonzero,[0,1,3]) -> [1,3];
(isEven,[2,0]) -> [2,0];
(isEven,[2,1,0]) -> [2,0];
(isNonzero,[3,2]) -> [3,2];
(isNonzero,[3,3,0]) -> [3,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0562 true

(isNonzero,[1,3]) -> [1,3];
(isNonzero,[0]) -> [];
(isEven,[0,1]) -> [0];
(isNonzero,[1,2]) -> [1,2];
(isEven,[0]) -> [0];
(isNonzero,[3,2,3]) -> [3,2,3];
(isNonzero,[1]) -> [1];
(isEven,[2,3]) -> [2];
(isEven,[3]) -> [];
(isEven,[1]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0347 false

(isEven,[2,1]) -> [2];
(isNonzero,[0,1,0]) -> [1];
(isNonzero,[3]) -> [3];
(isEven,[2,1,2]) -> [2,2];
(isNonzero,[1,3,3]) -> [1,3,3];
(isNonzero,[1]) -> [1];
(isEven,[0,0]) -> [0,0];
(isNonzero,[0,1,3]) -> [1,3];
(isEven,[3,0,1]) -> [0];
(isNonzero,[0,0]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0406 true

(isNonzero,[0]) -> [];
(isEven,[1,1,1]) -> [];
(isEven,[0]) -> [0];
(isEven,[2,3,3]) -> [2];
(isNonzero,[2,1,1]) -> [2,1,1];
(isEven,[2]) -> [2];
(isEven,[2,3]) -> [2];
(isNonzero,[3,2,3]) -> [3,2,3];
(isEven,[0,2]) -> [0,2];
(isEven,[3,2]) -> [2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match Un_Cons (x . 1) . 0 with
                     | O _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                 | F _ -> Un_Cons (x . 1) . 1
                                 | T _ -> x . 1)
                     | S _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                                 | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                                 | T _ -> Cons (Un_Cons (x . 1) . 0,
                                                 f
                                                   (x . 0,
                                                     Un_Cons (x . 1) . 1))))

0.0715 false

(isEven,[0]) -> [0];
(isEven,[1,0,2]) -> [0,2];
(isNonzero,[1,2,2]) -> [1,2,2];
(isNonzero,[0]) -> [];
(isNonzero,[3]) -> [3];
(isEven,[0,0,3]) -> [0,0];
(isNonzero,[2,1,0]) -> [2,1];
(isEven,[1]) -> [];
(isNonzero,[2,3]) -> [2,3];
(isEven,[2,2,3]) -> [2,2];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0347 false

(isEven,[1,0,3]) -> [0];
(isNonzero,[2,3]) -> [2,3];
(isEven,[3,3]) -> [];
(isNonzero,[1]) -> [1];
(isEven,[0,2]) -> [0,2];
(isEven,[2,2,2]) -> [2,2,2];
(isEven,[2,0,1]) -> [2,0];
(isNonzero,[2]) -> [2];
(isNonzero,[1,0,3]) -> [1,3];
(isEven,[0]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0369 true

(isEven,[0,2]) -> [0,2];
(isEven,[1,2,0]) -> [2,0];
(isNonzero,[0,1,3]) -> [1,3];
(isEven,[2]) -> [2];
(isEven,[1]) -> [];
(isEven,[3]) -> [];
(isEven,[1,0,0]) -> [0,0];
(isNonzero,[0,2]) -> [2];
(isNonzero,[1,0]) -> [1];
(isEven,[0,1]) -> [0];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Un_Cons (x . 1) . 1
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0364 false

(isEven,[3,0]) -> [0];
(isEven,[3,1]) -> [];
(isEven,[2,1]) -> [2];
(isEven,[2]) -> [2];
(isEven,[1,1]) -> [];
(isNonzero,[2,2,1]) -> [2,2,1];
(isEven,[0,3]) -> [0];
(isEven,[1,0,1]) -> [0];
(isNonzero,[0]) -> [];
(isNonzero,[0,0]) -> [];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> f (x . 0, Un_Cons (x . 1) . 1)
                     | T _ -> Cons (Un_Cons (x . 1) . 0,
                                     f (x . 0, Un_Cons (x . 1) . 1)))

0.0357 true

(isEven,[1,1]) -> [];
(isNonzero,[3,0,2]) -> [3,2];
(isEven,[0,2,1]) -> [0,2];
(isNonzero,[3,3,2]) -> [3,3,2];
(isNonzero,[2,0,3]) -> [2,3];
(isEven,[0,1]) -> [0];
(isEven,[2,2]) -> [2,2];
(isNonzero,[2]) -> [2];
(isNonzero,[1,2]) -> [1,2];
(isNonzero,[3,3]) -> [3,3];
(isEven, []) -> [];

=================================
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | F _ -> Nil
                     | T _ -> (match Un_Cons (x . 1) . 1 with
                                 | Nil _ -> x . 1
                                 | Cons _ -> (match Un_Cons (Un_Cons (x . 1)
                                                               . 1)
                                                      . 0 with
                                                | O _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                Un_Cons (
                                                                  Un_Cons (
                                                                    x . 1) .
                                                                    1)
                                                                  . 1)
                                                | S _ -> Cons (Un_Cons (
                                                                 x . 1) . 0,
                                                                f
                                                                  (x . 0,
                                                                    Un_Cons (
                                                                    x . 1) .
                                                                    1)))))

6.6153 false

